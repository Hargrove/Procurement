

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Profitcenter : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Profitcenter entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Profitcenter()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Profitcenter(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Profitcenter> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Profitcenter.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Profitcenter_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Profitcenter_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Profitcenter.DetailsClass.GetValue(this, global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProfitCenter1
        {
            get
            {
                return global::LightSwitchApplication.Profitcenter.DetailsClass.GetValue(this, global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ProfitCenter1);
            }
            set
            {
                global::LightSwitchApplication.Profitcenter.DetailsClass.SetValue(this, global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ProfitCenter1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProfitCenter1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProfitCenter1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProfitCenter1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.Profitcenter.DetailsClass.GetValue(this, global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.Projects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project> ProjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.Profitcenter.DetailsClass.GetQuery(this, global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.Projects);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Profitcenter,
                global::LightSwitchApplication.Profitcenter.DetailsClass,
                global::LightSwitchApplication.Profitcenter.DetailsClass.IImplementation,
                global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>.Entry
                __ProfitcenterEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>.Entry(
                    global::LightSwitchApplication.Profitcenter.DetailsClass.__Profitcenter_CreateNew,
                    global::LightSwitchApplication.Profitcenter.DetailsClass.__Profitcenter_Created,
                    global::LightSwitchApplication.Profitcenter.DetailsClass.__Profitcenter_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Profitcenter __Profitcenter_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Profitcenter> es)
            {
                return new global::LightSwitchApplication.Profitcenter(es);
            }
            private static void __Profitcenter_Created(global::LightSwitchApplication.Profitcenter e)
            {
                e.Profitcenter_Created();
            }
            private static bool __Profitcenter_AllowSaveWithErrors(global::LightSwitchApplication.Profitcenter e)
            {
                bool result = false;
                e.Profitcenter_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string> ProfitCenter1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.ProfitCenter1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.Projects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string ProfitCenter1 { get; set; }
                new global::System.Collections.IEnumerable Projects { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Profitcenter.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int>.Data> c, global::LightSwitchApplication.Profitcenter.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Profitcenter e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Profitcenter e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Profitcenter.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Profitcenter e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string>.Entry
                    ProfitCenter1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string>.Entry(
                        "ProfitCenter1",
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_Stub,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_Validate,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_GetImplementationValue,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_SetImplementationValue,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._ProfitCenter1_OnValueChanged);
                private static void _ProfitCenter1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Profitcenter.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string>.Data> c, global::LightSwitchApplication.Profitcenter.DetailsClass d, object sf)
                {
                    c(d, ref d._ProfitCenter1, sf);
                }
                private static bool _ProfitCenter1_ComputeIsReadOnly(global::LightSwitchApplication.Profitcenter e)
                {
                    bool result = false;
                    e.ProfitCenter1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProfitCenter1_Validate(global::LightSwitchApplication.Profitcenter e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProfitCenter1_Validate(r);
                }
                private static string _ProfitCenter1_GetImplementationValue(global::LightSwitchApplication.Profitcenter.DetailsClass d)
                {
                    return d.ImplementationEntity.ProfitCenter1;
                }
                private static void _ProfitCenter1_SetImplementationValue(global::LightSwitchApplication.Profitcenter.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProfitCenter1 = v;
                }
                private static void _ProfitCenter1_OnValueChanged(global::LightSwitchApplication.Profitcenter e)
                {
                    e.ProfitCenter1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._Projects_GetReferencedEntities,
                        global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties._Projects_GetEntityCollection);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Profitcenter.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Profitcenter.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> _Projects_GetReferencedEntities(global::LightSwitchApplication.Profitcenter.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Profitcenter.DetailsClass.PropertySetProperties.Projects, ref d._Projects);
                }
                private static global::System.Collections.IEnumerable _Projects_GetEntityCollection(global::LightSwitchApplication.Profitcenter.DetailsClass d)
                {
                    return d.ImplementationEntity.Projects;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, string>.Data _ProfitCenter1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Profitcenter, global::LightSwitchApplication.Profitcenter.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class CL : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CL entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CL()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CL(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CL> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CL.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CL_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CL_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientID
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientID);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Client
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Client);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Client, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExportInd
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ExportInd);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ExportInd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExportInd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExportInd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExportInd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WebSite
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WebSite);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WebSite, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSite_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSite_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WebSite_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Memo
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Memo);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Memo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Memo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Memo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Memo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CurrentStatus
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CurrentStatus);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CurrentStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CustomCurrencyCode
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CustomCurrencyCode);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CustomCurrencyCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomCurrencyCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomCurrencyCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomCurrencyCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientInd
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientInd);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientInd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientInd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientInd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientInd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VendorInd
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VendorInd);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VendorInd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorInd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorInd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VendorInd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LinkedVendor
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.LinkedVendor);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.LinkedVendor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkedVendor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkedVendor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LinkedVendor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PriorWork
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.PriorWork);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.PriorWork, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriorWork_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriorWork_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriorWork_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Recommend
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Recommend);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Recommend, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recommend_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recommend_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Recommend_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DisadvBusiness
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisadvBusiness);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisadvBusiness, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisadvBusiness_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisadvBusiness_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisadvBusiness_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DisabledVetOwnedSmallBusiness
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisabledVetOwnedSmallBusiness);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisabledVetOwnedSmallBusiness, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisabledVetOwnedSmallBusiness_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisabledVetOwnedSmallBusiness_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisabledVetOwnedSmallBusiness_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HBCU
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.HBCU);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.HBCU, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HBCU_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HBCU_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HBCU_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MinorityBusiness
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.MinorityBusiness);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.MinorityBusiness, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinorityBusiness_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinorityBusiness_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinorityBusiness_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SmallBusiness
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SmallBusiness);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SmallBusiness, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SmallBusiness_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SmallBusiness_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SmallBusiness_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VetOwnedSmallBusiness
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VetOwnedSmallBusiness);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VetOwnedSmallBusiness, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VetOwnedSmallBusiness_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VetOwnedSmallBusiness_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VetOwnedSmallBusiness_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string WomanOwned
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WomanOwned);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WomanOwned, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WomanOwned_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WomanOwned_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WomanOwned_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AlaskaNative
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.AlaskaNative);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.AlaskaNative, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlaskaNative_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlaskaNative_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AlaskaNative_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SpecialtyType
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SpecialtyType);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SpecialtyType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpecialtyType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpecialtyType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpecialtyType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Specialty
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Specialty);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Specialty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreateUser
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateUser);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateDate);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModUser
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModUser);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModDate
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModDate);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentID
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentID);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentLevel1
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel1);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentLevel2
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel2);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentLevel3
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel3);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentLevel4
        {
            get
            {
                return global::LightSwitchApplication.CL.DetailsClass.GetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel4);
            }
            set
            {
                global::LightSwitchApplication.CL.DetailsClass.SetValue(this, global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel4, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel4_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel4_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentLevel4_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CL,
                global::LightSwitchApplication.CL.DetailsClass,
                global::LightSwitchApplication.CL.DetailsClass.IImplementation,
                global::LightSwitchApplication.CL.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>.Entry
                __CLEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>.Entry(
                    global::LightSwitchApplication.CL.DetailsClass.__CL_CreateNew,
                    global::LightSwitchApplication.CL.DetailsClass.__CL_Created,
                    global::LightSwitchApplication.CL.DetailsClass.__CL_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CL __CL_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CL> es)
            {
                return new global::LightSwitchApplication.CL(es);
            }
            private static void __CL_Created(global::LightSwitchApplication.CL e)
            {
                e.CL_Created();
            }
            private static bool __CL_AllowSaveWithErrors(global::LightSwitchApplication.CL e)
            {
                bool result = false;
                e.CL_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CL.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ClientID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Client
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Client) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ExportInd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ExportInd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> WebSite
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WebSite) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Memo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Memo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> CurrentStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CurrentStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> CustomCurrencyCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CustomCurrencyCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ClientInd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ClientInd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> VendorInd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VendorInd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> LinkedVendor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.LinkedVendor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> PriorWork
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.PriorWork) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Recommend
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Recommend) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> DisadvBusiness
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisadvBusiness) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> DisabledVetOwnedSmallBusiness
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.DisabledVetOwnedSmallBusiness) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> HBCU
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.HBCU) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> MinorityBusiness
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.MinorityBusiness) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> SmallBusiness
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SmallBusiness) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> VetOwnedSmallBusiness
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.VetOwnedSmallBusiness) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> WomanOwned
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.WomanOwned) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> AlaskaNative
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.AlaskaNative) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> SpecialtyType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.SpecialtyType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> Specialty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.Specialty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> CreateUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>> CreateDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.CreateDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ModUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModUser) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>> ModDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ModDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ParentID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ParentLevel1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ParentLevel2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ParentLevel3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string> ParentLevel4
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties.ParentLevel4) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ClientID { get; set; }
                new string Client { get; set; }
                new string Name { get; set; }
                new string Type { get; set; }
                new string Status { get; set; }
                new string ExportInd { get; set; }
                new string WebSite { get; set; }
                new string Memo { get; set; }
                new string CurrentStatus { get; set; }
                new string CustomCurrencyCode { get; set; }
                new string ClientInd { get; set; }
                new string VendorInd { get; set; }
                new string LinkedVendor { get; set; }
                new string PriorWork { get; set; }
                new string Recommend { get; set; }
                new string DisadvBusiness { get; set; }
                new string DisabledVetOwnedSmallBusiness { get; set; }
                new string HBCU { get; set; }
                new string MinorityBusiness { get; set; }
                new string SmallBusiness { get; set; }
                new string VetOwnedSmallBusiness { get; set; }
                new string WomanOwned { get; set; }
                new string AlaskaNative { get; set; }
                new string SpecialtyType { get; set; }
                new string Specialty { get; set; }
                new string CreateUser { get; set; }
                new global::System.Nullable<global::System.DateTime> CreateDate { get; set; }
                new string ModUser { get; set; }
                new global::System.Nullable<global::System.DateTime> ModDate { get; set; }
                new string ParentID { get; set; }
                new string ParentLevel1 { get; set; }
                new string ParentLevel2 { get; set; }
                new string ParentLevel3 { get; set; }
                new string ParentLevel4 { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ClientID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ClientID",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientID_OnValueChanged);
                private static void _ClientID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientID, sf);
                }
                private static bool _ClientID_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ClientID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientID_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientID_Validate(r);
                }
                private static string _ClientID_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientID;
                }
                private static void _ClientID_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientID = v;
                }
                private static void _ClientID_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ClientID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Client = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Client",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Client_OnValueChanged);
                private static void _Client_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Client, sf);
                }
                private static bool _Client_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Client_IsReadOnly(ref result);
                    return result;
                }
                private static void _Client_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Client_Validate(r);
                }
                private static string _Client_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Client;
                }
                private static void _Client_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Client = v;
                }
                private static void _Client_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Client_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ExportInd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ExportInd",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ExportInd_OnValueChanged);
                private static void _ExportInd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportInd, sf);
                }
                private static bool _ExportInd_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ExportInd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExportInd_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExportInd_Validate(r);
                }
                private static string _ExportInd_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ExportInd;
                }
                private static void _ExportInd_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ExportInd = v;
                }
                private static void _ExportInd_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ExportInd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    WebSite = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "WebSite",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WebSite_OnValueChanged);
                private static void _WebSite_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._WebSite, sf);
                }
                private static bool _WebSite_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.WebSite_IsReadOnly(ref result);
                    return result;
                }
                private static void _WebSite_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WebSite_Validate(r);
                }
                private static string _WebSite_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.WebSite;
                }
                private static void _WebSite_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WebSite = v;
                }
                private static void _WebSite_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.WebSite_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Memo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Memo",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Memo_OnValueChanged);
                private static void _Memo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Memo, sf);
                }
                private static bool _Memo_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Memo_IsReadOnly(ref result);
                    return result;
                }
                private static void _Memo_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Memo_Validate(r);
                }
                private static string _Memo_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Memo;
                }
                private static void _Memo_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Memo = v;
                }
                private static void _Memo_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Memo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    CurrentStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "CurrentStatus",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CurrentStatus_OnValueChanged);
                private static void _CurrentStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentStatus, sf);
                }
                private static bool _CurrentStatus_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.CurrentStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _CurrentStatus_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CurrentStatus_Validate(r);
                }
                private static string _CurrentStatus_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.CurrentStatus;
                }
                private static void _CurrentStatus_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CurrentStatus = v;
                }
                private static void _CurrentStatus_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.CurrentStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    CustomCurrencyCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "CustomCurrencyCode",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CustomCurrencyCode_OnValueChanged);
                private static void _CustomCurrencyCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomCurrencyCode, sf);
                }
                private static bool _CustomCurrencyCode_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.CustomCurrencyCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _CustomCurrencyCode_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CustomCurrencyCode_Validate(r);
                }
                private static string _CustomCurrencyCode_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.CustomCurrencyCode;
                }
                private static void _CustomCurrencyCode_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CustomCurrencyCode = v;
                }
                private static void _CustomCurrencyCode_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.CustomCurrencyCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ClientInd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ClientInd",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ClientInd_OnValueChanged);
                private static void _ClientInd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientInd, sf);
                }
                private static bool _ClientInd_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ClientInd_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientInd_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientInd_Validate(r);
                }
                private static string _ClientInd_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientInd;
                }
                private static void _ClientInd_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientInd = v;
                }
                private static void _ClientInd_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ClientInd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    VendorInd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "VendorInd",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VendorInd_OnValueChanged);
                private static void _VendorInd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._VendorInd, sf);
                }
                private static bool _VendorInd_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.VendorInd_IsReadOnly(ref result);
                    return result;
                }
                private static void _VendorInd_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VendorInd_Validate(r);
                }
                private static string _VendorInd_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.VendorInd;
                }
                private static void _VendorInd_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VendorInd = v;
                }
                private static void _VendorInd_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.VendorInd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    LinkedVendor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "LinkedVendor",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._LinkedVendor_OnValueChanged);
                private static void _LinkedVendor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._LinkedVendor, sf);
                }
                private static bool _LinkedVendor_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.LinkedVendor_IsReadOnly(ref result);
                    return result;
                }
                private static void _LinkedVendor_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LinkedVendor_Validate(r);
                }
                private static string _LinkedVendor_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.LinkedVendor;
                }
                private static void _LinkedVendor_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LinkedVendor = v;
                }
                private static void _LinkedVendor_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.LinkedVendor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    PriorWork = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "PriorWork",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._PriorWork_OnValueChanged);
                private static void _PriorWork_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._PriorWork, sf);
                }
                private static bool _PriorWork_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.PriorWork_IsReadOnly(ref result);
                    return result;
                }
                private static void _PriorWork_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PriorWork_Validate(r);
                }
                private static string _PriorWork_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.PriorWork;
                }
                private static void _PriorWork_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PriorWork = v;
                }
                private static void _PriorWork_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.PriorWork_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Recommend = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Recommend",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Recommend_OnValueChanged);
                private static void _Recommend_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Recommend, sf);
                }
                private static bool _Recommend_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Recommend_IsReadOnly(ref result);
                    return result;
                }
                private static void _Recommend_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Recommend_Validate(r);
                }
                private static string _Recommend_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Recommend;
                }
                private static void _Recommend_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Recommend = v;
                }
                private static void _Recommend_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Recommend_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    DisadvBusiness = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "DisadvBusiness",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisadvBusiness_OnValueChanged);
                private static void _DisadvBusiness_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._DisadvBusiness, sf);
                }
                private static bool _DisadvBusiness_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.DisadvBusiness_IsReadOnly(ref result);
                    return result;
                }
                private static void _DisadvBusiness_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DisadvBusiness_Validate(r);
                }
                private static string _DisadvBusiness_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.DisadvBusiness;
                }
                private static void _DisadvBusiness_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DisadvBusiness = v;
                }
                private static void _DisadvBusiness_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.DisadvBusiness_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    DisabledVetOwnedSmallBusiness = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "DisabledVetOwnedSmallBusiness",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._DisabledVetOwnedSmallBusiness_OnValueChanged);
                private static void _DisabledVetOwnedSmallBusiness_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._DisabledVetOwnedSmallBusiness, sf);
                }
                private static bool _DisabledVetOwnedSmallBusiness_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.DisabledVetOwnedSmallBusiness_IsReadOnly(ref result);
                    return result;
                }
                private static void _DisabledVetOwnedSmallBusiness_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DisabledVetOwnedSmallBusiness_Validate(r);
                }
                private static string _DisabledVetOwnedSmallBusiness_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.DisabledVetOwnedSmallBusiness;
                }
                private static void _DisabledVetOwnedSmallBusiness_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DisabledVetOwnedSmallBusiness = v;
                }
                private static void _DisabledVetOwnedSmallBusiness_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.DisabledVetOwnedSmallBusiness_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    HBCU = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "HBCU",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._HBCU_OnValueChanged);
                private static void _HBCU_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._HBCU, sf);
                }
                private static bool _HBCU_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.HBCU_IsReadOnly(ref result);
                    return result;
                }
                private static void _HBCU_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HBCU_Validate(r);
                }
                private static string _HBCU_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.HBCU;
                }
                private static void _HBCU_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.HBCU = v;
                }
                private static void _HBCU_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.HBCU_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    MinorityBusiness = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "MinorityBusiness",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._MinorityBusiness_OnValueChanged);
                private static void _MinorityBusiness_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._MinorityBusiness, sf);
                }
                private static bool _MinorityBusiness_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.MinorityBusiness_IsReadOnly(ref result);
                    return result;
                }
                private static void _MinorityBusiness_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MinorityBusiness_Validate(r);
                }
                private static string _MinorityBusiness_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.MinorityBusiness;
                }
                private static void _MinorityBusiness_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MinorityBusiness = v;
                }
                private static void _MinorityBusiness_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.MinorityBusiness_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    SmallBusiness = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "SmallBusiness",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SmallBusiness_OnValueChanged);
                private static void _SmallBusiness_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._SmallBusiness, sf);
                }
                private static bool _SmallBusiness_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.SmallBusiness_IsReadOnly(ref result);
                    return result;
                }
                private static void _SmallBusiness_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SmallBusiness_Validate(r);
                }
                private static string _SmallBusiness_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.SmallBusiness;
                }
                private static void _SmallBusiness_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SmallBusiness = v;
                }
                private static void _SmallBusiness_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.SmallBusiness_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    VetOwnedSmallBusiness = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "VetOwnedSmallBusiness",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._VetOwnedSmallBusiness_OnValueChanged);
                private static void _VetOwnedSmallBusiness_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._VetOwnedSmallBusiness, sf);
                }
                private static bool _VetOwnedSmallBusiness_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.VetOwnedSmallBusiness_IsReadOnly(ref result);
                    return result;
                }
                private static void _VetOwnedSmallBusiness_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VetOwnedSmallBusiness_Validate(r);
                }
                private static string _VetOwnedSmallBusiness_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.VetOwnedSmallBusiness;
                }
                private static void _VetOwnedSmallBusiness_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VetOwnedSmallBusiness = v;
                }
                private static void _VetOwnedSmallBusiness_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.VetOwnedSmallBusiness_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    WomanOwned = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "WomanOwned",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._WomanOwned_OnValueChanged);
                private static void _WomanOwned_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._WomanOwned, sf);
                }
                private static bool _WomanOwned_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.WomanOwned_IsReadOnly(ref result);
                    return result;
                }
                private static void _WomanOwned_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WomanOwned_Validate(r);
                }
                private static string _WomanOwned_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.WomanOwned;
                }
                private static void _WomanOwned_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.WomanOwned = v;
                }
                private static void _WomanOwned_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.WomanOwned_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    AlaskaNative = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "AlaskaNative",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._AlaskaNative_OnValueChanged);
                private static void _AlaskaNative_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._AlaskaNative, sf);
                }
                private static bool _AlaskaNative_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.AlaskaNative_IsReadOnly(ref result);
                    return result;
                }
                private static void _AlaskaNative_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AlaskaNative_Validate(r);
                }
                private static string _AlaskaNative_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.AlaskaNative;
                }
                private static void _AlaskaNative_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AlaskaNative = v;
                }
                private static void _AlaskaNative_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.AlaskaNative_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    SpecialtyType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "SpecialtyType",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._SpecialtyType_OnValueChanged);
                private static void _SpecialtyType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._SpecialtyType, sf);
                }
                private static bool _SpecialtyType_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.SpecialtyType_IsReadOnly(ref result);
                    return result;
                }
                private static void _SpecialtyType_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SpecialtyType_Validate(r);
                }
                private static string _SpecialtyType_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.SpecialtyType;
                }
                private static void _SpecialtyType_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SpecialtyType = v;
                }
                private static void _SpecialtyType_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.SpecialtyType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    Specialty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "Specialty",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._Specialty_OnValueChanged);
                private static void _Specialty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._Specialty, sf);
                }
                private static bool _Specialty_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.Specialty_IsReadOnly(ref result);
                    return result;
                }
                private static void _Specialty_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Specialty_Validate(r);
                }
                private static string _Specialty_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.Specialty;
                }
                private static void _Specialty_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Specialty = v;
                }
                private static void _Specialty_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.Specialty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    CreateUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "CreateUser",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateUser_OnValueChanged);
                private static void _CreateUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateUser, sf);
                }
                private static bool _CreateUser_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.CreateUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateUser_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateUser_Validate(r);
                }
                private static string _CreateUser_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateUser;
                }
                private static void _CreateUser_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreateUser = v;
                }
                private static void _CreateUser_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.CreateUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreateDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreateDate",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._CreateDate_OnValueChanged);
                private static void _CreateDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateDate, sf);
                }
                private static bool _CreateDate_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.CreateDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreateDate_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreateDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreateDate_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.CreateDate;
                }
                private static void _CreateDate_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CreateDate = global::LightSwitchApplication.CL.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreateDate_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.CreateDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ModUser = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ModUser",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModUser_OnValueChanged);
                private static void _ModUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ModUser, sf);
                }
                private static bool _ModUser_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ModUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModUser_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModUser_Validate(r);
                }
                private static string _ModUser_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ModUser;
                }
                private static void _ModUser_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ModUser = v;
                }
                private static void _ModUser_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ModUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModDate",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ModDate_OnValueChanged);
                private static void _ModDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ModDate, sf);
                }
                private static bool _ModDate_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ModDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModDate_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModDate_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ModDate;
                }
                private static void _ModDate_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ModDate = global::LightSwitchApplication.CL.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModDate_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ModDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ParentID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ParentID",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentID_OnValueChanged);
                private static void _ParentID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentID, sf);
                }
                private static bool _ParentID_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ParentID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentID_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentID_Validate(r);
                }
                private static string _ParentID_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentID;
                }
                private static void _ParentID_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentID = v;
                }
                private static void _ParentID_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ParentID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ParentLevel1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ParentLevel1",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel1_OnValueChanged);
                private static void _ParentLevel1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentLevel1, sf);
                }
                private static bool _ParentLevel1_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ParentLevel1_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentLevel1_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentLevel1_Validate(r);
                }
                private static string _ParentLevel1_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentLevel1;
                }
                private static void _ParentLevel1_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentLevel1 = v;
                }
                private static void _ParentLevel1_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ParentLevel1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ParentLevel2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ParentLevel2",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel2_OnValueChanged);
                private static void _ParentLevel2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentLevel2, sf);
                }
                private static bool _ParentLevel2_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ParentLevel2_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentLevel2_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentLevel2_Validate(r);
                }
                private static string _ParentLevel2_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentLevel2;
                }
                private static void _ParentLevel2_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentLevel2 = v;
                }
                private static void _ParentLevel2_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ParentLevel2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ParentLevel3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ParentLevel3",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel3_OnValueChanged);
                private static void _ParentLevel3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentLevel3, sf);
                }
                private static bool _ParentLevel3_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ParentLevel3_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentLevel3_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentLevel3_Validate(r);
                }
                private static string _ParentLevel3_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentLevel3;
                }
                private static void _ParentLevel3_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentLevel3 = v;
                }
                private static void _ParentLevel3_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ParentLevel3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry
                    ParentLevel4 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Entry(
                        "ParentLevel4",
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_Stub,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_ComputeIsReadOnly,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_Validate,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_GetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_SetImplementationValue,
                        global::LightSwitchApplication.CL.DetailsClass.PropertySetProperties._ParentLevel4_OnValueChanged);
                private static void _ParentLevel4_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CL.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data> c, global::LightSwitchApplication.CL.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentLevel4, sf);
                }
                private static bool _ParentLevel4_ComputeIsReadOnly(global::LightSwitchApplication.CL e)
                {
                    bool result = false;
                    e.ParentLevel4_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentLevel4_Validate(global::LightSwitchApplication.CL e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentLevel4_Validate(r);
                }
                private static string _ParentLevel4_GetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentLevel4;
                }
                private static void _ParentLevel4_SetImplementationValue(global::LightSwitchApplication.CL.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentLevel4 = v;
                }
                private static void _ParentLevel4_OnValueChanged(global::LightSwitchApplication.CL e)
                {
                    e.ParentLevel4_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ClientID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Client;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ExportInd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _WebSite;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Memo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _CurrentStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _CustomCurrencyCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ClientInd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _VendorInd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _LinkedVendor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _PriorWork;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Recommend;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _DisadvBusiness;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _DisabledVetOwnedSmallBusiness;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _HBCU;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _MinorityBusiness;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _SmallBusiness;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _VetOwnedSmallBusiness;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _WomanOwned;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _AlaskaNative;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _SpecialtyType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _Specialty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _CreateUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreateDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ModUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ParentID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ParentLevel1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ParentLevel2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ParentLevel3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CL, global::LightSwitchApplication.CL.DetailsClass, string>.Data _ParentLevel4;
            
        }
    
        #endregion
    }
    
    #endregion
}
