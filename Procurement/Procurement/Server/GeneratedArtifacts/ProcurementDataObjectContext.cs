//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_BidList_RFQ_P1", "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_PItem), "BidList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.BidList), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_BidList_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "BidList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.BidList), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Client_Approved_Preference", "Preference", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Preference), "Client_Approved", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Client_Approved), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Client_Approved_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "Client_Approved", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Client_Approved), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Expediting_Material_Status", "Material_Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Material_Status), "Expediting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Expediting), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Expediting_Shipment", "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Shipment), "Expediting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Expediting), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PO_Line_PO", "PO", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.PO), "PO_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.PO_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Project), "Project_Stakeholders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project_Stakeholder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Stakeholder_Type), "Project_Stakeholders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project_Stakeholder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholders", "Stakeholders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Stakeholder), "Project_Stakeholders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project_Stakeholder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Proposal_Line_RFQ_Line", "RFQ_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_Line), "Proposal_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Proposal_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Proposal_RFQ_P", "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_PItem), "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Proposal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RFQ_Line_RFQ_P", "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_PItem), "RFQ_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.RFQ_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RFQ_P_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Project), "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.RFQ_PItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Safety_Records_Safety_Status", "Safety_Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Safety_Status), "Safety_Records", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Safety_Record), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Safety_Records_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "Safety_Records", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Safety_Record), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Shipment_Proposal_Line", "Proposal_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Proposal_Line), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Shipment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Shipment_Transport_Type", "Transport_Type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Transport_Type), "Shipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Shipment), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier_Specialty), "Supplier_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Supplier_Contact), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "Supplier_Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Supplier_Specialty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SupplierManufactures_Manufacturers", "Manufacturers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Manufacturer), "SupplierManufactures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.SupplierManufacture), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SupplierManufactures_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "SupplierManufactures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.SupplierManufacture), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Suppliers_Business_Classes", "Business_Classes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Business_Class), "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Supplier), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Submittal_RFQ_Line", "RFQ_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_Line), "Submittal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Submittal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RFQ_Line_UOM", "UOM", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.UOM), "RFQ_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.RFQ_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Submittal_SubmittalTypes", "SubmittalTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.SubmittalType), "Submittal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Submittal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Client), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Phase", "Phase", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Phase), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Specialty", "Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Specialty), "Supplier_Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Supplier_Specialty), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Manufacturers_Specialty", "Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Specialty), "Manufacturers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Manufacturer), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_ChangeOrder_UOM", "UOM", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.UOM), "ChangeOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.ChangeOrder), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SupplierRegion_Region", "Region", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Region), "SupplierRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.SupplierRegion), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_SupplierRegion_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "SupplierRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.SupplierRegion), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_RFQ_P_SourceStrategy", "SourceStrategy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.SourceStrategy), "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.RFQ_PItem), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Client_Approved_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Client), "Client_Approved", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Client_Approved), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal_Line", "Proposal_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Proposal_Line), "Award_Selected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Award_Selected), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Proposal_Line_Proposal", "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Proposal), "Proposal_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Proposal_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Proposal_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Proposal), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal", "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Proposal), "Award_Selected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Award_Selected), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_Line", "RFQ_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_Line), "Award_Selected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Award_Selected), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_P", "RFQ_P", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.RFQ_PItem), "Award_Selected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Award_Selected), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_Year", "Year", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Year), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PO_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.Supplier), "PO", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.PO), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Project_ProjectClassification", "ProjectClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.ProjectClassification), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Project), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PO_Line_Award_Selected", "Award_Selected", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Award_Selected), "PO_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.PO_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_Expediting_PO_Line", "PO_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProcurementData.Implementation.PO_Line), "Expediting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.Expediting), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PO_Line_Proposal", "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Proposal), "PO_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.PO_Line), true)]
[assembly: EdmRelationshipAttribute("LightSwitchApplication", "FK_PO_Line_Proposal_Line", "Proposal_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProcurementData.Implementation.Proposal_Line), "PO_Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProcurementData.Implementation.PO_Line), true)]

#endregion

namespace ProcurementData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProcurementDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProcurementDataObjectContext object using the connection string found in the 'ProcurementDataObjectContext' section of the application configuration file.
        /// </summary>
        public ProcurementDataObjectContext() : base("name=ProcurementDataObjectContext", "ProcurementDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProcurementDataObjectContext object.
        /// </summary>
        public ProcurementDataObjectContext(string connectionString) : base(connectionString, "ProcurementDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProcurementDataObjectContext object.
        /// </summary>
        public ProcurementDataObjectContext(EntityConnection connection) : base(connection, "ProcurementDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Award_Selected> Award_Selecteds
        {
            get
            {
                if ((_Award_Selecteds == null))
                {
                    _Award_Selecteds = base.CreateObjectSet<Award_Selected>("Award_Selecteds");
                }
                return _Award_Selecteds;
            }
        }
        private ObjectSet<Award_Selected> _Award_Selecteds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BidList> BidLists
        {
            get
            {
                if ((_BidLists == null))
                {
                    _BidLists = base.CreateObjectSet<BidList>("BidLists");
                }
                return _BidLists;
            }
        }
        private ObjectSet<BidList> _BidLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Business_Class> Business_Classes
        {
            get
            {
                if ((_Business_Classes == null))
                {
                    _Business_Classes = base.CreateObjectSet<Business_Class>("Business_Classes");
                }
                return _Business_Classes;
            }
        }
        private ObjectSet<Business_Class> _Business_Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChangeOrder> ChangeOrders
        {
            get
            {
                if ((_ChangeOrders == null))
                {
                    _ChangeOrders = base.CreateObjectSet<ChangeOrder>("ChangeOrders");
                }
                return _ChangeOrders;
            }
        }
        private ObjectSet<ChangeOrder> _ChangeOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client_Approved> Client_Approveds
        {
            get
            {
                if ((_Client_Approveds == null))
                {
                    _Client_Approveds = base.CreateObjectSet<Client_Approved>("Client_Approveds");
                }
                return _Client_Approveds;
            }
        }
        private ObjectSet<Client_Approved> _Client_Approveds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Expediting> Expeditings
        {
            get
            {
                if ((_Expeditings == null))
                {
                    _Expeditings = base.CreateObjectSet<Expediting>("Expeditings");
                }
                return _Expeditings;
            }
        }
        private ObjectSet<Expediting> _Expeditings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Material_Status> Material_Status
        {
            get
            {
                if ((_Material_Status == null))
                {
                    _Material_Status = base.CreateObjectSet<Material_Status>("Material_Status");
                }
                return _Material_Status;
            }
        }
        private ObjectSet<Material_Status> _Material_Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Phase> Phases
        {
            get
            {
                if ((_Phases == null))
                {
                    _Phases = base.CreateObjectSet<Phase>("Phases");
                }
                return _Phases;
            }
        }
        private ObjectSet<Phase> _Phases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PO> PO
        {
            get
            {
                if ((_PO == null))
                {
                    _PO = base.CreateObjectSet<PO>("PO");
                }
                return _PO;
            }
        }
        private ObjectSet<PO> _PO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PO_Line> PO_Lines
        {
            get
            {
                if ((_PO_Lines == null))
                {
                    _PO_Lines = base.CreateObjectSet<PO_Line>("PO_Lines");
                }
                return _PO_Lines;
            }
        }
        private ObjectSet<PO_Line> _PO_Lines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Preference> Preferences
        {
            get
            {
                if ((_Preferences == null))
                {
                    _Preferences = base.CreateObjectSet<Preference>("Preferences");
                }
                return _Preferences;
            }
        }
        private ObjectSet<Preference> _Preferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                if ((_Project_Stakeholders == null))
                {
                    _Project_Stakeholders = base.CreateObjectSet<Project_Stakeholder>("Project_Stakeholders");
                }
                return _Project_Stakeholders;
            }
        }
        private ObjectSet<Project_Stakeholder> _Project_Stakeholders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Proposal> Proposals
        {
            get
            {
                if ((_Proposals == null))
                {
                    _Proposals = base.CreateObjectSet<Proposal>("Proposals");
                }
                return _Proposals;
            }
        }
        private ObjectSet<Proposal> _Proposals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Proposal_Line> Proposal_Lines
        {
            get
            {
                if ((_Proposal_Lines == null))
                {
                    _Proposal_Lines = base.CreateObjectSet<Proposal_Line>("Proposal_Lines");
                }
                return _Proposal_Lines;
            }
        }
        private ObjectSet<Proposal_Line> _Proposal_Lines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RFQ_Line> RFQ_Lines
        {
            get
            {
                if ((_RFQ_Lines == null))
                {
                    _RFQ_Lines = base.CreateObjectSet<RFQ_Line>("RFQ_Lines");
                }
                return _RFQ_Lines;
            }
        }
        private ObjectSet<RFQ_Line> _RFQ_Lines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RFQ_PItem> RFQ_P
        {
            get
            {
                if ((_RFQ_P == null))
                {
                    _RFQ_P = base.CreateObjectSet<RFQ_PItem>("RFQ_P");
                }
                return _RFQ_P;
            }
        }
        private ObjectSet<RFQ_PItem> _RFQ_P;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Safety_Record> Safety_Records
        {
            get
            {
                if ((_Safety_Records == null))
                {
                    _Safety_Records = base.CreateObjectSet<Safety_Record>("Safety_Records");
                }
                return _Safety_Records;
            }
        }
        private ObjectSet<Safety_Record> _Safety_Records;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Safety_Status> Safety_Status
        {
            get
            {
                if ((_Safety_Status == null))
                {
                    _Safety_Status = base.CreateObjectSet<Safety_Status>("Safety_Status");
                }
                return _Safety_Status;
            }
        }
        private ObjectSet<Safety_Status> _Safety_Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shipment> Shipments
        {
            get
            {
                if ((_Shipments == null))
                {
                    _Shipments = base.CreateObjectSet<Shipment>("Shipments");
                }
                return _Shipments;
            }
        }
        private ObjectSet<Shipment> _Shipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stakeholder_Type> Stakeholder_Types
        {
            get
            {
                if ((_Stakeholder_Types == null))
                {
                    _Stakeholder_Types = base.CreateObjectSet<Stakeholder_Type>("Stakeholder_Types");
                }
                return _Stakeholder_Types;
            }
        }
        private ObjectSet<Stakeholder_Type> _Stakeholder_Types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stakeholder> Stakeholders
        {
            get
            {
                if ((_Stakeholders == null))
                {
                    _Stakeholders = base.CreateObjectSet<Stakeholder>("Stakeholders");
                }
                return _Stakeholders;
            }
        }
        private ObjectSet<Stakeholder> _Stakeholders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Submittal> Submittals
        {
            get
            {
                if ((_Submittals == null))
                {
                    _Submittals = base.CreateObjectSet<Submittal>("Submittals");
                }
                return _Submittals;
            }
        }
        private ObjectSet<Submittal> _Submittals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier_Contact> Supplier_Contacts
        {
            get
            {
                if ((_Supplier_Contacts == null))
                {
                    _Supplier_Contacts = base.CreateObjectSet<Supplier_Contact>("Supplier_Contacts");
                }
                return _Supplier_Contacts;
            }
        }
        private ObjectSet<Supplier_Contact> _Supplier_Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                if ((_Supplier_Specialties == null))
                {
                    _Supplier_Specialties = base.CreateObjectSet<Supplier_Specialty>("Supplier_Specialties");
                }
                return _Supplier_Specialties;
            }
        }
        private ObjectSet<Supplier_Specialty> _Supplier_Specialties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierManufacture> SupplierManufactures
        {
            get
            {
                if ((_SupplierManufactures == null))
                {
                    _SupplierManufactures = base.CreateObjectSet<SupplierManufacture>("SupplierManufactures");
                }
                return _SupplierManufactures;
            }
        }
        private ObjectSet<SupplierManufacture> _SupplierManufactures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transport_Type> Transport_Types
        {
            get
            {
                if ((_Transport_Types == null))
                {
                    _Transport_Types = base.CreateObjectSet<Transport_Type>("Transport_Types");
                }
                return _Transport_Types;
            }
        }
        private ObjectSet<Transport_Type> _Transport_Types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittalType> SubmittalTypes
        {
            get
            {
                if ((_SubmittalTypes == null))
                {
                    _SubmittalTypes = base.CreateObjectSet<SubmittalType>("SubmittalTypes");
                }
                return _SubmittalTypes;
            }
        }
        private ObjectSet<SubmittalType> _SubmittalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UOM> UOMs
        {
            get
            {
                if ((_UOMs == null))
                {
                    _UOMs = base.CreateObjectSet<UOM>("UOMs");
                }
                return _UOMs;
            }
        }
        private ObjectSet<UOM> _UOMs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specialty> Specialties
        {
            get
            {
                if ((_Specialties == null))
                {
                    _Specialties = base.CreateObjectSet<Specialty>("Specialties");
                }
                return _Specialties;
            }
        }
        private ObjectSet<Specialty> _Specialties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Region> Regions
        {
            get
            {
                if ((_Regions == null))
                {
                    _Regions = base.CreateObjectSet<Region>("Regions");
                }
                return _Regions;
            }
        }
        private ObjectSet<Region> _Regions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupplierRegion> SupplierRegions
        {
            get
            {
                if ((_SupplierRegions == null))
                {
                    _SupplierRegions = base.CreateObjectSet<SupplierRegion>("SupplierRegions");
                }
                return _SupplierRegions;
            }
        }
        private ObjectSet<SupplierRegion> _SupplierRegions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceStrategy> SourceStrategies
        {
            get
            {
                if ((_SourceStrategies == null))
                {
                    _SourceStrategies = base.CreateObjectSet<SourceStrategy>("SourceStrategies");
                }
                return _SourceStrategies;
            }
        }
        private ObjectSet<SourceStrategy> _SourceStrategies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Year> Years
        {
            get
            {
                if ((_Years == null))
                {
                    _Years = base.CreateObjectSet<Year>("Years");
                }
                return _Years;
            }
        }
        private ObjectSet<Year> _Years;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectClassification> ProjectClassifications
        {
            get
            {
                if ((_ProjectClassifications == null))
                {
                    _ProjectClassifications = base.CreateObjectSet<ProjectClassification>("ProjectClassifications");
                }
                return _ProjectClassifications;
            }
        }
        private ObjectSet<ProjectClassification> _ProjectClassifications;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Award_Selecteds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAward_Selecteds(Award_Selected award_Selected)
        {
            base.AddObject("Award_Selecteds", award_Selected);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BidLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBidLists(BidList bidList)
        {
            base.AddObject("BidLists", bidList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Business_Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusiness_Classes(Business_Class business_Class)
        {
            base.AddObject("Business_Classes", business_Class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChangeOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChangeOrders(ChangeOrder changeOrder)
        {
            base.AddObject("ChangeOrders", changeOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Client_Approveds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClient_Approveds(Client_Approved client_Approved)
        {
            base.AddObject("Client_Approveds", client_Approved);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Expeditings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpeditings(Expediting expediting)
        {
            base.AddObject("Expeditings", expediting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Material_Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterial_Status(Material_Status material_Status)
        {
            base.AddObject("Material_Status", material_Status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Phases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhases(Phase phase)
        {
            base.AddObject("Phases", phase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPO(PO pO)
        {
            base.AddObject("PO", pO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PO_Lines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPO_Lines(PO_Line pO_Line)
        {
            base.AddObject("PO_Lines", pO_Line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Preferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferences(Preference preference)
        {
            base.AddObject("Preferences", preference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Project_Stakeholders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProject_Stakeholders(Project_Stakeholder project_Stakeholder)
        {
            base.AddObject("Project_Stakeholders", project_Stakeholder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Proposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposals(Proposal proposal)
        {
            base.AddObject("Proposals", proposal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Proposal_Lines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposal_Lines(Proposal_Line proposal_Line)
        {
            base.AddObject("Proposal_Lines", proposal_Line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RFQ_Lines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRFQ_Lines(RFQ_Line rFQ_Line)
        {
            base.AddObject("RFQ_Lines", rFQ_Line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RFQ_P EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRFQ_P(RFQ_PItem rFQ_PItem)
        {
            base.AddObject("RFQ_P", rFQ_PItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Safety_Records EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSafety_Records(Safety_Record safety_Record)
        {
            base.AddObject("Safety_Records", safety_Record);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Safety_Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSafety_Status(Safety_Status safety_Status)
        {
            base.AddObject("Safety_Status", safety_Status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShipments(Shipment shipment)
        {
            base.AddObject("Shipments", shipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stakeholder_Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStakeholder_Types(Stakeholder_Type stakeholder_Type)
        {
            base.AddObject("Stakeholder_Types", stakeholder_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stakeholders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStakeholders(Stakeholder stakeholder)
        {
            base.AddObject("Stakeholders", stakeholder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Submittals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittals(Submittal submittal)
        {
            base.AddObject("Submittals", submittal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplier_Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplier_Contacts(Supplier_Contact supplier_Contact)
        {
            base.AddObject("Supplier_Contacts", supplier_Contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplier_Specialties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplier_Specialties(Supplier_Specialty supplier_Specialty)
        {
            base.AddObject("Supplier_Specialties", supplier_Specialty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierManufactures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplierManufactures(SupplierManufacture supplierManufacture)
        {
            base.AddObject("SupplierManufactures", supplierManufacture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transport_Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransport_Types(Transport_Type transport_Type)
        {
            base.AddObject("Transport_Types", transport_Type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittalTypes(SubmittalType submittalType)
        {
            base.AddObject("SubmittalTypes", submittalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UOMs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUOMs(UOM uOM)
        {
            base.AddObject("UOMs", uOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specialties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialties(Specialty specialty)
        {
            base.AddObject("Specialties", specialty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Regions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegions(Region region)
        {
            base.AddObject("Regions", region);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupplierRegions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplierRegions(SupplierRegion supplierRegion)
        {
            base.AddObject("SupplierRegions", supplierRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceStrategies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceStrategies(SourceStrategy sourceStrategy)
        {
            base.AddObject("SourceStrategies", sourceStrategy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Years EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToYears(Year year)
        {
            base.AddObject("Years", year);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectClassifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectClassifications(ProjectClassification projectClassification)
        {
            base.AddObject("ProjectClassifications", projectClassification);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Award_Selected")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Award_Selected : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Award_Selected object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="hasPO">Initial value of the HasPO property.</param>
        public static Award_Selected CreateAward_Selected(global::System.Int32 id, global::System.Boolean hasPO)
        {
            Award_Selected award_Selected = new Award_Selected();
            award_Selected.ID = id;
            award_Selected.HasPO = hasPO;
            return award_Selected;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceReason
        {
            get
            {
                return _SourceReason;
            }
            set
            {
                OnSourceReasonChanging(value);
                ReportPropertyChanging("SourceReason");
                _SourceReason = value;
                ReportPropertyChanged("SourceReason");
                OnSourceReasonChanged();
            }
        }
        private global::System.String _SourceReason;
        partial void OnSourceReasonChanging(global::System.String value);
        partial void OnSourceReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AwdReqstd
        {
            get
            {
                return _AwdReqstd;
            }
            set
            {
                OnAwdReqstdChanging(value);
                ReportPropertyChanging("AwdReqstd");
                _AwdReqstd = value;
                ReportPropertyChanged("AwdReqstd");
                OnAwdReqstdChanged();
            }
        }
        private Nullable<global::System.DateTime> _AwdReqstd;
        partial void OnAwdReqstdChanging(Nullable<global::System.DateTime> value);
        partial void OnAwdReqstdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AwdApp
        {
            get
            {
                return _AwdApp;
            }
            set
            {
                OnAwdAppChanging(value);
                ReportPropertyChanging("AwdApp");
                _AwdApp = value;
                ReportPropertyChanged("AwdApp");
                OnAwdAppChanged();
            }
        }
        private Nullable<global::System.DateTime> _AwdApp;
        partial void OnAwdAppChanging(Nullable<global::System.DateTime> value);
        partial void OnAwdAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequisitionNo
        {
            get
            {
                return _RequisitionNo;
            }
            set
            {
                OnRequisitionNoChanging(value);
                ReportPropertyChanging("RequisitionNo");
                _RequisitionNo = value;
                ReportPropertyChanged("RequisitionNo");
                OnRequisitionNoChanged();
            }
        }
        private global::System.String _RequisitionNo;
        partial void OnRequisitionNoChanging(global::System.String value);
        partial void OnRequisitionNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequisitionSub
        {
            get
            {
                return _RequisitionSub;
            }
            set
            {
                OnRequisitionSubChanging(value);
                ReportPropertyChanging("RequisitionSub");
                _RequisitionSub = value;
                ReportPropertyChanged("RequisitionSub");
                OnRequisitionSubChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequisitionSub;
        partial void OnRequisitionSubChanging(Nullable<global::System.DateTime> value);
        partial void OnRequisitionSubChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequisitionApp
        {
            get
            {
                return _RequisitionApp;
            }
            set
            {
                OnRequisitionAppChanging(value);
                ReportPropertyChanging("RequisitionApp");
                _RequisitionApp = value;
                ReportPropertyChanged("RequisitionApp");
                OnRequisitionAppChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequisitionApp;
        partial void OnRequisitionAppChanging(Nullable<global::System.DateTime> value);
        partial void OnRequisitionAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderType
        {
            get
            {
                return _OrderType;
            }
            set
            {
                OnOrderTypeChanging(value);
                ReportPropertyChanging("OrderType");
                _OrderType = value;
                ReportPropertyChanged("OrderType");
                OnOrderTypeChanged();
            }
        }
        private global::System.String _OrderType;
        partial void OnOrderTypeChanging(global::System.String value);
        partial void OnOrderTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasPO
        {
            get
            {
                return _HasPO;
            }
            set
            {
                OnHasPOChanging(value);
                ReportPropertyChanging("HasPO");
                _HasPO = value;
                ReportPropertyChanged("HasPO");
                OnHasPOChanged();
            }
        }
        private global::System.Boolean _HasPO;
        partial void OnHasPOChanging(global::System.Boolean value);
        partial void OnHasPOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PropLineSlctd
        {
            get
            {
                return _PropLineSlctd;
            }
            set
            {
                OnPropLineSlctdChanging(value);
                ReportPropertyChanging("PropLineSlctd");
                _PropLineSlctd = value;
                ReportPropertyChanged("PropLineSlctd");
                OnPropLineSlctdChanged();
            }
        }
        private Nullable<global::System.Int32> _PropLineSlctd;
        partial void OnPropLineSlctdChanging(Nullable<global::System.Int32> value);
        partial void OnPropLineSlctdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProposalSelected
        {
            get
            {
                return _ProposalSelected;
            }
            set
            {
                OnProposalSelectedChanging(value);
                ReportPropertyChanging("ProposalSelected");
                _ProposalSelected = value;
                ReportPropertyChanged("ProposalSelected");
                OnProposalSelectedChanged();
            }
        }
        private Nullable<global::System.Int32> _ProposalSelected;
        partial void OnProposalSelectedChanging(Nullable<global::System.Int32> value);
        partial void OnProposalSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RFQItem
        {
            get
            {
                return _RFQItem;
            }
            set
            {
                OnRFQItemChanging(value);
                ReportPropertyChanging("RFQItem");
                _RFQItem = value;
                ReportPropertyChanged("RFQItem");
                OnRFQItemChanged();
            }
        }
        private Nullable<global::System.Int32> _RFQItem;
        partial void OnRFQItemChanging(Nullable<global::System.Int32> value);
        partial void OnRFQItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PkgNoID
        {
            get
            {
                return _PkgNoID;
            }
            set
            {
                OnPkgNoIDChanging(value);
                ReportPropertyChanging("PkgNoID");
                _PkgNoID = value;
                ReportPropertyChanged("PkgNoID");
                OnPkgNoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PkgNoID;
        partial void OnPkgNoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPkgNoIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal_Line", "Proposal_Line")]
        public Proposal_Line Proposal_Line1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Proposal_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Proposal_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal_Line> Proposal_Line1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Proposal_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Proposal_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal", "Proposal")]
        public Proposal Proposal1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Award_Selected_Proposal", "Proposal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Award_Selected_Proposal", "Proposal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal> Proposal1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Award_Selected_Proposal", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal>("LightSwitchApplication.FK_Award_Selected_Proposal", "Proposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_Line", "RFQ_Line")]
        public RFQ_Line RFQ_Line1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "RFQ_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "RFQ_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_Line> RFQ_Line1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "RFQ_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "RFQ_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_P", "RFQ_P")]
        public RFQ_PItem RFQ_PItem1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "RFQ_P").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "RFQ_P").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_PItem> RFQ_PItem1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "RFQ_P", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Award_Selected", "PO_Line")]
        public EntityCollection<PO_Line> PO_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Award_Selected", "PO_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Award_Selected", "PO_Line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="BidList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BidList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BidList object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static BidList CreateBidList(global::System.Int32 id)
        {
            BidList bidList = new BidList();
            bidList.id = id;
            return bidList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PkgNoID
        {
            get
            {
                return _PkgNoID;
            }
            set
            {
                OnPkgNoIDChanging(value);
                ReportPropertyChanging("PkgNoID");
                _PkgNoID = value;
                ReportPropertyChanged("PkgNoID");
                OnPkgNoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PkgNoID;
        partial void OnPkgNoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPkgNoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_BidList_RFQ_P1", "RFQ_P")]
        public RFQ_PItem RFQ_PItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_BidList_RFQ_P1", "RFQ_P").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_BidList_RFQ_P1", "RFQ_P").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_PItem> RFQ_PItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_BidList_RFQ_P1", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_BidList_RFQ_P1", "RFQ_P", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_BidList_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_BidList_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_BidList_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_BidList_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_BidList_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Business_Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Business_Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Business_Class object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Business_Class CreateBusiness_Class(global::System.Int32 id)
        {
            Business_Class business_Class = new Business_Class();
            business_Class.ID = id;
            return business_Class;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessClass
        {
            get
            {
                return _BusinessClass;
            }
            set
            {
                OnBusinessClassChanging(value);
                ReportPropertyChanging("BusinessClass");
                _BusinessClass = value;
                ReportPropertyChanged("BusinessClass");
                OnBusinessClassChanged();
            }
        }
        private global::System.String _BusinessClass;
        partial void OnBusinessClassChanging(global::System.String value);
        partial void OnBusinessClassChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Suppliers_Business_Classes", "Suppliers")]
        public EntityCollection<Supplier> Suppliers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supplier>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supplier>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ChangeOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChangeOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChangeOrder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cO_Description">Initial value of the CO_Description property.</param>
        public static ChangeOrder CreateChangeOrder(global::System.Int32 id, global::System.String cO_Description)
        {
            ChangeOrder changeOrder = new ChangeOrder();
            changeOrder.ID = id;
            changeOrder.CO_Description = cO_Description;
            return changeOrder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ChangeOrderNum
        {
            get
            {
                return _ChangeOrderNum;
            }
            set
            {
                OnChangeOrderNumChanging(value);
                ReportPropertyChanging("ChangeOrderNum");
                _ChangeOrderNum = value;
                ReportPropertyChanged("ChangeOrderNum");
                OnChangeOrderNumChanged();
            }
        }
        private Nullable<global::System.Decimal> _ChangeOrderNum;
        partial void OnChangeOrderNumChanging(Nullable<global::System.Decimal> value);
        partial void OnChangeOrderNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PCN
        {
            get
            {
                return _PCN;
            }
            set
            {
                OnPCNChanging(value);
                ReportPropertyChanging("PCN");
                _PCN = value;
                ReportPropertyChanged("PCN");
                OnPCNChanged();
            }
        }
        private global::System.String _PCN;
        partial void OnPCNChanging(global::System.String value);
        partial void OnPCNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> COAward
        {
            get
            {
                return _COAward;
            }
            set
            {
                OnCOAwardChanging(value);
                ReportPropertyChanging("COAward");
                _COAward = value;
                ReportPropertyChanged("COAward");
                OnCOAwardChanged();
            }
        }
        private Nullable<global::System.DateTime> _COAward;
        partial void OnCOAwardChanging(Nullable<global::System.DateTime> value);
        partial void OnCOAwardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CO_Description
        {
            get
            {
                return _CO_Description;
            }
            set
            {
                OnCO_DescriptionChanging(value);
                ReportPropertyChanging("CO_Description");
                _CO_Description = value;
                ReportPropertyChanged("CO_Description");
                OnCO_DescriptionChanged();
            }
        }
        private global::System.String _CO_Description;
        partial void OnCO_DescriptionChanging(global::System.String value);
        partial void OnCO_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CO_WBS
        {
            get
            {
                return _CO_WBS;
            }
            set
            {
                OnCO_WBSChanging(value);
                ReportPropertyChanging("CO_WBS");
                _CO_WBS = value;
                ReportPropertyChanged("CO_WBS");
                OnCO_WBSChanged();
            }
        }
        private global::System.String _CO_WBS;
        partial void OnCO_WBSChanging(global::System.String value);
        partial void OnCO_WBSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CO_Qty
        {
            get
            {
                return _CO_Qty;
            }
            set
            {
                OnCO_QtyChanging(value);
                ReportPropertyChanging("CO_Qty");
                _CO_Qty = value;
                ReportPropertyChanged("CO_Qty");
                OnCO_QtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _CO_Qty;
        partial void OnCO_QtyChanging(Nullable<global::System.Decimal> value);
        partial void OnCO_QtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CO_CostPerUnit
        {
            get
            {
                return _CO_CostPerUnit;
            }
            set
            {
                OnCO_CostPerUnitChanging(value);
                ReportPropertyChanging("CO_CostPerUnit");
                _CO_CostPerUnit = value;
                ReportPropertyChanged("CO_CostPerUnit");
                OnCO_CostPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CO_CostPerUnit;
        partial void OnCO_CostPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnCO_CostPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PONum
        {
            get
            {
                return _PONum;
            }
            set
            {
                OnPONumChanging(value);
                ReportPropertyChanging("PONum");
                _PONum = value;
                ReportPropertyChanged("PONum");
                OnPONumChanged();
            }
        }
        private Nullable<global::System.Int32> _PONum;
        partial void OnPONumChanging(Nullable<global::System.Int32> value);
        partial void OnPONumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> POLineID
        {
            get
            {
                return _POLineID;
            }
            set
            {
                OnPOLineIDChanging(value);
                ReportPropertyChanging("POLineID");
                _POLineID = value;
                ReportPropertyChanged("POLineID");
                OnPOLineIDChanged();
            }
        }
        private Nullable<global::System.Int32> _POLineID;
        partial void OnPOLineIDChanging(Nullable<global::System.Int32> value);
        partial void OnPOLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CO_UOM
        {
            get
            {
                return _CO_UOM;
            }
            set
            {
                OnCO_UOMChanging(value);
                ReportPropertyChanging("CO_UOM");
                _CO_UOM = value;
                ReportPropertyChanged("CO_UOM");
                OnCO_UOMChanged();
            }
        }
        private Nullable<global::System.Int32> _CO_UOM;
        partial void OnCO_UOMChanging(Nullable<global::System.Int32> value);
        partial void OnCO_UOMChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ChangeOrder_UOM", "UOM")]
        public UOM UOM1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_ChangeOrder_UOM", "UOM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_ChangeOrder_UOM", "UOM").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UOM> UOM1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_ChangeOrder_UOM", "UOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UOM>("LightSwitchApplication.FK_ChangeOrder_UOM", "UOM", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Client CreateClient(global::System.Int32 id, global::System.String name)
        {
            Client client = new Client();
            client.ID = id;
            client.Name = name;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Clients", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("LightSwitchApplication.FK_Project_Clients", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("LightSwitchApplication.FK_Project_Clients", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Clients", "Client_Approved")]
        public EntityCollection<Client_Approved> Client_Approveds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Clients", "Client_Approved");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Clients", "Client_Approved", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Client_Approved")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client_Approved : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client_Approved object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="siteApproved">Initial value of the SiteApproved property.</param>
        public static Client_Approved CreateClient_Approved(global::System.Int32 id, global::System.Boolean siteApproved)
        {
            Client_Approved client_Approved = new Client_Approved();
            client_Approved.ID = id;
            client_Approved.SiteApproved = siteApproved;
            return client_Approved;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceAgreement
        {
            get
            {
                return _ServiceAgreement;
            }
            set
            {
                OnServiceAgreementChanging(value);
                ReportPropertyChanging("ServiceAgreement");
                _ServiceAgreement = value;
                ReportPropertyChanged("ServiceAgreement");
                OnServiceAgreementChanged();
            }
        }
        private global::System.String _ServiceAgreement;
        partial void OnServiceAgreementChanging(global::System.String value);
        partial void OnServiceAgreementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierID_No
        {
            get
            {
                return _SupplierID_No;
            }
            set
            {
                OnSupplierID_NoChanging(value);
                ReportPropertyChanging("SupplierID_No");
                _SupplierID_No = value;
                ReportPropertyChanged("SupplierID_No");
                OnSupplierID_NoChanged();
            }
        }
        private global::System.String _SupplierID_No;
        partial void OnSupplierID_NoChanging(global::System.String value);
        partial void OnSupplierID_NoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SiteApproved
        {
            get
            {
                return _SiteApproved;
            }
            set
            {
                OnSiteApprovedChanging(value);
                ReportPropertyChanging("SiteApproved");
                _SiteApproved = value;
                ReportPropertyChanged("SiteApproved");
                OnSiteApprovedChanged();
            }
        }
        private global::System.Boolean _SiteApproved;
        partial void OnSiteApprovedChanging(global::System.Boolean value);
        partial void OnSiteApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Preference
        {
            get
            {
                return _Preference;
            }
            set
            {
                OnPreferenceChanging(value);
                ReportPropertyChanging("Preference");
                _Preference = value;
                ReportPropertyChanged("Preference");
                OnPreferenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Preference;
        partial void OnPreferenceChanging(Nullable<global::System.Int32> value);
        partial void OnPreferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Client
        {
            get
            {
                return _Client;
            }
            set
            {
                OnClientChanging(value);
                ReportPropertyChanging("Client");
                _Client = value;
                ReportPropertyChanged("Client");
                OnClientChanged();
            }
        }
        private Nullable<global::System.Int32> _Client;
        partial void OnClientChanging(Nullable<global::System.Int32> value);
        partial void OnClientChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Preference", "Preference")]
        public Preference Preference1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preference>("LightSwitchApplication.FK_Client_Approved_Preference", "Preference").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preference>("LightSwitchApplication.FK_Client_Approved_Preference", "Preference").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Preference> Preference1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Preference>("LightSwitchApplication.FK_Client_Approved_Preference", "Preference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Preference>("LightSwitchApplication.FK_Client_Approved_Preference", "Preference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Suppliers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Clients", "Clients")]
        public Client Client1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Client_Approved_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Client_Approved_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> Client1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Client_Approved_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("LightSwitchApplication.FK_Client_Approved_Clients", "Clients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Expediting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Expediting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Expediting object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Expediting CreateExpediting(global::System.Int32 id)
        {
            Expediting expediting = new Expediting();
            expediting.ID = id;
            return expediting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpeditingLevel
        {
            get
            {
                return _ExpeditingLevel;
            }
            set
            {
                OnExpeditingLevelChanging(value);
                ReportPropertyChanging("ExpeditingLevel");
                _ExpeditingLevel = value;
                ReportPropertyChanged("ExpeditingLevel");
                OnExpeditingLevelChanged();
            }
        }
        private global::System.String _ExpeditingLevel;
        partial void OnExpeditingLevelChanging(global::System.String value);
        partial void OnExpeditingLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastContacted
        {
            get
            {
                return _LastContacted;
            }
            set
            {
                OnLastContactedChanging(value);
                ReportPropertyChanging("LastContacted");
                _LastContacted = value;
                ReportPropertyChanged("LastContacted");
                OnLastContactedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastContacted;
        partial void OnLastContactedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastContactedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastResponse
        {
            get
            {
                return _LastResponse;
            }
            set
            {
                OnLastResponseChanging(value);
                ReportPropertyChanging("LastResponse");
                _LastResponse = value;
                ReportPropertyChanged("LastResponse");
                OnLastResponseChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastResponse;
        partial void OnLastResponseChanging(Nullable<global::System.DateTime> value);
        partial void OnLastResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Results
        {
            get
            {
                return _Results;
            }
            set
            {
                OnResultsChanging(value);
                ReportPropertyChanging("Results");
                _Results = value;
                ReportPropertyChanged("Results");
                OnResultsChanged();
            }
        }
        private global::System.String _Results;
        partial void OnResultsChanging(global::System.String value);
        partial void OnResultsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShipmentRefNum
        {
            get
            {
                return _ShipmentRefNum;
            }
            set
            {
                OnShipmentRefNumChanging(value);
                ReportPropertyChanging("ShipmentRefNum");
                _ShipmentRefNum = value;
                ReportPropertyChanged("ShipmentRefNum");
                OnShipmentRefNumChanged();
            }
        }
        private global::System.String _ShipmentRefNum;
        partial void OnShipmentRefNumChanging(global::System.String value);
        partial void OnShipmentRefNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ETS
        {
            get
            {
                return _ETS;
            }
            set
            {
                OnETSChanging(value);
                ReportPropertyChanging("ETS");
                _ETS = value;
                ReportPropertyChanged("ETS");
                OnETSChanged();
            }
        }
        private Nullable<global::System.DateTime> _ETS;
        partial void OnETSChanging(Nullable<global::System.DateTime> value);
        partial void OnETSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                OnETAChanging(value);
                ReportPropertyChanging("ETA");
                _ETA = value;
                ReportPropertyChanged("ETA");
                OnETAChanged();
            }
        }
        private Nullable<global::System.DateTime> _ETA;
        partial void OnETAChanging(Nullable<global::System.DateTime> value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = value;
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaterialStatus
        {
            get
            {
                return _MaterialStatus;
            }
            set
            {
                OnMaterialStatusChanging(value);
                ReportPropertyChanging("MaterialStatus");
                _MaterialStatus = value;
                ReportPropertyChanged("MaterialStatus");
                OnMaterialStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _MaterialStatus;
        partial void OnMaterialStatusChanging(Nullable<global::System.Int32> value);
        partial void OnMaterialStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShippmentRefId
        {
            get
            {
                return _ShippmentRefId;
            }
            set
            {
                OnShippmentRefIdChanging(value);
                ReportPropertyChanging("ShippmentRefId");
                _ShippmentRefId = value;
                ReportPropertyChanged("ShippmentRefId");
                OnShippmentRefIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ShippmentRefId;
        partial void OnShippmentRefIdChanging(Nullable<global::System.Int32> value);
        partial void OnShippmentRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> POLineID
        {
            get
            {
                return _POLineID;
            }
            set
            {
                OnPOLineIDChanging(value);
                ReportPropertyChanging("POLineID");
                _POLineID = value;
                ReportPropertyChanged("POLineID");
                OnPOLineIDChanged();
            }
        }
        private Nullable<global::System.Int32> _POLineID;
        partial void OnPOLineIDChanging(Nullable<global::System.Int32> value);
        partial void OnPOLineIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_Material_Status", "Material_Status")]
        public Material_Status Material_Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material_Status>("LightSwitchApplication.FK_Expediting_Material_Status", "Material_Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material_Status>("LightSwitchApplication.FK_Expediting_Material_Status", "Material_Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Material_Status> Material_StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Material_Status>("LightSwitchApplication.FK_Expediting_Material_Status", "Material_Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Material_Status>("LightSwitchApplication.FK_Expediting_Material_Status", "Material_Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_Shipment", "Shipment")]
        public Shipment Shipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("LightSwitchApplication.FK_Expediting_Shipment", "Shipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("LightSwitchApplication.FK_Expediting_Shipment", "Shipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shipment> ShipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shipment>("LightSwitchApplication.FK_Expediting_Shipment", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shipment>("LightSwitchApplication.FK_Expediting_Shipment", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_PO_Line", "PO_Line")]
        public PO_Line PO_Line1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO_Line>("LightSwitchApplication.FK_Expediting_PO_Line", "PO_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO_Line>("LightSwitchApplication.FK_Expediting_PO_Line", "PO_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PO_Line> PO_Line1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO_Line>("LightSwitchApplication.FK_Expediting_PO_Line", "PO_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PO_Line>("LightSwitchApplication.FK_Expediting_PO_Line", "PO_Line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 id)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.ID = id;
            return manufacturer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mfg_Name
        {
            get
            {
                return _Mfg_Name;
            }
            set
            {
                OnMfg_NameChanging(value);
                ReportPropertyChanging("Mfg_Name");
                _Mfg_Name = value;
                ReportPropertyChanged("Mfg_Name");
                OnMfg_NameChanged();
            }
        }
        private global::System.String _Mfg_Name;
        partial void OnMfg_NameChanging(global::System.String value);
        partial void OnMfg_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Specialty
        {
            get
            {
                return _Specialty;
            }
            set
            {
                OnSpecialtyChanging(value);
                ReportPropertyChanging("Specialty");
                _Specialty = value;
                ReportPropertyChanged("Specialty");
                OnSpecialtyChanged();
            }
        }
        private Nullable<global::System.Int32> _Specialty;
        partial void OnSpecialtyChanging(Nullable<global::System.Int32> value);
        partial void OnSpecialtyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierManufactures_Manufacturers", "SupplierManufactures")]
        public EntityCollection<SupplierManufacture> SupplierManufactures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplierManufacture>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "SupplierManufactures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplierManufacture>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "SupplierManufactures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Manufacturers_Specialty", "Specialty")]
        public Specialty Specialty1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Manufacturers_Specialty", "Specialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Manufacturers_Specialty", "Specialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialty> Specialty1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Manufacturers_Specialty", "Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialty>("LightSwitchApplication.FK_Manufacturers_Specialty", "Specialty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Material_Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Material_Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Material_Status object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Material_Status CreateMaterial_Status(global::System.Int32 id)
        {
            Material_Status material_Status = new Material_Status();
            material_Status.ID = id;
            return material_Status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaterialStatus
        {
            get
            {
                return _MaterialStatus;
            }
            set
            {
                OnMaterialStatusChanging(value);
                ReportPropertyChanging("MaterialStatus");
                _MaterialStatus = value;
                ReportPropertyChanged("MaterialStatus");
                OnMaterialStatusChanged();
            }
        }
        private global::System.String _MaterialStatus;
        partial void OnMaterialStatusChanging(global::System.String value);
        partial void OnMaterialStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_Material_Status", "Expediting")]
        public EntityCollection<Expediting> Expeditings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_Material_Status", "Expediting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_Material_Status", "Expediting", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Phase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Phase object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Phase CreatePhase(global::System.Int32 id)
        {
            Phase phase = new Phase();
            phase.ID = id;
            return phase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phase1
        {
            get
            {
                return _Phase1;
            }
            set
            {
                OnPhase1Changing(value);
                ReportPropertyChanging("Phase1");
                _Phase1 = value;
                ReportPropertyChanged("Phase1");
                OnPhase1Changed();
            }
        }
        private global::System.String _Phase1;
        partial void OnPhase1Changing(global::System.String value);
        partial void OnPhase1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Phase", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("LightSwitchApplication.FK_Project_Phase", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("LightSwitchApplication.FK_Project_Phase", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PO object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static PO CreatePO(global::System.Int32 id)
        {
            PO pO = new PO();
            pO.ID = id;
            return pO;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PONumber
        {
            get
            {
                return _PONumber;
            }
            set
            {
                OnPONumberChanging(value);
                ReportPropertyChanging("PONumber");
                _PONumber = value;
                ReportPropertyChanged("PONumber");
                OnPONumberChanged();
            }
        }
        private global::System.String _PONumber;
        partial void OnPONumberChanging(global::System.String value);
        partial void OnPONumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AwardDate
        {
            get
            {
                return _AwardDate;
            }
            set
            {
                OnAwardDateChanging(value);
                ReportPropertyChanging("AwardDate");
                _AwardDate = value;
                ReportPropertyChanged("AwardDate");
                OnAwardDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AwardDate;
        partial void OnAwardDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAwardDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Closed
        {
            get
            {
                return _Closed;
            }
            set
            {
                OnClosedChanging(value);
                ReportPropertyChanging("Closed");
                _Closed = value;
                ReportPropertyChanged("Closed");
                OnClosedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Closed;
        partial void OnClosedChanging(Nullable<global::System.Boolean> value);
        partial void OnClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_PO", "PO_Line")]
        public EntityCollection<PO_Line> PO_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_PO", "PO_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_PO", "PO_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_PO_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_PO_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_PO_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_PO_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="PO_Line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PO_Line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PO_Line object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="award">Initial value of the Award property.</param>
        /// <param name="proposalSelected">Initial value of the ProposalSelected property.</param>
        /// <param name="propLineSlctd">Initial value of the PropLineSlctd property.</param>
        public static PO_Line CreatePO_Line(global::System.Int32 id, global::System.Int32 award, global::System.Int32 proposalSelected, global::System.Int32 propLineSlctd)
        {
            PO_Line pO_Line = new PO_Line();
            pO_Line.id = id;
            pO_Line.Award = award;
            pO_Line.ProposalSelected = proposalSelected;
            pO_Line.PropLineSlctd = propLineSlctd;
            return pO_Line;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> POLineRef
        {
            get
            {
                return _POLineRef;
            }
            set
            {
                OnPOLineRefChanging(value);
                ReportPropertyChanging("POLineRef");
                _POLineRef = value;
                ReportPropertyChanged("POLineRef");
                OnPOLineRefChanged();
            }
        }
        private Nullable<global::System.Decimal> _POLineRef;
        partial void OnPOLineRefChanging(Nullable<global::System.Decimal> value);
        partial void OnPOLineRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> POid
        {
            get
            {
                return _POid;
            }
            set
            {
                OnPOidChanging(value);
                ReportPropertyChanging("POid");
                _POid = value;
                ReportPropertyChanged("POid");
                OnPOidChanged();
            }
        }
        private Nullable<global::System.Int32> _POid;
        partial void OnPOidChanging(Nullable<global::System.Int32> value);
        partial void OnPOidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Award
        {
            get
            {
                return _Award;
            }
            set
            {
                OnAwardChanging(value);
                ReportPropertyChanging("Award");
                _Award = value;
                ReportPropertyChanged("Award");
                OnAwardChanged();
            }
        }
        private global::System.Int32 _Award;
        partial void OnAwardChanging(global::System.Int32 value);
        partial void OnAwardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProposalSelected
        {
            get
            {
                return _ProposalSelected;
            }
            set
            {
                OnProposalSelectedChanging(value);
                ReportPropertyChanging("ProposalSelected");
                _ProposalSelected = value;
                ReportPropertyChanged("ProposalSelected");
                OnProposalSelectedChanged();
            }
        }
        private global::System.Int32 _ProposalSelected;
        partial void OnProposalSelectedChanging(global::System.Int32 value);
        partial void OnProposalSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropLineSlctd
        {
            get
            {
                return _PropLineSlctd;
            }
            set
            {
                OnPropLineSlctdChanging(value);
                ReportPropertyChanging("PropLineSlctd");
                _PropLineSlctd = value;
                ReportPropertyChanged("PropLineSlctd");
                OnPropLineSlctdChanged();
            }
        }
        private global::System.Int32 _PropLineSlctd;
        partial void OnPropLineSlctdChanging(global::System.Int32 value);
        partial void OnPropLineSlctdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_PO", "PO")]
        public PO PO
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("LightSwitchApplication.FK_PO_Line_PO", "PO").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("LightSwitchApplication.FK_PO_Line_PO", "PO").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PO> POReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PO>("LightSwitchApplication.FK_PO_Line_PO", "PO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PO>("LightSwitchApplication.FK_PO_Line_PO", "PO", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Award_Selected", "Award_Selected")]
        public Award_Selected Award_Selected1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award_Selected>("LightSwitchApplication.FK_PO_Line_Award_Selected", "Award_Selected").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award_Selected>("LightSwitchApplication.FK_PO_Line_Award_Selected", "Award_Selected").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Award_Selected> Award_Selected1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Award_Selected>("LightSwitchApplication.FK_PO_Line_Award_Selected", "Award_Selected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Award_Selected>("LightSwitchApplication.FK_PO_Line_Award_Selected", "Award_Selected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_PO_Line", "Expediting")]
        public EntityCollection<Expediting> Expeditings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_PO_Line", "Expediting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_PO_Line", "Expediting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Proposal", "Proposal")]
        public Proposal Proposal1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_PO_Line_Proposal", "Proposal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_PO_Line_Proposal", "Proposal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal> Proposal1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_PO_Line_Proposal", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal>("LightSwitchApplication.FK_PO_Line_Proposal", "Proposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Proposal_Line", "Proposal_Line")]
        public Proposal_Line Proposal_Line1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "Proposal_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "Proposal_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal_Line> Proposal_Line1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "Proposal_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "Proposal_Line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Preference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Preference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Preference object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Preference CreatePreference(global::System.Int32 id)
        {
            Preference preference = new Preference();
            preference.ID = id;
            return preference;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreferenceType
        {
            get
            {
                return _PreferenceType;
            }
            set
            {
                OnPreferenceTypeChanging(value);
                ReportPropertyChanging("PreferenceType");
                _PreferenceType = value;
                ReportPropertyChanged("PreferenceType");
                OnPreferenceTypeChanged();
            }
        }
        private global::System.String _PreferenceType;
        partial void OnPreferenceTypeChanging(global::System.String value);
        partial void OnPreferenceTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Preference", "Client_Approved")]
        public EntityCollection<Client_Approved> Client_Approveds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Preference", "Client_Approved");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Preference", "Client_Approved", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectNo">Initial value of the ProjectNo property.</param>
        public static Project CreateProject(global::System.Int32 id, global::System.String projectNo)
        {
            Project project = new Project();
            project.ID = id;
            project.ProjectNo = projectNo;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectNo
        {
            get
            {
                return _ProjectNo;
            }
            set
            {
                OnProjectNoChanging(value);
                ReportPropertyChanging("ProjectNo");
                _ProjectNo = value;
                ReportPropertyChanged("ProjectNo");
                OnProjectNoChanged();
            }
        }
        private global::System.String _ProjectNo;
        partial void OnProjectNoChanging(global::System.String value);
        partial void OnProjectNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = value;
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Client
        {
            get
            {
                return _Client;
            }
            set
            {
                OnClientChanging(value);
                ReportPropertyChanging("Client");
                _Client = value;
                ReportPropertyChanged("Client");
                OnClientChanged();
            }
        }
        private Nullable<global::System.Int32> _Client;
        partial void OnClientChanging(Nullable<global::System.Int32> value);
        partial void OnClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhaseID
        {
            get
            {
                return _PhaseID;
            }
            set
            {
                OnPhaseIDChanging(value);
                ReportPropertyChanging("PhaseID");
                _PhaseID = value;
                ReportPropertyChanged("PhaseID");
                OnPhaseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PhaseID;
        partial void OnPhaseIDChanging(Nullable<global::System.Int32> value);
        partial void OnPhaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = value;
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                OnClassificationIDChanging(value);
                ReportPropertyChanging("ClassificationID");
                _ClassificationID = value;
                ReportPropertyChanged("ClassificationID");
                OnClassificationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassificationID;
        partial void OnClassificationIDChanging(Nullable<global::System.Int32> value);
        partial void OnClassificationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Project", "Project_Stakeholders")]
        public EntityCollection<Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project_Stakeholders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project_Stakeholders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_P_Project", "RFQ_P")]
        public EntityCollection<RFQ_PItem> RFQ_P
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ_PItem>("LightSwitchApplication.FK_RFQ_P_Project", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ_PItem>("LightSwitchApplication.FK_RFQ_P_Project", "RFQ_P", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Clients", "Clients")]
        public Client Client1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Project_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Project_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> Client1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("LightSwitchApplication.FK_Project_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("LightSwitchApplication.FK_Project_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Phase", "Phase")]
        public Phase Phase1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("LightSwitchApplication.FK_Project_Phase", "Phase").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("LightSwitchApplication.FK_Project_Phase", "Phase").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Phase> Phase1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Phase>("LightSwitchApplication.FK_Project_Phase", "Phase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Phase>("LightSwitchApplication.FK_Project_Phase", "Phase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Year", "Year")]
        public Year Year1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("LightSwitchApplication.FK_Project_Year", "Year").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("LightSwitchApplication.FK_Project_Year", "Year").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Year> Year1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Year>("LightSwitchApplication.FK_Project_Year", "Year");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Year>("LightSwitchApplication.FK_Project_Year", "Year", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_ProjectClassification", "ProjectClassification")]
        public ProjectClassification ProjectClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectClassification>("LightSwitchApplication.FK_Project_ProjectClassification", "ProjectClassification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectClassification>("LightSwitchApplication.FK_Project_ProjectClassification", "ProjectClassification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectClassification> ProjectClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectClassification>("LightSwitchApplication.FK_Project_ProjectClassification", "ProjectClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectClassification>("LightSwitchApplication.FK_Project_ProjectClassification", "ProjectClassification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Project_Stakeholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project_Stakeholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project_Stakeholder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="stakeholderType">Initial value of the StakeholderType property.</param>
        /// <param name="stakeHolder">Initial value of the StakeHolder property.</param>
        public static Project_Stakeholder CreateProject_Stakeholder(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 stakeholderType, global::System.Int32 stakeHolder)
        {
            Project_Stakeholder project_Stakeholder = new Project_Stakeholder();
            project_Stakeholder.id = id;
            project_Stakeholder.ProjectID = projectID;
            project_Stakeholder.StakeholderType = stakeholderType;
            project_Stakeholder.StakeHolder = stakeHolder;
            return project_Stakeholder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = value;
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StakeholderType
        {
            get
            {
                return _StakeholderType;
            }
            set
            {
                OnStakeholderTypeChanging(value);
                ReportPropertyChanging("StakeholderType");
                _StakeholderType = value;
                ReportPropertyChanged("StakeholderType");
                OnStakeholderTypeChanged();
            }
        }
        private global::System.Int32 _StakeholderType;
        partial void OnStakeholderTypeChanging(global::System.Int32 value);
        partial void OnStakeholderTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StakeHolder
        {
            get
            {
                return _StakeHolder;
            }
            set
            {
                OnStakeHolderChanging(value);
                ReportPropertyChanging("StakeHolder");
                _StakeHolder = value;
                ReportPropertyChanged("StakeHolder");
                OnStakeHolderChanged();
            }
        }
        private global::System.Int32 _StakeHolder;
        partial void OnStakeHolderChanging(global::System.Int32 value);
        partial void OnStakeHolderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types")]
        public Stakeholder_Type Stakeholder_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder_Type>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder_Type>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stakeholder_Type> Stakeholder_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder_Type>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stakeholder_Type>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Stakeholder_Types", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("LightSwitchApplication.FK_Project_Stakeholders_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholders", "Stakeholders")]
        public Stakeholder Stakeholder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Stakeholders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Stakeholders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stakeholder> Stakeholder1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Stakeholders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Stakeholders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="ProjectClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectClassification object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ProjectClassification CreateProjectClassification(global::System.Int32 id)
        {
            ProjectClassification projectClassification = new ProjectClassification();
            projectClassification.ID = id;
            return projectClassification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectClassification1
        {
            get
            {
                return _ProjectClassification1;
            }
            set
            {
                OnProjectClassification1Changing(value);
                ReportPropertyChanging("ProjectClassification1");
                _ProjectClassification1 = value;
                ReportPropertyChanged("ProjectClassification1");
                OnProjectClassification1Changed();
            }
        }
        private global::System.String _ProjectClassification1;
        partial void OnProjectClassification1Changing(global::System.String value);
        partial void OnProjectClassification1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_ProjectClassification", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("LightSwitchApplication.FK_Project_ProjectClassification", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("LightSwitchApplication.FK_Project_ProjectClassification", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Proposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Proposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Proposal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Proposal CreateProposal(global::System.Int32 id)
        {
            Proposal proposal = new Proposal();
            proposal.ID = id;
            return proposal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProposalNumber
        {
            get
            {
                return _ProposalNumber;
            }
            set
            {
                OnProposalNumberChanging(value);
                ReportPropertyChanging("ProposalNumber");
                _ProposalNumber = value;
                ReportPropertyChanged("ProposalNumber");
                OnProposalNumberChanged();
            }
        }
        private global::System.String _ProposalNumber;
        partial void OnProposalNumberChanging(global::System.String value);
        partial void OnProposalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShippingRefNo
        {
            get
            {
                return _ShippingRefNo;
            }
            set
            {
                OnShippingRefNoChanging(value);
                ReportPropertyChanging("ShippingRefNo");
                _ShippingRefNo = value;
                ReportPropertyChanged("ShippingRefNo");
                OnShippingRefNoChanged();
            }
        }
        private global::System.String _ShippingRefNo;
        partial void OnShippingRefNoChanging(global::System.String value);
        partial void OnShippingRefNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BidRecieved
        {
            get
            {
                return _BidRecieved;
            }
            set
            {
                OnBidRecievedChanging(value);
                ReportPropertyChanging("BidRecieved");
                _BidRecieved = value;
                ReportPropertyChanged("BidRecieved");
                OnBidRecievedChanged();
            }
        }
        private Nullable<global::System.DateTime> _BidRecieved;
        partial void OnBidRecievedChanging(Nullable<global::System.DateTime> value);
        partial void OnBidRecievedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TechCompliant
        {
            get
            {
                return _TechCompliant;
            }
            set
            {
                OnTechCompliantChanging(value);
                ReportPropertyChanging("TechCompliant");
                _TechCompliant = value;
                ReportPropertyChanged("TechCompliant");
                OnTechCompliantChanged();
            }
        }
        private Nullable<global::System.Boolean> _TechCompliant;
        partial void OnTechCompliantChanging(Nullable<global::System.Boolean> value);
        partial void OnTechCompliantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CommercialCompliant
        {
            get
            {
                return _CommercialCompliant;
            }
            set
            {
                OnCommercialCompliantChanging(value);
                ReportPropertyChanging("CommercialCompliant");
                _CommercialCompliant = value;
                ReportPropertyChanged("CommercialCompliant");
                OnCommercialCompliantChanged();
            }
        }
        private Nullable<global::System.Boolean> _CommercialCompliant;
        partial void OnCommercialCompliantChanging(Nullable<global::System.Boolean> value);
        partial void OnCommercialCompliantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PkgNoID
        {
            get
            {
                return _PkgNoID;
            }
            set
            {
                OnPkgNoIDChanging(value);
                ReportPropertyChanging("PkgNoID");
                _PkgNoID = value;
                ReportPropertyChanged("PkgNoID");
                OnPkgNoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PkgNoID;
        partial void OnPkgNoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPkgNoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_RFQ_P", "RFQ_P")]
        public RFQ_PItem RFQ_PItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Proposal_RFQ_P", "RFQ_P").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Proposal_RFQ_P", "RFQ_P").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_PItem> RFQ_PItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Proposal_RFQ_P", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_Proposal_RFQ_P", "RFQ_P", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Line_Proposal", "Proposal_Line")]
        public EntityCollection<Proposal_Line> Proposal_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal_Line>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal_Line>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Suppliers", "Suppliers")]
        public Supplier Supplier1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Proposal_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Proposal_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> Supplier1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Proposal_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_Proposal_Suppliers", "Suppliers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal", "Award_Selected")]
        public EntityCollection<Award_Selected> Award_Selecteds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_Proposal", "Award_Selected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_Proposal", "Award_Selected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Proposal", "PO_Line")]
        public EntityCollection<PO_Line> PO_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Proposal", "PO_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Proposal", "PO_Line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Proposal_Line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Proposal_Line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Proposal_Line object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="meetSpecs">Initial value of the MeetSpecs property.</param>
        /// <param name="awardIt">Initial value of the AwardIt property.</param>
        public static Proposal_Line CreateProposal_Line(global::System.Int32 id, global::System.Boolean meetSpecs, global::System.Boolean awardIt)
        {
            Proposal_Line proposal_Line = new Proposal_Line();
            proposal_Line.ID = id;
            proposal_Line.MeetSpecs = meetSpecs;
            proposal_Line.AwardIt = awardIt;
            return proposal_Line;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProposalLineNo
        {
            get
            {
                return _ProposalLineNo;
            }
            set
            {
                OnProposalLineNoChanging(value);
                ReportPropertyChanging("ProposalLineNo");
                _ProposalLineNo = value;
                ReportPropertyChanged("ProposalLineNo");
                OnProposalLineNoChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProposalLineNo;
        partial void OnProposalLineNoChanging(Nullable<global::System.Decimal> value);
        partial void OnProposalLineNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MeetSpecs
        {
            get
            {
                return _MeetSpecs;
            }
            set
            {
                OnMeetSpecsChanging(value);
                ReportPropertyChanging("MeetSpecs");
                _MeetSpecs = value;
                ReportPropertyChanged("MeetSpecs");
                OnMeetSpecsChanged();
            }
        }
        private global::System.Boolean _MeetSpecs;
        partial void OnMeetSpecsChanging(global::System.Boolean value);
        partial void OnMeetSpecsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CostPerUnit
        {
            get
            {
                return _CostPerUnit;
            }
            set
            {
                OnCostPerUnitChanging(value);
                ReportPropertyChanging("CostPerUnit");
                _CostPerUnit = value;
                ReportPropertyChanged("CostPerUnit");
                OnCostPerUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _CostPerUnit;
        partial void OnCostPerUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnCostPerUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManufacturingPoint
        {
            get
            {
                return _ManufacturingPoint;
            }
            set
            {
                OnManufacturingPointChanging(value);
                ReportPropertyChanging("ManufacturingPoint");
                _ManufacturingPoint = value;
                ReportPropertyChanged("ManufacturingPoint");
                OnManufacturingPointChanged();
            }
        }
        private global::System.String _ManufacturingPoint;
        partial void OnManufacturingPointChanging(global::System.String value);
        partial void OnManufacturingPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryOfOrigin
        {
            get
            {
                return _CountryOfOrigin;
            }
            set
            {
                OnCountryOfOriginChanging(value);
                ReportPropertyChanging("CountryOfOrigin");
                _CountryOfOrigin = value;
                ReportPropertyChanged("CountryOfOrigin");
                OnCountryOfOriginChanged();
            }
        }
        private global::System.String _CountryOfOrigin;
        partial void OnCountryOfOriginChanging(global::System.String value);
        partial void OnCountryOfOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ShippingARO
        {
            get
            {
                return _ShippingARO;
            }
            set
            {
                OnShippingAROChanging(value);
                ReportPropertyChanging("ShippingARO");
                _ShippingARO = value;
                ReportPropertyChanged("ShippingARO");
                OnShippingAROChanged();
            }
        }
        private Nullable<global::System.Decimal> _ShippingARO;
        partial void OnShippingAROChanging(Nullable<global::System.Decimal> value);
        partial void OnShippingAROChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SubmittalsARO
        {
            get
            {
                return _SubmittalsARO;
            }
            set
            {
                OnSubmittalsAROChanging(value);
                ReportPropertyChanging("SubmittalsARO");
                _SubmittalsARO = value;
                ReportPropertyChanged("SubmittalsARO");
                OnSubmittalsAROChanged();
            }
        }
        private Nullable<global::System.Decimal> _SubmittalsARO;
        partial void OnSubmittalsAROChanging(Nullable<global::System.Decimal> value);
        partial void OnSubmittalsAROChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NegotiatedFinalCost
        {
            get
            {
                return _NegotiatedFinalCost;
            }
            set
            {
                OnNegotiatedFinalCostChanging(value);
                ReportPropertyChanging("NegotiatedFinalCost");
                _NegotiatedFinalCost = value;
                ReportPropertyChanged("NegotiatedFinalCost");
                OnNegotiatedFinalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _NegotiatedFinalCost;
        partial void OnNegotiatedFinalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnNegotiatedFinalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = value;
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AwardIt
        {
            get
            {
                return _AwardIt;
            }
            set
            {
                OnAwardItChanging(value);
                ReportPropertyChanging("AwardIt");
                _AwardIt = value;
                ReportPropertyChanged("AwardIt");
                OnAwardItChanged();
            }
        }
        private global::System.Boolean _AwardIt;
        partial void OnAwardItChanging(global::System.Boolean value);
        partial void OnAwardItChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RFQLineID
        {
            get
            {
                return _RFQLineID;
            }
            set
            {
                OnRFQLineIDChanging(value);
                ReportPropertyChanging("RFQLineID");
                _RFQLineID = value;
                ReportPropertyChanged("RFQLineID");
                OnRFQLineIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RFQLineID;
        partial void OnRFQLineIDChanging(Nullable<global::System.Int32> value);
        partial void OnRFQLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProposalID
        {
            get
            {
                return _ProposalID;
            }
            set
            {
                OnProposalIDChanging(value);
                ReportPropertyChanging("ProposalID");
                _ProposalID = value;
                ReportPropertyChanged("ProposalID");
                OnProposalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProposalID;
        partial void OnProposalIDChanging(Nullable<global::System.Int32> value);
        partial void OnProposalIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Line_RFQ_Line", "RFQ_Line")]
        public RFQ_Line RFQ_Line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "RFQ_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "RFQ_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_Line> RFQ_LineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "RFQ_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "RFQ_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_Proposal_Line", "Shipment")]
        public EntityCollection<Shipment> Shipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Shipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_Proposal_Line", "Award_Selected")]
        public EntityCollection<Award_Selected> Award_Selecteds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Award_Selected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_Proposal_Line", "Award_Selected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Line_Proposal", "Proposal")]
        public Proposal Proposal1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal> Proposal1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal>("LightSwitchApplication.FK_Proposal_Line_Proposal", "Proposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Line_Proposal_Line", "PO_Line")]
        public EntityCollection<PO_Line> PO_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "PO_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO_Line>("LightSwitchApplication.FK_PO_Line_Proposal_Line", "PO_Line", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Region")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Region : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Region object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Region CreateRegion(global::System.Int32 id)
        {
            Region region = new Region();
            region.ID = id;
            return region;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Region1
        {
            get
            {
                return _Region1;
            }
            set
            {
                OnRegion1Changing(value);
                ReportPropertyChanging("Region1");
                _Region1 = value;
                ReportPropertyChanged("Region1");
                OnRegion1Changed();
            }
        }
        private global::System.String _Region1;
        partial void OnRegion1Changing(global::System.String value);
        partial void OnRegion1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierRegion_Region", "SupplierRegion")]
        public EntityCollection<SupplierRegion> SupplierRegions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplierRegion>("LightSwitchApplication.FK_SupplierRegion_Region", "SupplierRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplierRegion>("LightSwitchApplication.FK_SupplierRegion_Region", "SupplierRegion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RFQ_Line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RFQ_Line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RFQ_Line object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="testingReq">Initial value of the TestingReq property.</param>
        /// <param name="inspection">Initial value of the Inspection property.</param>
        public static RFQ_Line CreateRFQ_Line(global::System.Int32 id, global::System.Boolean testingReq, global::System.Boolean inspection)
        {
            RFQ_Line rFQ_Line = new RFQ_Line();
            rFQ_Line.id = id;
            rFQ_Line.TestingReq = testingReq;
            rFQ_Line.Inspection = inspection;
            return rFQ_Line;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RFQLineNo
        {
            get
            {
                return _RFQLineNo;
            }
            set
            {
                OnRFQLineNoChanging(value);
                ReportPropertyChanging("RFQLineNo");
                _RFQLineNo = value;
                ReportPropertyChanged("RFQLineNo");
                OnRFQLineNoChanged();
            }
        }
        private Nullable<global::System.Decimal> _RFQLineNo;
        partial void OnRFQLineNoChanging(Nullable<global::System.Decimal> value);
        partial void OnRFQLineNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = value;
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = value;
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _Qty;
        partial void OnQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TestingReq
        {
            get
            {
                return _TestingReq;
            }
            set
            {
                OnTestingReqChanging(value);
                ReportPropertyChanging("TestingReq");
                _TestingReq = value;
                ReportPropertyChanged("TestingReq");
                OnTestingReqChanged();
            }
        }
        private global::System.Boolean _TestingReq;
        partial void OnTestingReqChanging(global::System.Boolean value);
        partial void OnTestingReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestingLevel
        {
            get
            {
                return _TestingLevel;
            }
            set
            {
                OnTestingLevelChanging(value);
                ReportPropertyChanging("TestingLevel");
                _TestingLevel = value;
                ReportPropertyChanged("TestingLevel");
                OnTestingLevelChanged();
            }
        }
        private global::System.String _TestingLevel;
        partial void OnTestingLevelChanging(global::System.String value);
        partial void OnTestingLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inspection
        {
            get
            {
                return _Inspection;
            }
            set
            {
                OnInspectionChanging(value);
                ReportPropertyChanging("Inspection");
                _Inspection = value;
                ReportPropertyChanged("Inspection");
                OnInspectionChanged();
            }
        }
        private global::System.Boolean _Inspection;
        partial void OnInspectionChanging(global::System.Boolean value);
        partial void OnInspectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShippingRefNo
        {
            get
            {
                return _ShippingRefNo;
            }
            set
            {
                OnShippingRefNoChanging(value);
                ReportPropertyChanging("ShippingRefNo");
                _ShippingRefNo = value;
                ReportPropertyChanged("ShippingRefNo");
                OnShippingRefNoChanged();
            }
        }
        private global::System.String _ShippingRefNo;
        partial void OnShippingRefNoChanging(global::System.String value);
        partial void OnShippingRefNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagNo
        {
            get
            {
                return _TagNo;
            }
            set
            {
                OnTagNoChanging(value);
                ReportPropertyChanging("TagNo");
                _TagNo = value;
                ReportPropertyChanged("TagNo");
                OnTagNoChanged();
            }
        }
        private global::System.String _TagNo;
        partial void OnTagNoChanging(global::System.String value);
        partial void OnTagNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RecievedQty
        {
            get
            {
                return _RecievedQty;
            }
            set
            {
                OnRecievedQtyChanging(value);
                ReportPropertyChanging("RecievedQty");
                _RecievedQty = value;
                ReportPropertyChanged("RecievedQty");
                OnRecievedQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _RecievedQty;
        partial void OnRecievedQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnRecievedQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = value;
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PkgNoID
        {
            get
            {
                return _PkgNoID;
            }
            set
            {
                OnPkgNoIDChanging(value);
                ReportPropertyChanging("PkgNoID");
                _PkgNoID = value;
                ReportPropertyChanged("PkgNoID");
                OnPkgNoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PkgNoID;
        partial void OnPkgNoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPkgNoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UOM
        {
            get
            {
                return _UOM;
            }
            set
            {
                OnUOMChanging(value);
                ReportPropertyChanging("UOM");
                _UOM = value;
                ReportPropertyChanged("UOM");
                OnUOMChanged();
            }
        }
        private Nullable<global::System.Int32> _UOM;
        partial void OnUOMChanging(Nullable<global::System.Int32> value);
        partial void OnUOMChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Line_RFQ_Line", "Proposal_Line")]
        public EntityCollection<Proposal_Line> Proposal_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "Proposal_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal_Line>("LightSwitchApplication.FK_Proposal_Line_RFQ_Line", "Proposal_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_Line_RFQ_P", "RFQ_P")]
        public RFQ_PItem RFQ_PItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_P").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_P").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_PItem> RFQ_PItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_PItem>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_P", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Submittal_RFQ_Line", "Submittal")]
        public EntityCollection<Submittal> Submittals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submittal>("LightSwitchApplication.FK_Submittal_RFQ_Line", "Submittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submittal>("LightSwitchApplication.FK_Submittal_RFQ_Line", "Submittal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_Line_UOM", "UOM")]
        public UOM UOM1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_RFQ_Line_UOM", "UOM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_RFQ_Line_UOM", "UOM").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UOM> UOM1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UOM>("LightSwitchApplication.FK_RFQ_Line_UOM", "UOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UOM>("LightSwitchApplication.FK_RFQ_Line_UOM", "UOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_Line", "Award_Selected")]
        public EntityCollection<Award_Selected> Award_Selecteds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "Award_Selected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_RFQ_Line", "Award_Selected", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="RFQ_PItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RFQ_PItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RFQ_PItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pkgNo">Initial value of the PkgNo property.</param>
        /// <param name="preBidRequired">Initial value of the PreBidRequired property.</param>
        /// <param name="preAwardRequired">Initial value of the PreAwardRequired property.</param>
        /// <param name="criticalPath">Initial value of the CriticalPath property.</param>
        public static RFQ_PItem CreateRFQ_PItem(global::System.Int32 id, global::System.String pkgNo, global::System.Boolean preBidRequired, global::System.Boolean preAwardRequired, global::System.Boolean criticalPath)
        {
            RFQ_PItem rFQ_PItem = new RFQ_PItem();
            rFQ_PItem.ID = id;
            rFQ_PItem.PkgNo = pkgNo;
            rFQ_PItem.PreBidRequired = preBidRequired;
            rFQ_PItem.PreAwardRequired = preAwardRequired;
            rFQ_PItem.CriticalPath = criticalPath;
            return rFQ_PItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PkgNo
        {
            get
            {
                return _PkgNo;
            }
            set
            {
                OnPkgNoChanging(value);
                ReportPropertyChanging("PkgNo");
                _PkgNo = value;
                ReportPropertyChanged("PkgNo");
                OnPkgNoChanged();
            }
        }
        private global::System.String _PkgNo;
        partial void OnPkgNoChanging(global::System.String value);
        partial void OnPkgNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PkgName
        {
            get
            {
                return _PkgName;
            }
            set
            {
                OnPkgNameChanging(value);
                ReportPropertyChanging("PkgName");
                _PkgName = value;
                ReportPropertyChanged("PkgName");
                OnPkgNameChanged();
            }
        }
        private global::System.String _PkgName;
        partial void OnPkgNameChanging(global::System.String value);
        partial void OnPkgNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PkgDescription
        {
            get
            {
                return _PkgDescription;
            }
            set
            {
                OnPkgDescriptionChanging(value);
                ReportPropertyChanging("PkgDescription");
                _PkgDescription = value;
                ReportPropertyChanged("PkgDescription");
                OnPkgDescriptionChanged();
            }
        }
        private global::System.String _PkgDescription;
        partial void OnPkgDescriptionChanging(global::System.String value);
        partial void OnPkgDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PkgWBS
        {
            get
            {
                return _PkgWBS;
            }
            set
            {
                OnPkgWBSChanging(value);
                ReportPropertyChanging("PkgWBS");
                _PkgWBS = value;
                ReportPropertyChanged("PkgWBS");
                OnPkgWBSChanged();
            }
        }
        private global::System.String _PkgWBS;
        partial void OnPkgWBSChanging(global::System.String value);
        partial void OnPkgWBSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BudgetValue
        {
            get
            {
                return _BudgetValue;
            }
            set
            {
                OnBudgetValueChanging(value);
                ReportPropertyChanging("BudgetValue");
                _BudgetValue = value;
                ReportPropertyChanged("BudgetValue");
                OnBudgetValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _BudgetValue;
        partial void OnBudgetValueChanging(Nullable<global::System.Decimal> value);
        partial void OnBudgetValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReqdOnSite
        {
            get
            {
                return _ReqdOnSite;
            }
            set
            {
                OnReqdOnSiteChanging(value);
                ReportPropertyChanging("ReqdOnSite");
                _ReqdOnSite = value;
                ReportPropertyChanged("ReqdOnSite");
                OnReqdOnSiteChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReqdOnSite;
        partial void OnReqdOnSiteChanging(Nullable<global::System.DateTime> value);
        partial void OnReqdOnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstTransportDays
        {
            get
            {
                return _EstTransportDays;
            }
            set
            {
                OnEstTransportDaysChanging(value);
                ReportPropertyChanging("EstTransportDays");
                _EstTransportDays = value;
                ReportPropertyChanged("EstTransportDays");
                OnEstTransportDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstTransportDays;
        partial void OnEstTransportDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnEstTransportDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstMfgDays
        {
            get
            {
                return _EstMfgDays;
            }
            set
            {
                OnEstMfgDaysChanging(value);
                ReportPropertyChanging("EstMfgDays");
                _EstMfgDays = value;
                ReportPropertyChanged("EstMfgDays");
                OnEstMfgDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstMfgDays;
        partial void OnEstMfgDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnEstMfgDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstAwdProcessDays
        {
            get
            {
                return _EstAwdProcessDays;
            }
            set
            {
                OnEstAwdProcessDaysChanging(value);
                ReportPropertyChanging("EstAwdProcessDays");
                _EstAwdProcessDays = value;
                ReportPropertyChanged("EstAwdProcessDays");
                OnEstAwdProcessDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstAwdProcessDays;
        partial void OnEstAwdProcessDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnEstAwdProcessDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstProposalDays
        {
            get
            {
                return _EstProposalDays;
            }
            set
            {
                OnEstProposalDaysChanging(value);
                ReportPropertyChanging("EstProposalDays");
                _EstProposalDays = value;
                ReportPropertyChanged("EstProposalDays");
                OnEstProposalDaysChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstProposalDays;
        partial void OnEstProposalDaysChanging(Nullable<global::System.Decimal> value);
        partial void OnEstProposalDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ERW
        {
            get
            {
                return _ERW;
            }
            set
            {
                OnERWChanging(value);
                ReportPropertyChanging("ERW");
                _ERW = value;
                ReportPropertyChanged("ERW");
                OnERWChanged();
            }
        }
        private Nullable<global::System.DateTime> _ERW;
        partial void OnERWChanging(Nullable<global::System.DateTime> value);
        partial void OnERWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ERWNumber
        {
            get
            {
                return _ERWNumber;
            }
            set
            {
                OnERWNumberChanging(value);
                ReportPropertyChanging("ERWNumber");
                _ERWNumber = value;
                ReportPropertyChanged("ERWNumber");
                OnERWNumberChanged();
            }
        }
        private global::System.String _ERWNumber;
        partial void OnERWNumberChanging(global::System.String value);
        partial void OnERWNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ERW_Rev
        {
            get
            {
                return _ERW_Rev;
            }
            set
            {
                OnERW_RevChanging(value);
                ReportPropertyChanging("ERW_Rev");
                _ERW_Rev = value;
                ReportPropertyChanged("ERW_Rev");
                OnERW_RevChanged();
            }
        }
        private global::System.String _ERW_Rev;
        partial void OnERW_RevChanging(global::System.String value);
        partial void OnERW_RevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ERWContact
        {
            get
            {
                return _ERWContact;
            }
            set
            {
                OnERWContactChanging(value);
                ReportPropertyChanging("ERWContact");
                _ERWContact = value;
                ReportPropertyChanged("ERWContact");
                OnERWContactChanged();
            }
        }
        private global::System.String _ERWContact;
        partial void OnERWContactChanging(global::System.String value);
        partial void OnERWContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SpecifiedBidDue
        {
            get
            {
                return _SpecifiedBidDue;
            }
            set
            {
                OnSpecifiedBidDueChanging(value);
                ReportPropertyChanging("SpecifiedBidDue");
                _SpecifiedBidDue = value;
                ReportPropertyChanged("SpecifiedBidDue");
                OnSpecifiedBidDueChanged();
            }
        }
        private Nullable<global::System.DateTime> _SpecifiedBidDue;
        partial void OnSpecifiedBidDueChanging(Nullable<global::System.DateTime> value);
        partial void OnSpecifiedBidDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RevisedBidDue
        {
            get
            {
                return _RevisedBidDue;
            }
            set
            {
                OnRevisedBidDueChanging(value);
                ReportPropertyChanging("RevisedBidDue");
                _RevisedBidDue = value;
                ReportPropertyChanged("RevisedBidDue");
                OnRevisedBidDueChanged();
            }
        }
        private Nullable<global::System.DateTime> _RevisedBidDue;
        partial void OnRevisedBidDueChanging(Nullable<global::System.DateTime> value);
        partial void OnRevisedBidDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BidsReceived
        {
            get
            {
                return _BidsReceived;
            }
            set
            {
                OnBidsReceivedChanging(value);
                ReportPropertyChanging("BidsReceived");
                _BidsReceived = value;
                ReportPropertyChanged("BidsReceived");
                OnBidsReceivedChanged();
            }
        }
        private Nullable<global::System.DateTime> _BidsReceived;
        partial void OnBidsReceivedChanging(Nullable<global::System.DateTime> value);
        partial void OnBidsReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PreBidRequired
        {
            get
            {
                return _PreBidRequired;
            }
            set
            {
                OnPreBidRequiredChanging(value);
                ReportPropertyChanging("PreBidRequired");
                _PreBidRequired = value;
                ReportPropertyChanged("PreBidRequired");
                OnPreBidRequiredChanged();
            }
        }
        private global::System.Boolean _PreBidRequired;
        partial void OnPreBidRequiredChanging(global::System.Boolean value);
        partial void OnPreBidRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PreAwardRequired
        {
            get
            {
                return _PreAwardRequired;
            }
            set
            {
                OnPreAwardRequiredChanging(value);
                ReportPropertyChanging("PreAwardRequired");
                _PreAwardRequired = value;
                ReportPropertyChanged("PreAwardRequired");
                OnPreAwardRequiredChanged();
            }
        }
        private global::System.Boolean _PreAwardRequired;
        partial void OnPreAwardRequiredChanging(global::System.Boolean value);
        partial void OnPreAwardRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BidOpening
        {
            get
            {
                return _BidOpening;
            }
            set
            {
                OnBidOpeningChanging(value);
                ReportPropertyChanging("BidOpening");
                _BidOpening = value;
                ReportPropertyChanged("BidOpening");
                OnBidOpeningChanged();
            }
        }
        private Nullable<global::System.DateTime> _BidOpening;
        partial void OnBidOpeningChanging(Nullable<global::System.DateTime> value);
        partial void OnBidOpeningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToEng
        {
            get
            {
                return _ToEng;
            }
            set
            {
                OnToEngChanging(value);
                ReportPropertyChanging("ToEng");
                _ToEng = value;
                ReportPropertyChanged("ToEng");
                OnToEngChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToEng;
        partial void OnToEngChanging(Nullable<global::System.DateTime> value);
        partial void OnToEngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EngApproval
        {
            get
            {
                return _EngApproval;
            }
            set
            {
                OnEngApprovalChanging(value);
                ReportPropertyChanging("EngApproval");
                _EngApproval = value;
                ReportPropertyChanged("EngApproval");
                OnEngApprovalChanged();
            }
        }
        private Nullable<global::System.DateTime> _EngApproval;
        partial void OnEngApprovalChanging(Nullable<global::System.DateTime> value);
        partial void OnEngApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Regret
        {
            get
            {
                return _Regret;
            }
            set
            {
                OnRegretChanging(value);
                ReportPropertyChanging("Regret");
                _Regret = value;
                ReportPropertyChanged("Regret");
                OnRegretChanged();
            }
        }
        private Nullable<global::System.DateTime> _Regret;
        partial void OnRegretChanging(Nullable<global::System.DateTime> value);
        partial void OnRegretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommercialDone
        {
            get
            {
                return _CommercialDone;
            }
            set
            {
                OnCommercialDoneChanging(value);
                ReportPropertyChanging("CommercialDone");
                _CommercialDone = value;
                ReportPropertyChanged("CommercialDone");
                OnCommercialDoneChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommercialDone;
        partial void OnCommercialDoneChanging(Nullable<global::System.DateTime> value);
        partial void OnCommercialDoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CriticalPath
        {
            get
            {
                return _CriticalPath;
            }
            set
            {
                OnCriticalPathChanging(value);
                ReportPropertyChanging("CriticalPath");
                _CriticalPath = value;
                ReportPropertyChanged("CriticalPath");
                OnCriticalPathChanged();
            }
        }
        private global::System.Boolean _CriticalPath;
        partial void OnCriticalPathChanging(global::System.Boolean value);
        partial void OnCriticalPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectNoID
        {
            get
            {
                return _ProjectNoID;
            }
            set
            {
                OnProjectNoIDChanging(value);
                ReportPropertyChanging("ProjectNoID");
                _ProjectNoID = value;
                ReportPropertyChanged("ProjectNoID");
                OnProjectNoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectNoID;
        partial void OnProjectNoIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectNoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceStrategyID
        {
            get
            {
                return _SourceStrategyID;
            }
            set
            {
                OnSourceStrategyIDChanging(value);
                ReportPropertyChanging("SourceStrategyID");
                _SourceStrategyID = value;
                ReportPropertyChanged("SourceStrategyID");
                OnSourceStrategyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceStrategyID;
        partial void OnSourceStrategyIDChanging(Nullable<global::System.Int32> value);
        partial void OnSourceStrategyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_BidList_RFQ_P1", "BidList")]
        public EntityCollection<BidList> BidLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BidList>("LightSwitchApplication.FK_BidList_RFQ_P1", "BidList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BidList>("LightSwitchApplication.FK_BidList_RFQ_P1", "BidList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_RFQ_P", "Proposal")]
        public EntityCollection<Proposal> Proposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal>("LightSwitchApplication.FK_Proposal_RFQ_P", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal>("LightSwitchApplication.FK_Proposal_RFQ_P", "Proposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_Line_RFQ_P", "RFQ_Line")]
        public EntityCollection<RFQ_Line> RFQ_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ_Line>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ_Line>("LightSwitchApplication.FK_RFQ_Line_RFQ_P", "RFQ_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_P_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_RFQ_P_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_RFQ_P_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("LightSwitchApplication.FK_RFQ_P_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("LightSwitchApplication.FK_RFQ_P_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_P_SourceStrategy", "SourceStrategy")]
        public SourceStrategy SourceStrategy1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceStrategy>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "SourceStrategy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceStrategy>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "SourceStrategy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SourceStrategy> SourceStrategy1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceStrategy>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "SourceStrategy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SourceStrategy>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "SourceStrategy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Award_Selected_RFQ_P", "Award_Selected")]
        public EntityCollection<Award_Selected> Award_Selecteds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "Award_Selected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Award_Selected>("LightSwitchApplication.FK_Award_Selected_RFQ_P", "Award_Selected", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Safety_Record")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Safety_Record : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Safety_Record object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Safety_Record CreateSafety_Record(global::System.Int32 id)
        {
            Safety_Record safety_Record = new Safety_Record();
            safety_Record.ID = id;
            return safety_Record;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = value;
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Decimal> _Year;
        partial void OnYearChanging(Nullable<global::System.Decimal> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EMR
        {
            get
            {
                return _EMR;
            }
            set
            {
                OnEMRChanging(value);
                ReportPropertyChanging("EMR");
                _EMR = value;
                ReportPropertyChanged("EMR");
                OnEMRChanged();
            }
        }
        private Nullable<global::System.Decimal> _EMR;
        partial void OnEMRChanging(Nullable<global::System.Decimal> value);
        partial void OnEMRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TIFR
        {
            get
            {
                return _TIFR;
            }
            set
            {
                OnTIFRChanging(value);
                ReportPropertyChanging("TIFR");
                _TIFR = value;
                ReportPropertyChanged("TIFR");
                OnTIFRChanged();
            }
        }
        private Nullable<global::System.Decimal> _TIFR;
        partial void OnTIFRChanging(Nullable<global::System.Decimal> value);
        partial void OnTIFRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = value;
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Safety_Records_Safety_Status", "Safety_Status")]
        public Safety_Status Safety_Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Safety_Status>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Safety_Status>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Safety_Status> Safety_StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Safety_Status>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Safety_Status>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Safety_Records_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Safety_Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Safety_Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Safety_Status object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Safety_Status CreateSafety_Status(global::System.Int32 id)
        {
            Safety_Status safety_Status = new Safety_Status();
            safety_Status.ID = id;
            return safety_Status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = value;
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Safety_Records_Safety_Status", "Safety_Records")]
        public EntityCollection<Safety_Record> Safety_Records
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Safety_Record>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Records");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Safety_Record>("LightSwitchApplication.FK_Safety_Records_Safety_Status", "Safety_Records", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Shipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shipment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Shipment CreateShipment(global::System.Int32 id)
        {
            Shipment shipment = new Shipment();
            shipment.ID = id;
            return shipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Origin
        {
            get
            {
                return _Origin;
            }
            set
            {
                OnOriginChanging(value);
                ReportPropertyChanging("Origin");
                _Origin = value;
                ReportPropertyChanged("Origin");
                OnOriginChanged();
            }
        }
        private global::System.String _Origin;
        partial void OnOriginChanging(global::System.String value);
        partial void OnOriginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QtyShipments
        {
            get
            {
                return _QtyShipments;
            }
            set
            {
                OnQtyShipmentsChanging(value);
                ReportPropertyChanging("QtyShipments");
                _QtyShipments = value;
                ReportPropertyChanged("QtyShipments");
                OnQtyShipmentsChanged();
            }
        }
        private Nullable<global::System.Decimal> _QtyShipments;
        partial void OnQtyShipmentsChanging(Nullable<global::System.Decimal> value);
        partial void OnQtyShipmentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Containers_Shipment
        {
            get
            {
                return _Containers_Shipment;
            }
            set
            {
                OnContainers_ShipmentChanging(value);
                ReportPropertyChanging("Containers_Shipment");
                _Containers_Shipment = value;
                ReportPropertyChanged("Containers_Shipment");
                OnContainers_ShipmentChanged();
            }
        }
        private global::System.String _Containers_Shipment;
        partial void OnContainers_ShipmentChanging(global::System.String value);
        partial void OnContainers_ShipmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = value;
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.String _Mode;
        partial void OnModeChanging(global::System.String value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Carrier
        {
            get
            {
                return _Carrier;
            }
            set
            {
                OnCarrierChanging(value);
                ReportPropertyChanging("Carrier");
                _Carrier = value;
                ReportPropertyChanged("Carrier");
                OnCarrierChanged();
            }
        }
        private global::System.String _Carrier;
        partial void OnCarrierChanging(global::System.String value);
        partial void OnCarrierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CarrierContact
        {
            get
            {
                return _CarrierContact;
            }
            set
            {
                OnCarrierContactChanging(value);
                ReportPropertyChanging("CarrierContact");
                _CarrierContact = value;
                ReportPropertyChanged("CarrierContact");
                OnCarrierContactChanged();
            }
        }
        private global::System.String _CarrierContact;
        partial void OnCarrierContactChanging(global::System.String value);
        partial void OnCarrierContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialLift_handling
        {
            get
            {
                return _SpecialLift_handling;
            }
            set
            {
                OnSpecialLift_handlingChanging(value);
                ReportPropertyChanging("SpecialLift_handling");
                _SpecialLift_handling = value;
                ReportPropertyChanged("SpecialLift_handling");
                OnSpecialLift_handlingChanged();
            }
        }
        private global::System.String _SpecialLift_handling;
        partial void OnSpecialLift_handlingChanging(global::System.String value);
        partial void OnSpecialLift_handlingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IncoTerm
        {
            get
            {
                return _IncoTerm;
            }
            set
            {
                OnIncoTermChanging(value);
                ReportPropertyChanging("IncoTerm");
                _IncoTerm = value;
                ReportPropertyChanged("IncoTerm");
                OnIncoTermChanged();
            }
        }
        private global::System.String _IncoTerm;
        partial void OnIncoTermChanging(global::System.String value);
        partial void OnIncoTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleTransfer
        {
            get
            {
                return _TitleTransfer;
            }
            set
            {
                OnTitleTransferChanging(value);
                ReportPropertyChanging("TitleTransfer");
                _TitleTransfer = value;
                ReportPropertyChanged("TitleTransfer");
                OnTitleTransferChanged();
            }
        }
        private global::System.String _TitleTransfer;
        partial void OnTitleTransferChanging(global::System.String value);
        partial void OnTitleTransferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StorageReqts
        {
            get
            {
                return _StorageReqts;
            }
            set
            {
                OnStorageReqtsChanging(value);
                ReportPropertyChanging("StorageReqts");
                _StorageReqts = value;
                ReportPropertyChanged("StorageReqts");
                OnStorageReqtsChanged();
            }
        }
        private global::System.String _StorageReqts;
        partial void OnStorageReqtsChanging(global::System.String value);
        partial void OnStorageReqtsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShipReq
        {
            get
            {
                return _ShipReq;
            }
            set
            {
                OnShipReqChanging(value);
                ReportPropertyChanging("ShipReq");
                _ShipReq = value;
                ReportPropertyChanged("ShipReq");
                OnShipReqChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShipReq;
        partial void OnShipReqChanging(Nullable<global::System.DateTime> value);
        partial void OnShipReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ShipDate
        {
            get
            {
                return _ShipDate;
            }
            set
            {
                OnShipDateChanging(value);
                ReportPropertyChanging("ShipDate");
                _ShipDate = value;
                ReportPropertyChanged("ShipDate");
                OnShipDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ShipDate;
        partial void OnShipDateChanging(Nullable<global::System.DateTime> value);
        partial void OnShipDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RevisedShipDate
        {
            get
            {
                return _RevisedShipDate;
            }
            set
            {
                OnRevisedShipDateChanging(value);
                ReportPropertyChanging("RevisedShipDate");
                _RevisedShipDate = value;
                ReportPropertyChanged("RevisedShipDate");
                OnRevisedShipDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RevisedShipDate;
        partial void OnRevisedShipDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRevisedShipDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReasonForRev
        {
            get
            {
                return _ReasonForRev;
            }
            set
            {
                OnReasonForRevChanging(value);
                ReportPropertyChanging("ReasonForRev");
                _ReasonForRev = value;
                ReportPropertyChanged("ReasonForRev");
                OnReasonForRevChanged();
            }
        }
        private global::System.String _ReasonForRev;
        partial void OnReasonForRevChanging(global::System.String value);
        partial void OnReasonForRevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Delivery
        {
            get
            {
                return _Delivery;
            }
            set
            {
                OnDeliveryChanging(value);
                ReportPropertyChanging("Delivery");
                _Delivery = value;
                ReportPropertyChanged("Delivery");
                OnDeliveryChanged();
            }
        }
        private Nullable<global::System.DateTime> _Delivery;
        partial void OnDeliveryChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BOL_Shipper
        {
            get
            {
                return _BOL_Shipper;
            }
            set
            {
                OnBOL_ShipperChanging(value);
                ReportPropertyChanging("BOL_Shipper");
                _BOL_Shipper = value;
                ReportPropertyChanged("BOL_Shipper");
                OnBOL_ShipperChanged();
            }
        }
        private global::System.String _BOL_Shipper;
        partial void OnBOL_ShipperChanging(global::System.String value);
        partial void OnBOL_ShipperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProposalLineID
        {
            get
            {
                return _ProposalLineID;
            }
            set
            {
                OnProposalLineIDChanging(value);
                ReportPropertyChanging("ProposalLineID");
                _ProposalLineID = value;
                ReportPropertyChanged("ProposalLineID");
                OnProposalLineIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProposalLineID;
        partial void OnProposalLineIDChanging(Nullable<global::System.Int32> value);
        partial void OnProposalLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransportType
        {
            get
            {
                return _TransportType;
            }
            set
            {
                OnTransportTypeChanging(value);
                ReportPropertyChanging("TransportType");
                _TransportType = value;
                ReportPropertyChanged("TransportType");
                OnTransportTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _TransportType;
        partial void OnTransportTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTransportTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Expediting_Shipment", "Expediting")]
        public EntityCollection<Expediting> Expeditings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_Shipment", "Expediting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Expediting>("LightSwitchApplication.FK_Expediting_Shipment", "Expediting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_Proposal_Line", "Proposal_Line")]
        public Proposal_Line Proposal_Line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Proposal_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Proposal_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal_Line> Proposal_LineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Proposal_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal_Line>("LightSwitchApplication.FK_Shipment_Proposal_Line", "Proposal_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_Transport_Type", "Transport_Type")]
        public Transport_Type Transport_Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport_Type>("LightSwitchApplication.FK_Shipment_Transport_Type", "Transport_Type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport_Type>("LightSwitchApplication.FK_Shipment_Transport_Type", "Transport_Type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transport_Type> Transport_TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport_Type>("LightSwitchApplication.FK_Shipment_Transport_Type", "Transport_Type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transport_Type>("LightSwitchApplication.FK_Shipment_Transport_Type", "Transport_Type", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SourceStrategy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceStrategy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceStrategy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SourceStrategy CreateSourceStrategy(global::System.Int32 id)
        {
            SourceStrategy sourceStrategy = new SourceStrategy();
            sourceStrategy.ID = id;
            return sourceStrategy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceStrategy1
        {
            get
            {
                return _SourceStrategy1;
            }
            set
            {
                OnSourceStrategy1Changing(value);
                ReportPropertyChanging("SourceStrategy1");
                _SourceStrategy1 = value;
                ReportPropertyChanged("SourceStrategy1");
                OnSourceStrategy1Changed();
            }
        }
        private global::System.String _SourceStrategy1;
        partial void OnSourceStrategy1Changing(global::System.String value);
        partial void OnSourceStrategy1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_P_SourceStrategy", "RFQ_P")]
        public EntityCollection<RFQ_PItem> RFQ_P
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ_PItem>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "RFQ_P");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ_PItem>("LightSwitchApplication.FK_RFQ_P_SourceStrategy", "RFQ_P", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Specialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specialty object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Specialty CreateSpecialty(global::System.Int32 id)
        {
            Specialty specialty = new Specialty();
            specialty.ID = id;
            return specialty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Specialty1
        {
            get
            {
                return _Specialty1;
            }
            set
            {
                OnSpecialty1Changing(value);
                ReportPropertyChanging("Specialty1");
                _Specialty1 = value;
                ReportPropertyChanged("Specialty1");
                OnSpecialty1Changed();
            }
        }
        private global::System.String _Specialty1;
        partial void OnSpecialty1Changing(global::System.String value);
        partial void OnSpecialty1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Specialty", "Supplier_Specialty")]
        public EntityCollection<Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Supplier_Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Supplier_Specialty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Manufacturers_Specialty", "Manufacturers")]
        public EntityCollection<Manufacturer> Manufacturers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Manufacturer>("LightSwitchApplication.FK_Manufacturers_Specialty", "Manufacturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Manufacturer>("LightSwitchApplication.FK_Manufacturers_Specialty", "Manufacturers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Stakeholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stakeholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stakeholder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Stakeholder CreateStakeholder(global::System.Int32 id)
        {
            Stakeholder stakeholder = new Stakeholder();
            stakeholder.ID = id;
            return stakeholder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = value;
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = value;
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OfficePhone
        {
            get
            {
                return _OfficePhone;
            }
            set
            {
                OnOfficePhoneChanging(value);
                ReportPropertyChanging("OfficePhone");
                _OfficePhone = value;
                ReportPropertyChanged("OfficePhone");
                OnOfficePhoneChanged();
            }
        }
        private global::System.String _OfficePhone;
        partial void OnOfficePhoneChanging(global::System.String value);
        partial void OnOfficePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = value;
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholders", "Project_Stakeholders")]
        public EntityCollection<Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Project_Stakeholders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholders", "Project_Stakeholders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Stakeholder_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stakeholder_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stakeholder_Type object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Stakeholder_Type CreateStakeholder_Type(global::System.Int32 id)
        {
            Stakeholder_Type stakeholder_Type = new Stakeholder_Type();
            stakeholder_Type.ID = id;
            return stakeholder_Type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stakeholder_Type1
        {
            get
            {
                return _Stakeholder_Type1;
            }
            set
            {
                OnStakeholder_Type1Changing(value);
                ReportPropertyChanging("Stakeholder_Type1");
                _Stakeholder_Type1 = value;
                ReportPropertyChanged("Stakeholder_Type1");
                OnStakeholder_Type1Changed();
            }
        }
        private global::System.String _Stakeholder_Type1;
        partial void OnStakeholder_Type1Changing(global::System.String value);
        partial void OnStakeholder_Type1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Stakeholders_Stakeholder_Types", "Project_Stakeholders")]
        public EntityCollection<Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Project_Stakeholders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project_Stakeholder>("LightSwitchApplication.FK_Project_Stakeholders_Stakeholder_Types", "Project_Stakeholders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Submittal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Submittal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Submittal object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Submittal CreateSubmittal(global::System.Int32 id)
        {
            Submittal submittal = new Submittal();
            submittal.ID = id;
            return submittal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Submittal1
        {
            get
            {
                return _Submittal1;
            }
            set
            {
                OnSubmittal1Changing(value);
                ReportPropertyChanging("Submittal1");
                _Submittal1 = value;
                ReportPropertyChanged("Submittal1");
                OnSubmittal1Changed();
            }
        }
        private global::System.String _Submittal1;
        partial void OnSubmittal1Changing(global::System.String value);
        partial void OnSubmittal1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittalName
        {
            get
            {
                return _SubmittalName;
            }
            set
            {
                OnSubmittalNameChanging(value);
                ReportPropertyChanging("SubmittalName");
                _SubmittalName = value;
                ReportPropertyChanged("SubmittalName");
                OnSubmittalNameChanged();
            }
        }
        private global::System.String _SubmittalName;
        partial void OnSubmittalNameChanging(global::System.String value);
        partial void OnSubmittalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittalNo
        {
            get
            {
                return _SubmittalNo;
            }
            set
            {
                OnSubmittalNoChanging(value);
                ReportPropertyChanging("SubmittalNo");
                _SubmittalNo = value;
                ReportPropertyChanged("SubmittalNo");
                OnSubmittalNoChanged();
            }
        }
        private global::System.String _SubmittalNo;
        partial void OnSubmittalNoChanging(global::System.String value);
        partial void OnSubmittalNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittalRevision
        {
            get
            {
                return _SubmittalRevision;
            }
            set
            {
                OnSubmittalRevisionChanging(value);
                ReportPropertyChanging("SubmittalRevision");
                _SubmittalRevision = value;
                ReportPropertyChanged("SubmittalRevision");
                OnSubmittalRevisionChanged();
            }
        }
        private global::System.String _SubmittalRevision;
        partial void OnSubmittalRevisionChanging(global::System.String value);
        partial void OnSubmittalRevisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmittalDate
        {
            get
            {
                return _SubmittalDate;
            }
            set
            {
                OnSubmittalDateChanging(value);
                ReportPropertyChanging("SubmittalDate");
                _SubmittalDate = value;
                ReportPropertyChanged("SubmittalDate");
                OnSubmittalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmittalDate;
        partial void OnSubmittalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmittalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmittalRequired
        {
            get
            {
                return _SubmittalRequired;
            }
            set
            {
                OnSubmittalRequiredChanging(value);
                ReportPropertyChanging("SubmittalRequired");
                _SubmittalRequired = value;
                ReportPropertyChanged("SubmittalRequired");
                OnSubmittalRequiredChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmittalRequired;
        partial void OnSubmittalRequiredChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmittalRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmitaalReviewed
        {
            get
            {
                return _SubmitaalReviewed;
            }
            set
            {
                OnSubmitaalReviewedChanging(value);
                ReportPropertyChanging("SubmitaalReviewed");
                _SubmitaalReviewed = value;
                ReportPropertyChanged("SubmitaalReviewed");
                OnSubmitaalReviewedChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmitaalReviewed;
        partial void OnSubmitaalReviewedChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmitaalReviewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = value;
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Transmittal
        {
            get
            {
                return _Transmittal;
            }
            set
            {
                OnTransmittalChanging(value);
                ReportPropertyChanging("Transmittal");
                _Transmittal = value;
                ReportPropertyChanged("Transmittal");
                OnTransmittalChanged();
            }
        }
        private global::System.String _Transmittal;
        partial void OnTransmittalChanging(global::System.String value);
        partial void OnTransmittalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RFQLineID
        {
            get
            {
                return _RFQLineID;
            }
            set
            {
                OnRFQLineIDChanging(value);
                ReportPropertyChanging("RFQLineID");
                _RFQLineID = value;
                ReportPropertyChanged("RFQLineID");
                OnRFQLineIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RFQLineID;
        partial void OnRFQLineIDChanging(Nullable<global::System.Int32> value);
        partial void OnRFQLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubmittalType
        {
            get
            {
                return _SubmittalType;
            }
            set
            {
                OnSubmittalTypeChanging(value);
                ReportPropertyChanging("SubmittalType");
                _SubmittalType = value;
                ReportPropertyChanged("SubmittalType");
                OnSubmittalTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SubmittalType;
        partial void OnSubmittalTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSubmittalTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Submittal_RFQ_Line", "RFQ_Line")]
        public RFQ_Line RFQ_Line1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Submittal_RFQ_Line", "RFQ_Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Submittal_RFQ_Line", "RFQ_Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ_Line> RFQ_Line1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Submittal_RFQ_Line", "RFQ_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ_Line>("LightSwitchApplication.FK_Submittal_RFQ_Line", "RFQ_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Submittal_SubmittalTypes", "SubmittalTypes")]
        public SubmittalType SubmittalType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittalType>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "SubmittalTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittalType>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "SubmittalTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubmittalType> SubmittalType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubmittalType>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "SubmittalTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubmittalType>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "SubmittalTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SubmittalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittalType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SubmittalType CreateSubmittalType(global::System.Int32 id)
        {
            SubmittalType submittalType = new SubmittalType();
            submittalType.ID = id;
            return submittalType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubmittalType1
        {
            get
            {
                return _SubmittalType1;
            }
            set
            {
                OnSubmittalType1Changing(value);
                ReportPropertyChanging("SubmittalType1");
                _SubmittalType1 = value;
                ReportPropertyChanged("SubmittalType1");
                OnSubmittalType1Changed();
            }
        }
        private global::System.String _SubmittalType1;
        partial void OnSubmittalType1Changing(global::System.String value);
        partial void OnSubmittalType1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Submittal_SubmittalTypes", "Submittal")]
        public EntityCollection<Submittal> Submittals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Submittal>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "Submittal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Submittal>("LightSwitchApplication.FK_Submittal_SubmittalTypes", "Submittal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="w9OnFile">Initial value of the W9OnFile property.</param>
        public static Supplier CreateSupplier(global::System.Int32 id, global::System.Boolean active, global::System.Boolean w9OnFile)
        {
            Supplier supplier = new Supplier();
            supplier.id = id;
            supplier.Active = active;
            supplier.W9OnFile = w9OnFile;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = value;
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierPhone
        {
            get
            {
                return _SupplierPhone;
            }
            set
            {
                OnSupplierPhoneChanging(value);
                ReportPropertyChanging("SupplierPhone");
                _SupplierPhone = value;
                ReportPropertyChanged("SupplierPhone");
                OnSupplierPhoneChanged();
            }
        }
        private global::System.String _SupplierPhone;
        partial void OnSupplierPhoneChanging(global::System.String value);
        partial void OnSupplierPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierFax
        {
            get
            {
                return _SupplierFax;
            }
            set
            {
                OnSupplierFaxChanging(value);
                ReportPropertyChanging("SupplierFax");
                _SupplierFax = value;
                ReportPropertyChanged("SupplierFax");
                OnSupplierFaxChanged();
            }
        }
        private global::System.String _SupplierFax;
        partial void OnSupplierFaxChanging(global::System.String value);
        partial void OnSupplierFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierEmail
        {
            get
            {
                return _SupplierEmail;
            }
            set
            {
                OnSupplierEmailChanging(value);
                ReportPropertyChanging("SupplierEmail");
                _SupplierEmail = value;
                ReportPropertyChanged("SupplierEmail");
                OnSupplierEmailChanged();
            }
        }
        private global::System.String _SupplierEmail;
        partial void OnSupplierEmailChanging(global::System.String value);
        partial void OnSupplierEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierAddress1
        {
            get
            {
                return _SupplierAddress1;
            }
            set
            {
                OnSupplierAddress1Changing(value);
                ReportPropertyChanging("SupplierAddress1");
                _SupplierAddress1 = value;
                ReportPropertyChanged("SupplierAddress1");
                OnSupplierAddress1Changed();
            }
        }
        private global::System.String _SupplierAddress1;
        partial void OnSupplierAddress1Changing(global::System.String value);
        partial void OnSupplierAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierAddress2
        {
            get
            {
                return _SupplierAddress2;
            }
            set
            {
                OnSupplierAddress2Changing(value);
                ReportPropertyChanging("SupplierAddress2");
                _SupplierAddress2 = value;
                ReportPropertyChanged("SupplierAddress2");
                OnSupplierAddress2Changed();
            }
        }
        private global::System.String _SupplierAddress2;
        partial void OnSupplierAddress2Changing(global::System.String value);
        partial void OnSupplierAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierCity
        {
            get
            {
                return _SupplierCity;
            }
            set
            {
                OnSupplierCityChanging(value);
                ReportPropertyChanging("SupplierCity");
                _SupplierCity = value;
                ReportPropertyChanged("SupplierCity");
                OnSupplierCityChanged();
            }
        }
        private global::System.String _SupplierCity;
        partial void OnSupplierCityChanging(global::System.String value);
        partial void OnSupplierCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierState
        {
            get
            {
                return _SupplierState;
            }
            set
            {
                OnSupplierStateChanging(value);
                ReportPropertyChanging("SupplierState");
                _SupplierState = value;
                ReportPropertyChanged("SupplierState");
                OnSupplierStateChanged();
            }
        }
        private global::System.String _SupplierState;
        partial void OnSupplierStateChanging(global::System.String value);
        partial void OnSupplierStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierPostalCode
        {
            get
            {
                return _SupplierPostalCode;
            }
            set
            {
                OnSupplierPostalCodeChanging(value);
                ReportPropertyChanging("SupplierPostalCode");
                _SupplierPostalCode = value;
                ReportPropertyChanged("SupplierPostalCode");
                OnSupplierPostalCodeChanged();
            }
        }
        private global::System.String _SupplierPostalCode;
        partial void OnSupplierPostalCodeChanging(global::System.String value);
        partial void OnSupplierPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierCountry
        {
            get
            {
                return _SupplierCountry;
            }
            set
            {
                OnSupplierCountryChanging(value);
                ReportPropertyChanging("SupplierCountry");
                _SupplierCountry = value;
                ReportPropertyChanged("SupplierCountry");
                OnSupplierCountryChanged();
            }
        }
        private global::System.String _SupplierCountry;
        partial void OnSupplierCountryChanging(global::System.String value);
        partial void OnSupplierCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierWebsite
        {
            get
            {
                return _SupplierWebsite;
            }
            set
            {
                OnSupplierWebsiteChanging(value);
                ReportPropertyChanging("SupplierWebsite");
                _SupplierWebsite = value;
                ReportPropertyChanged("SupplierWebsite");
                OnSupplierWebsiteChanged();
            }
        }
        private global::System.String _SupplierWebsite;
        partial void OnSupplierWebsiteChanging(global::System.String value);
        partial void OnSupplierWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoOfEmployees
        {
            get
            {
                return _NoOfEmployees;
            }
            set
            {
                OnNoOfEmployeesChanging(value);
                ReportPropertyChanging("NoOfEmployees");
                _NoOfEmployees = value;
                ReportPropertyChanged("NoOfEmployees");
                OnNoOfEmployeesChanged();
            }
        }
        private global::System.String _NoOfEmployees;
        partial void OnNoOfEmployeesChanging(global::System.String value);
        partial void OnNoOfEmployeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorNumber
        {
            get
            {
                return _VendorNumber;
            }
            set
            {
                OnVendorNumberChanging(value);
                ReportPropertyChanging("VendorNumber");
                _VendorNumber = value;
                ReportPropertyChanged("VendorNumber");
                OnVendorNumberChanged();
            }
        }
        private global::System.String _VendorNumber;
        partial void OnVendorNumberChanging(global::System.String value);
        partial void OnVendorNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = value;
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = value;
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalID
        {
            get
            {
                return _FederalID;
            }
            set
            {
                OnFederalIDChanging(value);
                ReportPropertyChanging("FederalID");
                _FederalID = value;
                ReportPropertyChanged("FederalID");
                OnFederalIDChanged();
            }
        }
        private global::System.String _FederalID;
        partial void OnFederalIDChanging(global::System.String value);
        partial void OnFederalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean W9OnFile
        {
            get
            {
                return _W9OnFile;
            }
            set
            {
                OnW9OnFileChanging(value);
                ReportPropertyChanging("W9OnFile");
                _W9OnFile = value;
                ReportPropertyChanged("W9OnFile");
                OnW9OnFileChanged();
            }
        }
        private global::System.Boolean _W9OnFile;
        partial void OnW9OnFileChanging(global::System.Boolean value);
        partial void OnW9OnFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseExpires
        {
            get
            {
                return _LicenseExpires;
            }
            set
            {
                OnLicenseExpiresChanging(value);
                ReportPropertyChanging("LicenseExpires");
                _LicenseExpires = value;
                ReportPropertyChanged("LicenseExpires");
                OnLicenseExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseExpires;
        partial void OnLicenseExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> WCExpires
        {
            get
            {
                return _WCExpires;
            }
            set
            {
                OnWCExpiresChanging(value);
                ReportPropertyChanging("WCExpires");
                _WCExpires = value;
                ReportPropertyChanged("WCExpires");
                OnWCExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _WCExpires;
        partial void OnWCExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnWCExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GLExpires
        {
            get
            {
                return _GLExpires;
            }
            set
            {
                OnGLExpiresChanging(value);
                ReportPropertyChanging("GLExpires");
                _GLExpires = value;
                ReportPropertyChanged("GLExpires");
                OnGLExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _GLExpires;
        partial void OnGLExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnGLExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AutoInsExpires
        {
            get
            {
                return _AutoInsExpires;
            }
            set
            {
                OnAutoInsExpiresChanging(value);
                ReportPropertyChanging("AutoInsExpires");
                _AutoInsExpires = value;
                ReportPropertyChanged("AutoInsExpires");
                OnAutoInsExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _AutoInsExpires;
        partial void OnAutoInsExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnAutoInsExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PLExpires
        {
            get
            {
                return _PLExpires;
            }
            set
            {
                OnPLExpiresChanging(value);
                ReportPropertyChanging("PLExpires");
                _PLExpires = value;
                ReportPropertyChanged("PLExpires");
                OnPLExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _PLExpires;
        partial void OnPLExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnPLExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> USLHExpires
        {
            get
            {
                return _USLHExpires;
            }
            set
            {
                OnUSLHExpiresChanging(value);
                ReportPropertyChanging("USLHExpires");
                _USLHExpires = value;
                ReportPropertyChanged("USLHExpires");
                OnUSLHExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _USLHExpires;
        partial void OnUSLHExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnUSLHExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OtherInsExpires
        {
            get
            {
                return _OtherInsExpires;
            }
            set
            {
                OnOtherInsExpiresChanging(value);
                ReportPropertyChanging("OtherInsExpires");
                _OtherInsExpires = value;
                ReportPropertyChanged("OtherInsExpires");
                OnOtherInsExpiresChanged();
            }
        }
        private Nullable<global::System.DateTime> _OtherInsExpires;
        partial void OnOtherInsExpiresChanging(Nullable<global::System.DateTime> value);
        partial void OnOtherInsExpiresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessClass
        {
            get
            {
                return _BusinessClass;
            }
            set
            {
                OnBusinessClassChanging(value);
                ReportPropertyChanging("BusinessClass");
                _BusinessClass = value;
                ReportPropertyChanged("BusinessClass");
                OnBusinessClassChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessClass;
        partial void OnBusinessClassChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessClassChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_BidList_Suppliers", "BidList")]
        public EntityCollection<BidList> BidLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BidList>("LightSwitchApplication.FK_BidList_Suppliers", "BidList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BidList>("LightSwitchApplication.FK_BidList_Suppliers", "BidList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Client_Approved_Suppliers", "Client_Approved")]
        public EntityCollection<Client_Approved> Client_Approveds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Client_Approved");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client_Approved>("LightSwitchApplication.FK_Client_Approved_Suppliers", "Client_Approved", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Safety_Records_Suppliers", "Safety_Records")]
        public EntityCollection<Safety_Record> Safety_Records
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Safety_Record>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Safety_Records");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Safety_Record>("LightSwitchApplication.FK_Safety_Records_Suppliers", "Safety_Records", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Suppliers", "Supplier_Specialty")]
        public EntityCollection<Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Supplier_Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Supplier_Specialty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierManufactures_Suppliers", "SupplierManufactures")]
        public EntityCollection<SupplierManufacture> SupplierManufactures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplierManufacture>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "SupplierManufactures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplierManufacture>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "SupplierManufactures", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Suppliers_Business_Classes", "Business_Classes")]
        public Business_Class Business_Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Business_Class>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Business_Classes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Business_Class>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Business_Classes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Business_Class> Business_ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Business_Class>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Business_Classes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Business_Class>("LightSwitchApplication.FK_Suppliers_Business_Classes", "Business_Classes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierRegion_Suppliers", "SupplierRegion")]
        public EntityCollection<SupplierRegion> SupplierRegions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupplierRegion>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "SupplierRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupplierRegion>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "SupplierRegion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Proposal_Suppliers", "Proposal")]
        public EntityCollection<Proposal> Proposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Proposal>("LightSwitchApplication.FK_Proposal_Suppliers", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Proposal>("LightSwitchApplication.FK_Proposal_Suppliers", "Proposal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_PO_Suppliers", "PO")]
        public EntityCollection<PO> POes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PO>("LightSwitchApplication.FK_PO_Suppliers", "PO");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PO>("LightSwitchApplication.FK_PO_Suppliers", "PO", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Supplier_Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier_Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier_Contact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Supplier_Contact CreateSupplier_Contact(global::System.Int32 id)
        {
            Supplier_Contact supplier_Contact = new Supplier_Contact();
            supplier_Contact.ID = id;
            return supplier_Contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String First
        {
            get
            {
                return _First;
            }
            set
            {
                OnFirstChanging(value);
                ReportPropertyChanging("First");
                _First = value;
                ReportPropertyChanged("First");
                OnFirstChanged();
            }
        }
        private global::System.String _First;
        partial void OnFirstChanging(global::System.String value);
        partial void OnFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Middle
        {
            get
            {
                return _Middle;
            }
            set
            {
                OnMiddleChanging(value);
                ReportPropertyChanging("Middle");
                _Middle = value;
                ReportPropertyChanged("Middle");
                OnMiddleChanged();
            }
        }
        private global::System.String _Middle;
        partial void OnMiddleChanging(global::System.String value);
        partial void OnMiddleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Last
        {
            get
            {
                return _Last;
            }
            set
            {
                OnLastChanging(value);
                ReportPropertyChanging("Last");
                _Last = value;
                ReportPropertyChanged("Last");
                OnLastChanged();
            }
        }
        private global::System.String _Last;
        partial void OnLastChanging(global::System.String value);
        partial void OnLastChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = value;
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title_Position
        {
            get
            {
                return _Title_Position;
            }
            set
            {
                OnTitle_PositionChanging(value);
                ReportPropertyChanging("Title_Position");
                _Title_Position = value;
                ReportPropertyChanged("Title_Position");
                OnTitle_PositionChanged();
            }
        }
        private global::System.String _Title_Position;
        partial void OnTitle_PositionChanging(global::System.String value);
        partial void OnTitle_PositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = value;
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cell
        {
            get
            {
                return _Cell;
            }
            set
            {
                OnCellChanging(value);
                ReportPropertyChanging("Cell");
                _Cell = value;
                ReportPropertyChanged("Cell");
                OnCellChanged();
            }
        }
        private global::System.String _Cell;
        partial void OnCellChanging(global::System.String value);
        partial void OnCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = value;
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherInfo
        {
            get
            {
                return _OtherInfo;
            }
            set
            {
                OnOtherInfoChanging(value);
                ReportPropertyChanging("OtherInfo");
                _OtherInfo = value;
                ReportPropertyChanged("OtherInfo");
                OnOtherInfoChanged();
            }
        }
        private global::System.String _OtherInfo;
        partial void OnOtherInfoChanging(global::System.String value);
        partial void OnOtherInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecialtyID
        {
            get
            {
                return _SpecialtyID;
            }
            set
            {
                OnSpecialtyIDChanging(value);
                ReportPropertyChanging("SpecialtyID");
                _SpecialtyID = value;
                ReportPropertyChanged("SpecialtyID");
                OnSpecialtyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecialtyID;
        partial void OnSpecialtyIDChanging(Nullable<global::System.Int32> value);
        partial void OnSpecialtyIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty")]
        public Supplier_Specialty Supplier_Specialty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier_Specialty> Supplier_SpecialtyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier_Specialty>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Specialty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Supplier_Specialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier_Specialty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier_Specialty object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Supplier_Specialty CreateSupplier_Specialty(global::System.Int32 id)
        {
            Supplier_Specialty supplier_Specialty = new Supplier_Specialty();
            supplier_Specialty.ID = id;
            return supplier_Specialty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceArea
        {
            get
            {
                return _PerformanceArea;
            }
            set
            {
                OnPerformanceAreaChanging(value);
                ReportPropertyChanging("PerformanceArea");
                _PerformanceArea = value;
                ReportPropertyChanged("PerformanceArea");
                OnPerformanceAreaChanged();
            }
        }
        private global::System.String _PerformanceArea;
        partial void OnPerformanceAreaChanging(global::System.String value);
        partial void OnPerformanceAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SpecialtyWeight
        {
            get
            {
                return _SpecialtyWeight;
            }
            set
            {
                OnSpecialtyWeightChanging(value);
                ReportPropertyChanging("SpecialtyWeight");
                _SpecialtyWeight = value;
                ReportPropertyChanged("SpecialtyWeight");
                OnSpecialtyWeightChanged();
            }
        }
        private Nullable<global::System.Decimal> _SpecialtyWeight;
        partial void OnSpecialtyWeightChanging(Nullable<global::System.Decimal> value);
        partial void OnSpecialtyWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = value;
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Specialty
        {
            get
            {
                return _Specialty;
            }
            set
            {
                OnSpecialtyChanging(value);
                ReportPropertyChanging("Specialty");
                _Specialty = value;
                ReportPropertyChanged("Specialty");
                OnSpecialtyChanged();
            }
        }
        private Nullable<global::System.Int32> _Specialty;
        partial void OnSpecialtyChanging(Nullable<global::System.Int32> value);
        partial void OnSpecialtyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Specialty", "Specialty")]
        public Specialty Specialty1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Specialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Specialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialty> Specialty1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialty>("LightSwitchApplication.FK_Supplier_Specialty_Specialty", "Specialty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Contact_Supplier_Specialty", "Supplier_Contact")]
        public EntityCollection<Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supplier_Contact>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supplier_Contact>("LightSwitchApplication.FK_Supplier_Contact_Supplier_Specialty", "Supplier_Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Supplier_Specialty_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_Supplier_Specialty_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SupplierManufacture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierManufacture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupplierManufacture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SupplierManufacture CreateSupplierManufacture(global::System.Int32 id)
        {
            SupplierManufacture supplierManufacture = new SupplierManufacture();
            supplierManufacture.ID = id;
            return supplierManufacture;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufatureID
        {
            get
            {
                return _ManufatureID;
            }
            set
            {
                OnManufatureIDChanging(value);
                ReportPropertyChanging("ManufatureID");
                _ManufatureID = value;
                ReportPropertyChanged("ManufatureID");
                OnManufatureIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufatureID;
        partial void OnManufatureIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierManufactures_Manufacturers", "Manufacturers")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "Manufacturers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "Manufacturers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "Manufacturers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("LightSwitchApplication.FK_SupplierManufactures_Manufacturers", "Manufacturers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierManufactures_Suppliers", "Suppliers")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierManufactures_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="SupplierRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupplierRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupplierRegion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static SupplierRegion CreateSupplierRegion(global::System.Int32 id)
        {
            SupplierRegion supplierRegion = new SupplierRegion();
            supplierRegion.ID = id;
            return supplierRegion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = value;
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = value;
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierRegion_Region", "Region")]
        public Region Region
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("LightSwitchApplication.FK_SupplierRegion_Region", "Region").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("LightSwitchApplication.FK_SupplierRegion_Region", "Region").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Region> RegionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Region>("LightSwitchApplication.FK_SupplierRegion_Region", "Region");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Region>("LightSwitchApplication.FK_SupplierRegion_Region", "Region", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_SupplierRegion_Suppliers", "Suppliers")]
        public Supplier Supplier1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "Suppliers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "Suppliers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> Supplier1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "Suppliers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("LightSwitchApplication.FK_SupplierRegion_Suppliers", "Suppliers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Transport_Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transport_Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transport_Type object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Transport_Type CreateTransport_Type(global::System.Int32 id)
        {
            Transport_Type transport_Type = new Transport_Type();
            transport_Type.ID = id;
            return transport_Type;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransportType
        {
            get
            {
                return _TransportType;
            }
            set
            {
                OnTransportTypeChanging(value);
                ReportPropertyChanging("TransportType");
                _TransportType = value;
                ReportPropertyChanged("TransportType");
                OnTransportTypeChanged();
            }
        }
        private global::System.String _TransportType;
        partial void OnTransportTypeChanging(global::System.String value);
        partial void OnTransportTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Shipment_Transport_Type", "Shipment")]
        public EntityCollection<Shipment> Shipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_Transport_Type", "Shipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Shipment>("LightSwitchApplication.FK_Shipment_Transport_Type", "Shipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="UOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UOM object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static UOM CreateUOM(global::System.Int32 id)
        {
            UOM uOM = new UOM();
            uOM.id = id;
            return uOM;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = value;
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UOM1
        {
            get
            {
                return _UOM1;
            }
            set
            {
                OnUOM1Changing(value);
                ReportPropertyChanging("UOM1");
                _UOM1 = value;
                ReportPropertyChanged("UOM1");
                OnUOM1Changed();
            }
        }
        private global::System.String _UOM1;
        partial void OnUOM1Changing(global::System.String value);
        partial void OnUOM1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_RFQ_Line_UOM", "RFQ_Line")]
        public EntityCollection<RFQ_Line> RFQ_Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ_Line>("LightSwitchApplication.FK_RFQ_Line_UOM", "RFQ_Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ_Line>("LightSwitchApplication.FK_RFQ_Line_UOM", "RFQ_Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_ChangeOrder_UOM", "ChangeOrder")]
        public EntityCollection<ChangeOrder> ChangeOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChangeOrder>("LightSwitchApplication.FK_ChangeOrder_UOM", "ChangeOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChangeOrder>("LightSwitchApplication.FK_ChangeOrder_UOM", "ChangeOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LightSwitchApplication", Name="Year")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Year : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Year object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Year CreateYear(global::System.Int32 id)
        {
            Year year = new Year();
            year.ID = id;
            return year;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year1
        {
            get
            {
                return _Year1;
            }
            set
            {
                OnYear1Changing(value);
                ReportPropertyChanging("Year1");
                _Year1 = value;
                ReportPropertyChanged("Year1");
                OnYear1Changed();
            }
        }
        private global::System.String _Year1;
        partial void OnYear1Changing(global::System.String value);
        partial void OnYear1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = value;
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LightSwitchApplication", "FK_Project_Year", "Project")]
        public EntityCollection<Project> Projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("LightSwitchApplication.FK_Project_Year", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("LightSwitchApplication.FK_Project_Year", "Project", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
