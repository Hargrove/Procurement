//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class NewProject
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private NewProject() : base("LightSwitchApplication.Web:NewProject")
        {
            global::LightSwitchApplication.NewProject.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static NewProject CreateInstance()
        {
            return new global::LightSwitchApplication.NewProject(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ProjectProperty_Changed();

        partial void Project_Stakeholders_SelectionChanged();

        partial void Project_Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Loaded(bool succeeded);

        partial void RFQ_P_SelectionChanged();

        partial void RFQ_P_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Loaded(bool succeeded);

        partial void Stakeholder_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Loaded(bool succeeded);

        partial void Project_Stakeholders1_SelectionChanged();

        partial void Project_Stakeholders1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders1_Loaded(bool succeeded);

        partial void ID_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project ProjectProperty
        {
            get 
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty);
            }
            set
            {
                global::LightSwitchApplication.NewProject.DetailsClass.SetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_P visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_PItem> RFQ_P
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.RFQ_P);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Stakeholder Stakeholder
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Stakeholder);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders1
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get 
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.NewProject.DetailsClass.SetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddPhase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPhase()
        {
            this.Details.Methods.AddPhase.CreateInvocation().Execute();
        }
        partial void AddPhase_CanExecute(ref bool result);
        partial void AddPhase_Execute();

        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew1()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew1_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew1_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.NewProject.DetailsClass.PropertySet, global::LightSwitchApplication.NewProject.DetailsClass.CommandSet, global::LightSwitchApplication.NewProject.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty;
                var initializeCommandEntry = global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddPhase;
                var initializeMethodEntry = global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddPhase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                __NewProjectEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSavingEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSavedEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeClosingEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeCreated,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeActivated,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSaveErrorEvent);
            private static void __NewProject_InvokeInitializeDataWorkspace(global::LightSwitchApplication.NewProject s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.NewProject_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __NewProject_InvokeSavingEvent(global::LightSwitchApplication.NewProject s)
            {
                bool handled = false;
                s.NewProject_Saving(ref handled);
                return handled;
            }
            private static void __NewProject_InvokeSavedEvent(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Saved();
            }
            private static bool __NewProject_InvokeClosingEvent(global::LightSwitchApplication.NewProject s)
            {
                bool cancel = false;
                s.NewProject_Closing(ref cancel);
                return cancel;
            }
            private static void __NewProject_InvokeCreated(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Created();
            }
            private static void __NewProject_InvokeActivated(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Activated();
            }
            private static bool __NewProject_InvokeSaveErrorEvent(global::LightSwitchApplication.NewProject s, global::System.Exception ex)
            {
                bool handled = false;
                s.NewProject_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_StakeholdersQuery()
            {
                if (this.Screen.ProjectProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectProperty.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_PQuery()
            {
                if (this.Screen.ProjectProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectProperty.Details.Properties.RFQ_P).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_Stakeholders1Query()
            {
                if (this.Screen.Stakeholder == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Stakeholder.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Data _ProjectProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_P;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data _Stakeholder;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Data _ID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddPhaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddPhaseMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Method;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project> ProjectProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_P
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.RFQ_P);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder> Stakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Stakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int> ID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddPhase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddPhase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddPhase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddPhase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    ProjectProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "ProjectProperty",
                        false,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_OnValueChanged);
                private static void _ProjectProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectProperty, sf);
                }
                private static void _ProjectProperty_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectProperty_Validate(r);
                }
                private static void _ProjectProperty_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.ProjectProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_OnLoaded);
                private static void _Project_Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders, sf);
                }
                private static void _Project_Stakeholders_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.Project_StakeholdersQuery();
                }
                private static void _Project_Stakeholders_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Project_Stakeholders_SelectionChanged();
                }
                private static void _Project_Stakeholders_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders_Changed(e);
                }
                private static void _Project_Stakeholders_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Project_Stakeholders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_P = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_P",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_OnLoaded);
                private static void _RFQ_P_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_P, sf);
                }
                private static void _RFQ_P_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_P_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_P_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.RFQ_PQuery();
                }
                private static void _RFQ_P_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.RFQ_P_SelectionChanged();
                }
                private static void _RFQ_P_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_P_Changed(e);
                }
                private static void _RFQ_P_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.RFQ_P_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry
                    Stakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry(
                        "Stakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_OnValueChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_OnLoaded);
                private static void _Stakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholder, sf);
                }
                private static void _Stakeholder_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholder_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholder_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Stakeholder_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Stakeholder_Changed();
                }

                private static void _Stakeholder_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Stakeholder_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders1",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_OnLoaded);
                private static void _Project_Stakeholders1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1, sf);
                }
                private static void _Project_Stakeholders1_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders1_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.Project_Stakeholders1Query();
                }
                private static void _Project_Stakeholders1_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Project_Stakeholders1_SelectionChanged();
                }
                private static void _Project_Stakeholders1_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders1_Changed(e);
                }
                private static void _Project_Stakeholders1_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Project_Stakeholders1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Entry(
                        "ID",
                        false,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static void _ID_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ID_Validate(r);
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.ID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddPhase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddPhase",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddPhase_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddPhase_CreateExecutableObject);
                private static void _AddPhase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPhaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddPhase_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddPhase.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddPhase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddPhase",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_InvokeMethod);
                private static void _AddPhase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPhaseMethod, sf);
                }
                private static global::System.Exception _AddPhase_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddPhase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddPhase_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddPhase_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew1_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew1_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PhaseLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PhaseLookup() : base("LightSwitchApplication.Web:PhaseLookup")
        {
            global::LightSwitchApplication.PhaseLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PhaseLookup CreateInstance()
        {
            return new global::LightSwitchApplication.PhaseLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Phases_SelectionChanged();

        partial void Phases_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phases_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Phases visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Phase> Phases
        {
            get
            {
                return global::LightSwitchApplication.PhaseLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phases_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySet, global::LightSwitchApplication.PhaseLookup.DetailsClass.CommandSet, global::LightSwitchApplication.PhaseLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>.Entry
                __PhaseLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeCreated,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeActivated,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSaveErrorEvent);
            private static void __PhaseLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PhaseLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PhaseLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PhaseLookup_InvokeSavingEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                bool handled = false;
                s.PhaseLookup_Saving(ref handled);
                return handled;
            }
            private static void __PhaseLookup_InvokeSavedEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Saved();
            }
            private static bool __PhaseLookup_InvokeClosingEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                bool cancel = false;
                s.PhaseLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __PhaseLookup_InvokeCreated(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Created();
            }
            private static void __PhaseLookup_InvokeActivated(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Activated();
            }
            private static bool __PhaseLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.PhaseLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.PhaseLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PhasesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Phases;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Data _Phases;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase> Phases
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>)base.GetItem(global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Entry
                    Phases = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Entry(
                        "Phases",
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_Stub,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_Validate,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_CreateQuery,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_SelectionChanged,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_OnCollectionChanged,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_OnLoaded);
                private static void _Phases_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PhaseLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Data> c, global::LightSwitchApplication.PhaseLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Phases, sf);
                }
                private static void _Phases_Validate(global::LightSwitchApplication.PhaseLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Phases_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Phases_CreateQuery(global::LightSwitchApplication.PhaseLookup.DetailsClass d, object[] args)
                {
                    return d.PhasesQuery();
                }
                private static void _Phases_SelectionChanged(global::LightSwitchApplication.PhaseLookup s)
                {
                    s.Phases_SelectionChanged();
                }
                private static void _Phases_OnCollectionChanged(global::LightSwitchApplication.PhaseLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Phases_Changed(e);
                }
                private static void _Phases_OnLoaded(global::LightSwitchApplication.PhaseLookup s, bool succeeded)
                {
                    s.Phases_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectDetails
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProjectDetails(int ProjectID) : base("LightSwitchApplication.Web:ProjectDetails")
        {
                this.ProjectID = ProjectID;
            global::LightSwitchApplication.ProjectDetails.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProjectDetails CreateInstance(int ProjectID)
        {
            return new global::LightSwitchApplication.ProjectDetails(
                        ProjectID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StaticProperty_Changed();

        partial void Project_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Loaded(bool succeeded);

        partial void ProjectID_Changed();

        partial void RFQ_P_SelectionChanged();

        partial void RFQ_P_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Loaded(bool succeeded);

        partial void Project_Stakeholders_SelectionChanged();

        partial void Project_Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Loaded(bool succeeded);

        partial void BidLists_SelectionChanged();

        partial void BidLists_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Loaded(bool succeeded);

        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StaticProperty
        {
            get 
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetails.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaticProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectID
        {
            get 
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetails.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_P visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_PItem> RFQ_P
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.RFQ_P);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project_Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the BidLists visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.BidList> BidLists
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.BidLists);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Project_Stakeholders1AddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_Stakeholders1AddAndEditNew()
        {
            this.Details.Methods.Project_Stakeholders1AddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_Stakeholders1AddAndEditNew_CanExecute(ref bool result);
        partial void Project_Stakeholders1AddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew1()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew1_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the AddPSH screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPSH()
        {
            this.Details.Methods.AddPSH.CreateInvocation().Execute();
        }
        partial void AddPSH_CanExecute(ref bool result);
        partial void AddPSH_Execute();

        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        /// <summary>
        /// Calls the RFQ_PAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RFQ_PAddAndEditNew()
        {
            this.Details.Methods.RFQ_PAddAndEditNew.CreateInvocation().Execute();
        }
        partial void RFQ_PAddAndEditNew_CanExecute(ref bool result);
        partial void RFQ_PAddAndEditNew_Execute();

        /// <summary>
        /// Calls the AddSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddSupplier()
        {
            this.Details.Methods.AddSupplier.CreateInvocation().Execute();
        }
        partial void AddSupplier_CanExecute(ref bool result);
        partial void AddSupplier_Execute();

        /// <summary>
        /// Calls the RemoveSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveSupplier()
        {
            this.Details.Methods.RemoveSupplier.CreateInvocation().Execute();
        }
        partial void RemoveSupplier_CanExecute(ref bool result);
        partial void RemoveSupplier_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySet, global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSet, global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty;
                var initializeCommandEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_Stakeholders1AddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_Stakeholders1AddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                __ProjectDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSavingEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSavedEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeClosingEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeCreated,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeActivated,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSaveErrorEvent);
            private static void __ProjectDetails_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProjectDetails_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProjectDetails_InvokeSavingEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                bool handled = false;
                s.ProjectDetails_Saving(ref handled);
                return handled;
            }
            private static void __ProjectDetails_InvokeSavedEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Saved();
            }
            private static bool __ProjectDetails_InvokeClosingEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                bool cancel = false;
                s.ProjectDetails_Closing(ref cancel);
                return cancel;
            }
            private static void __ProjectDetails_InvokeCreated(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Created();
            }
            private static void __ProjectDetails_InvokeActivated(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Activated();
            }
            private static bool __ProjectDetails_InvokeSaveErrorEvent(global::LightSwitchApplication.ProjectDetails s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProjectDetails_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_PQuery()
            {
                if (this.Screen.Project == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Project.Details.Properties.RFQ_P).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            loader,
                            "Project"),
                        "Project.Client1"),
                    "Project.Phase1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_StakeholdersQuery()
            {
                if (this.Screen.Project == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Project.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Stakeholder_Type"),
                    "Stakeholder1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable BidListsQuery()
            {
                if (this.Screen.RFQ_P.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_P.SelectedItem.Details.Properties.BidLists).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Suppliers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Data _StaticProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Data _ProjectID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_P;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Data _BidLists;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_Stakeholders1AddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddPSHCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RFQ_PAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RemoveSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_Stakeholders1AddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddPSHMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RFQ_PAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RemoveSupplierMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string> StaticProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int> ProjectID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_P
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.RFQ_P);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project_Stakeholders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList> BidLists
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.BidLists);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_Stakeholders1AddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_Stakeholders1AddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddPSH
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddPSH);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RFQ_PAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.RFQ_PAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.RemoveSupplier);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_Stakeholders1AddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_Stakeholders1AddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddPSH
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddPSH);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RFQ_PAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.RFQ_PAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.RemoveSupplier);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Entry
                    StaticProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Entry(
                        "StaticProperty",
                        false,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_OnValueChanged);
                private static void _StaticProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._StaticProperty, sf);
                }
                private static void _StaticProperty_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaticProperty_Validate(r);
                }
                private static void _StaticProperty_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.StaticProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_OnValueChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_OnLoaded);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Project_Changed();
                }

                private static void _Project_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Project_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Entry(
                        "ProjectID",
                        false,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectID_Validate(r);
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.ProjectID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_P = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_P",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_OnLoaded);
                private static void _RFQ_P_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_P, sf);
                }
                private static void _RFQ_P_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_P_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_P_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.RFQ_PQuery();
                }
                private static void _RFQ_P_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.RFQ_P_SelectionChanged();
                }
                private static void _RFQ_P_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_P_Changed(e);
                }
                private static void _RFQ_P_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.RFQ_P_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_OnLoaded);
                private static void _Project_Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders, sf);
                }
                private static void _Project_Stakeholders_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.Project_StakeholdersQuery();
                }
                private static void _Project_Stakeholders_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Project_Stakeholders_SelectionChanged();
                }
                private static void _Project_Stakeholders_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders_Changed(e);
                }
                private static void _Project_Stakeholders_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Project_Stakeholders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Entry
                    BidLists = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Entry(
                        "BidLists",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_OnLoaded);
                private static void _BidLists_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._BidLists, sf);
                }
                private static void _BidLists_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.BidLists_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _BidLists_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.BidListsQuery();
                }
                private static void _BidLists_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.BidLists_SelectionChanged();
                }
                private static void _BidLists_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.BidLists_Changed(e);
                }
                private static void _BidLists_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.BidLists_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_Stakeholders1AddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_Stakeholders1AddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_Stakeholders1AddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_Stakeholders1AddAndEditNew_CreateExecutableObject);
                private static void _Project_Stakeholders1AddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1AddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_Stakeholders1AddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_Stakeholders1AddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddPSH = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddPSH",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddPSH_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddPSH_CreateExecutableObject);
                private static void _AddPSH_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPSHCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddPSH_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddPSH.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RFQ_PAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RFQ_PAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RFQ_PAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RFQ_PAddAndEditNew_CreateExecutableObject);
                private static void _RFQ_PAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RFQ_PAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.RFQ_PAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddSupplier_CreateExecutableObject);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddSupplier_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RemoveSupplier_CreateExecutableObject);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveSupplier_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.RemoveSupplier.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_Stakeholders1AddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_Stakeholders1AddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_InvokeMethod);
                private static void _Project_Stakeholders1AddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1AddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_Stakeholders1AddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_Stakeholders1AddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_Stakeholders1AddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_Stakeholders1AddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew1_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddPSH = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddPSH",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_InvokeMethod);
                private static void _AddPSH_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPSHMethod, sf);
                }
                private static global::System.Exception _AddPSH_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddPSH_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddPSH_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddPSH_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RFQ_PAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RFQ_PAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_InvokeMethod);
                private static void _RFQ_PAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _RFQ_PAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RFQ_PAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RFQ_PAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RFQ_PAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_InvokeMethod);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierMethod, sf);
                }
                private static global::System.Exception _AddSupplier_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddSupplier_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_InvokeMethod);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierMethod, sf);
                }
                private static global::System.Exception _RemoveSupplier_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveSupplier_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveSupplier_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Projects
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Projects() : base("LightSwitchApplication.Web:Projects")
        {
            global::LightSwitchApplication.Projects.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Projects CreateInstance()
        {
            return new global::LightSwitchApplication.Projects(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects1_SelectionChanged();

        partial void Projects1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects1
        {
            get
            {
                return global::LightSwitchApplication.Projects.DetailsClass.GetValue(this, global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Projects.DetailsClass.PropertySet, global::LightSwitchApplication.Projects.DetailsClass.CommandSet, global::LightSwitchApplication.Projects.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>.Entry
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>.Entry(
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSavingEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSavedEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeClosingEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeCreated,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeActivated,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSaveErrorEvent);
            private static void __Projects_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Projects s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Projects_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Projects_InvokeSavingEvent(global::LightSwitchApplication.Projects s)
            {
                bool handled = false;
                s.Projects_Saving(ref handled);
                return handled;
            }
            private static void __Projects_InvokeSavedEvent(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Saved();
            }
            private static bool __Projects_InvokeClosingEvent(global::LightSwitchApplication.Projects s)
            {
                bool cancel = false;
                s.Projects_Closing(ref cancel);
                return cancel;
            }
            private static void __Projects_InvokeCreated(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Created();
            }
            private static void __Projects_InvokeActivated(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Activated();
            }
            private static bool __Projects_InvokeSaveErrorEvent(global::LightSwitchApplication.Projects s, global::System.Exception ex)
            {
                bool handled = false;
                s.Projects_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Projects1Query()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ProcurementData.Projects,
                        "Client1"),
                    "Phase1");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project> Projects1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects1",
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_Stub,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_Validate,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_CreateQuery,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_SelectionChanged,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_OnCollectionChanged,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_OnLoaded);
                private static void _Projects1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Projects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Projects.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects1, sf);
                }
                private static void _Projects1_Validate(global::LightSwitchApplication.Projects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects1_CreateQuery(global::LightSwitchApplication.Projects.DetailsClass d, object[] args)
                {
                    return d.Projects1Query();
                }
                private static void _Projects1_SelectionChanged(global::LightSwitchApplication.Projects s)
                {
                    s.Projects1_SelectionChanged();
                }
                private static void _Projects1_OnCollectionChanged(global::LightSwitchApplication.Projects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects1_Changed(e);
                }
                private static void _Projects1_OnLoaded(global::LightSwitchApplication.Projects s, bool succeeded)
                {
                    s.Projects1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class StakeholdertypeLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private StakeholdertypeLookup() : base("LightSwitchApplication.Web:StakeholdertypeLookup")
        {
            global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static StakeholdertypeLookup CreateInstance()
        {
            return new global::LightSwitchApplication.StakeholdertypeLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Stakeholder_Types_SelectionChanged();

        partial void Stakeholder_Types_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Types_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Stakeholder_Types visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Stakeholder_Type> Stakeholder_Types
        {
            get
            {
                return global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Types_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySet, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.CommandSet, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>.Entry
                __StakeholdertypeLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeCreated,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeActivated,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSaveErrorEvent);
            private static void __StakeholdertypeLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.StakeholdertypeLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __StakeholdertypeLookup_InvokeSavingEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                bool handled = false;
                s.StakeholdertypeLookup_Saving(ref handled);
                return handled;
            }
            private static void __StakeholdertypeLookup_InvokeSavedEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Saved();
            }
            private static bool __StakeholdertypeLookup_InvokeClosingEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                bool cancel = false;
                s.StakeholdertypeLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __StakeholdertypeLookup_InvokeCreated(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Created();
            }
            private static void __StakeholdertypeLookup_InvokeActivated(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Activated();
            }
            private static bool __StakeholdertypeLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.StakeholdertypeLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Stakeholder_TypesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Stakeholder_Types;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Data _Stakeholder_Types;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type> Stakeholder_Types
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>)base.GetItem(global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Entry
                    Stakeholder_Types = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Entry(
                        "Stakeholder_Types",
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_Stub,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_Validate,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_CreateQuery,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_SelectionChanged,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_OnCollectionChanged,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_OnLoaded);
                private static void _Stakeholder_Types_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Data> c, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholder_Types, sf);
                }
                private static void _Stakeholder_Types_Validate(global::LightSwitchApplication.StakeholdertypeLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholder_Types_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholder_Types_CreateQuery(global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass d, object[] args)
                {
                    return d.Stakeholder_TypesQuery();
                }
                private static void _Stakeholder_Types_SelectionChanged(global::LightSwitchApplication.StakeholdertypeLookup s)
                {
                    s.Stakeholder_Types_SelectionChanged();
                }
                private static void _Stakeholder_Types_OnCollectionChanged(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Stakeholder_Types_Changed(e);
                }
                private static void _Stakeholder_Types_OnLoaded(global::LightSwitchApplication.StakeholdertypeLookup s, bool succeeded)
                {
                    s.Stakeholder_Types_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddProjectStakeholder
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddProjectStakeholder() : base("LightSwitchApplication.Web:AddProjectStakeholder")
        {
            global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddProjectStakeholder CreateInstance()
        {
            return new global::LightSwitchApplication.AddProjectStakeholder(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Project_StakeholderProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project_Stakeholder Project_StakeholderProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.GetValue(this, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty);
            }
            set
            {
                global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.SetValue(this, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_StakeholderProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySet, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSet, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty;
                var initializeCommandEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholderType;
                var initializeMethodEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholderType;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                __AddProjectStakeholderEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSavingEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSavedEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeClosingEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeCreated,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeActivated,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSaveErrorEvent);
            private static void __AddProjectStakeholder_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddProjectStakeholder s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddProjectStakeholder_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddProjectStakeholder_InvokeSavingEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                bool handled = false;
                s.AddProjectStakeholder_Saving(ref handled);
                return handled;
            }
            private static void __AddProjectStakeholder_InvokeSavedEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Saved();
            }
            private static bool __AddProjectStakeholder_InvokeClosingEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                bool cancel = false;
                s.AddProjectStakeholder_Closing(ref cancel);
                return cancel;
            }
            private static void __AddProjectStakeholder_InvokeCreated(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Created();
            }
            private static void __AddProjectStakeholder_InvokeActivated(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Activated();
            }
            private static bool __AddProjectStakeholder_InvokeSaveErrorEvent(global::LightSwitchApplication.AddProjectStakeholder s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddProjectStakeholder_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_StakeholderProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_StakeholderProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_StakeholderProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_StakeholderProperty",
                        false,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_Validate,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_OnValueChanged);
                private static void _Project_StakeholderProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholderProperty, sf);
                }
                private static void _Project_StakeholderProperty_Validate(global::LightSwitchApplication.AddProjectStakeholder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_StakeholderProperty_Validate(r);
                }
                private static void _Project_StakeholderProperty_OnValueChanged(global::LightSwitchApplication.AddProjectStakeholder s)
                {
                    s.Project_StakeholderProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddProjectStakeholder.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddProjectStakeholder.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddStakeholder
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddStakeholder() : base("LightSwitchApplication.Web:AddStakeholder")
        {
            global::LightSwitchApplication.AddStakeholder.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddStakeholder CreateInstance()
        {
            return new global::LightSwitchApplication.AddStakeholder(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Stakeholders_SelectionChanged();

        partial void Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Stakeholder> Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.AddStakeholder.DetailsClass.GetValue(this, global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySet, global::LightSwitchApplication.AddStakeholder.DetailsClass.CommandSet, global::LightSwitchApplication.AddStakeholder.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>.Entry
                __AddStakeholderEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSavingEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSavedEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeClosingEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeCreated,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeActivated,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSaveErrorEvent);
            private static void __AddStakeholder_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddStakeholder s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddStakeholder_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddStakeholder_InvokeSavingEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                bool handled = false;
                s.AddStakeholder_Saving(ref handled);
                return handled;
            }
            private static void __AddStakeholder_InvokeSavedEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Saved();
            }
            private static bool __AddStakeholder_InvokeClosingEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                bool cancel = false;
                s.AddStakeholder_Closing(ref cancel);
                return cancel;
            }
            private static void __AddStakeholder_InvokeCreated(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Created();
            }
            private static void __AddStakeholder_InvokeActivated(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Activated();
            }
            private static bool __AddStakeholder_InvokeSaveErrorEvent(global::LightSwitchApplication.AddStakeholder s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddStakeholder_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StakeholdersQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Stakeholders;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data _Stakeholders;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder> Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>)base.GetItem(global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry
                    Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry(
                        "Stakeholders",
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_Stub,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_Validate,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_CreateQuery,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_OnLoaded);
                private static void _Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data> c, global::LightSwitchApplication.AddStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholders, sf);
                }
                private static void _Stakeholders_Validate(global::LightSwitchApplication.AddStakeholder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholders_CreateQuery(global::LightSwitchApplication.AddStakeholder.DetailsClass d, object[] args)
                {
                    return d.StakeholdersQuery();
                }
                private static void _Stakeholders_SelectionChanged(global::LightSwitchApplication.AddStakeholder s)
                {
                    s.Stakeholders_SelectionChanged();
                }
                private static void _Stakeholders_OnCollectionChanged(global::LightSwitchApplication.AddStakeholder s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Stakeholders_Changed(e);
                }
                private static void _Stakeholders_OnLoaded(global::LightSwitchApplication.AddStakeholder s, bool succeeded)
                {
                    s.Stakeholders_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class BusinessClassesLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private BusinessClassesLookup() : base("LightSwitchApplication.Web:BusinessClassesLookup")
        {
            global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static BusinessClassesLookup CreateInstance()
        {
            return new global::LightSwitchApplication.BusinessClassesLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Business_Classes_SelectionChanged();

        partial void Business_Classes_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Business_Classes_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Business_Classes visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Business_Class> Business_Classes
        {
            get
            {
                return global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Business_Classes_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySet, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.CommandSet, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>.Entry
                __BusinessClassesLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeCreated,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeActivated,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSaveErrorEvent);
            private static void __BusinessClassesLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.BusinessClassesLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __BusinessClassesLookup_InvokeSavingEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                bool handled = false;
                s.BusinessClassesLookup_Saving(ref handled);
                return handled;
            }
            private static void __BusinessClassesLookup_InvokeSavedEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Saved();
            }
            private static bool __BusinessClassesLookup_InvokeClosingEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                bool cancel = false;
                s.BusinessClassesLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __BusinessClassesLookup_InvokeCreated(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Created();
            }
            private static void __BusinessClassesLookup_InvokeActivated(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Activated();
            }
            private static bool __BusinessClassesLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.BusinessClassesLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Business_ClassesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Business_Classes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Data _Business_Classes;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class> Business_Classes
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>)base.GetItem(global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Entry
                    Business_Classes = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Entry(
                        "Business_Classes",
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_Stub,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_Validate,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_CreateQuery,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_SelectionChanged,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_OnCollectionChanged,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_OnLoaded);
                private static void _Business_Classes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Data> c, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Business_Classes, sf);
                }
                private static void _Business_Classes_Validate(global::LightSwitchApplication.BusinessClassesLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Business_Classes_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Business_Classes_CreateQuery(global::LightSwitchApplication.BusinessClassesLookup.DetailsClass d, object[] args)
                {
                    return d.Business_ClassesQuery();
                }
                private static void _Business_Classes_SelectionChanged(global::LightSwitchApplication.BusinessClassesLookup s)
                {
                    s.Business_Classes_SelectionChanged();
                }
                private static void _Business_Classes_OnCollectionChanged(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Business_Classes_Changed(e);
                }
                private static void _Business_Classes_OnLoaded(global::LightSwitchApplication.BusinessClassesLookup s, bool succeeded)
                {
                    s.Business_Classes_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class RFQ_PItemDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private RFQ_PItemDetail(int RFQ_PItemID) : base("LightSwitchApplication.Web:RFQ_PItemDetail")
        {
                this.RFQ_PItemID = RFQ_PItemID;
            global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static RFQ_PItemDetail CreateInstance(int RFQ_PItemID)
        {
            return new global::LightSwitchApplication.RFQ_PItemDetail(
                        RFQ_PItemID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StaticProperty_Changed();

        partial void RFQ_PItem_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItem_Loaded(bool succeeded);

        partial void RFQ_PItemID_Changed();

        partial void BidLists_SelectionChanged();

        partial void BidLists_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Loaded(bool succeeded);

        partial void RFQ_Lines_SelectionChanged();

        partial void RFQ_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Lines_Loaded(bool succeeded);

        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StaticProperty
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaticProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RFQ_PItem RFQ_PItem
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItem);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItem_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQ_PItemID
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the BidLists visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.BidList> BidLists
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.BidLists);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_Line> RFQ_Lines
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddSupplier()
        {
            this.Details.Methods.AddSupplier.CreateInvocation().Execute();
        }
        partial void AddSupplier_CanExecute(ref bool result);
        partial void AddSupplier_Execute();

        /// <summary>
        /// Calls the RemoveSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveSupplier()
        {
            this.Details.Methods.RemoveSupplier.CreateInvocation().Execute();
        }
        partial void RemoveSupplier_CanExecute(ref bool result);
        partial void RemoveSupplier_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySet, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSet, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty;
                var initializeCommandEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.AddSupplier;
                var initializeMethodEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.AddSupplier;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                __RFQ_PItemDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeCreated,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeActivated,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSaveErrorEvent);
            private static void __RFQ_PItemDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.RFQ_PItemDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __RFQ_PItemDetail_InvokeSavingEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                bool handled = false;
                s.RFQ_PItemDetail_Saving(ref handled);
                return handled;
            }
            private static void __RFQ_PItemDetail_InvokeSavedEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Saved();
            }
            private static bool __RFQ_PItemDetail_InvokeClosingEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                bool cancel = false;
                s.RFQ_PItemDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __RFQ_PItemDetail_InvokeCreated(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Created();
            }
            private static void __RFQ_PItemDetail_InvokeActivated(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Activated();
            }
            private static bool __RFQ_PItemDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.RFQ_PItemDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable BidListsQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.BidLists).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Supplier");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_LinesQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.RFQ_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "UOM1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Suppliers,
                    "Business_Class");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data _StaticProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_PItem;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data _RFQ_PItemID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Data _BidLists;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data _RFQ_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RemoveSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RemoveSupplierMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string> StaticProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_PItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int> RFQ_PItemID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList> BidLists
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.BidLists);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line> RFQ_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.RemoveSupplier);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.RemoveSupplier);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry
                    StaticProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry(
                        "StaticProperty",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_OnValueChanged);
                private static void _StaticProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._StaticProperty, sf);
                }
                private static void _StaticProperty_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaticProperty_Validate(r);
                }
                private static void _StaticProperty_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.StaticProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_PItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_PItem",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_OnValueChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_OnLoaded);
                private static void _RFQ_PItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PItem, sf);
                }
                private static void _RFQ_PItem_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_PItem_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_PItem_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _RFQ_PItem_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_PItem_Changed();
                }

                private static void _RFQ_PItem_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.RFQ_PItem_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry
                    RFQ_PItemID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry(
                        "RFQ_PItemID",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_OnValueChanged);
                private static void _RFQ_PItemID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PItemID, sf);
                }
                private static void _RFQ_PItemID_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_PItemID_Validate(r);
                }
                private static void _RFQ_PItemID_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_PItemID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Entry
                    BidLists = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Entry(
                        "BidLists",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_OnLoaded);
                private static void _BidLists_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._BidLists, sf);
                }
                private static void _BidLists_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.BidLists_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _BidLists_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.BidListsQuery();
                }
                private static void _BidLists_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.BidLists_SelectionChanged();
                }
                private static void _BidLists_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.BidLists_Changed(e);
                }
                private static void _BidLists_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.BidLists_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry
                    RFQ_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry(
                        "RFQ_Lines",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_OnLoaded);
                private static void _RFQ_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_Lines, sf);
                }
                private static void _RFQ_Lines_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_Lines_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.RFQ_LinesQuery();
                }
                private static void _RFQ_Lines_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_Lines_SelectionChanged();
                }
                private static void _RFQ_Lines_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_Lines_Changed(e);
                }
                private static void _RFQ_Lines_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.RFQ_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddSupplier_CreateExecutableObject);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddSupplier_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.AddSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RemoveSupplier_CreateExecutableObject);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveSupplier_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.RemoveSupplier.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_InvokeMethod);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierMethod, sf);
                }
                private static global::System.Exception _AddSupplier_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddSupplier_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_InvokeMethod);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierMethod, sf);
                }
                private static global::System.Exception _RemoveSupplier_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveSupplier_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveSupplier_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PreferenceTypeLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PreferenceTypeLookup() : base("LightSwitchApplication.Web:PreferenceTypeLookup")
        {
            global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PreferenceTypeLookup CreateInstance()
        {
            return new global::LightSwitchApplication.PreferenceTypeLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Preferences_SelectionChanged();

        partial void Preferences_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferences_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Preferences visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Preference> Preferences
        {
            get
            {
                return global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferences_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySet, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.CommandSet, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>.Entry
                __PreferenceTypeLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeCreated,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeActivated,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSaveErrorEvent);
            private static void __PreferenceTypeLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PreferenceTypeLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PreferenceTypeLookup_InvokeSavingEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                bool handled = false;
                s.PreferenceTypeLookup_Saving(ref handled);
                return handled;
            }
            private static void __PreferenceTypeLookup_InvokeSavedEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Saved();
            }
            private static bool __PreferenceTypeLookup_InvokeClosingEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                bool cancel = false;
                s.PreferenceTypeLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __PreferenceTypeLookup_InvokeCreated(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Created();
            }
            private static void __PreferenceTypeLookup_InvokeActivated(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Activated();
            }
            private static bool __PreferenceTypeLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.PreferenceTypeLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PreferencesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Preferences;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Data _Preferences;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference> Preferences
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>)base.GetItem(global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Entry
                    Preferences = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Entry(
                        "Preferences",
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_Stub,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_Validate,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_CreateQuery,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_SelectionChanged,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_OnCollectionChanged,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_OnLoaded);
                private static void _Preferences_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Data> c, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Preferences, sf);
                }
                private static void _Preferences_Validate(global::LightSwitchApplication.PreferenceTypeLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Preferences_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Preferences_CreateQuery(global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass d, object[] args)
                {
                    return d.PreferencesQuery();
                }
                private static void _Preferences_SelectionChanged(global::LightSwitchApplication.PreferenceTypeLookup s)
                {
                    s.Preferences_SelectionChanged();
                }
                private static void _Preferences_OnCollectionChanged(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Preferences_Changed(e);
                }
                private static void _Preferences_OnLoaded(global::LightSwitchApplication.PreferenceTypeLookup s, bool succeeded)
                {
                    s.Preferences_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddSupplierContact
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddSupplierContact() : base("LightSwitchApplication.Web:AddSupplierContact")
        {
            global::LightSwitchApplication.AddSupplierContact.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddSupplierContact CreateInstance()
        {
            return new global::LightSwitchApplication.AddSupplierContact(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Supplier_Contacts_SelectionChanged();

        partial void Supplier_Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Supplier_Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return global::LightSwitchApplication.AddSupplierContact.DetailsClass.GetValue(this, global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySet, global::LightSwitchApplication.AddSupplierContact.DetailsClass.CommandSet, global::LightSwitchApplication.AddSupplierContact.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>.Entry
                __AddSupplierContactEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSavingEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSavedEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeClosingEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeCreated,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeActivated,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSaveErrorEvent);
            private static void __AddSupplierContact_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddSupplierContact s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddSupplierContact_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddSupplierContact_InvokeSavingEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                bool handled = false;
                s.AddSupplierContact_Saving(ref handled);
                return handled;
            }
            private static void __AddSupplierContact_InvokeSavedEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Saved();
            }
            private static bool __AddSupplierContact_InvokeClosingEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                bool cancel = false;
                s.AddSupplierContact_Closing(ref cancel);
                return cancel;
            }
            private static void __AddSupplierContact_InvokeCreated(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Created();
            }
            private static void __AddSupplierContact_InvokeActivated(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Activated();
            }
            private static bool __AddSupplierContact_InvokeSaveErrorEvent(global::LightSwitchApplication.AddSupplierContact s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddSupplierContact_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_ContactsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Supplier_Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data _Supplier_Contacts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>)base.GetItem(global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry
                    Supplier_Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry(
                        "Supplier_Contacts",
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_Stub,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_Validate,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_CreateQuery,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_SelectionChanged,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_OnLoaded);
                private static void _Supplier_Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data> c, global::LightSwitchApplication.AddSupplierContact.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Contacts, sf);
                }
                private static void _Supplier_Contacts_Validate(global::LightSwitchApplication.AddSupplierContact s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Contacts_CreateQuery(global::LightSwitchApplication.AddSupplierContact.DetailsClass d, object[] args)
                {
                    return d.Supplier_ContactsQuery();
                }
                private static void _Supplier_Contacts_SelectionChanged(global::LightSwitchApplication.AddSupplierContact s)
                {
                    s.Supplier_Contacts_SelectionChanged();
                }
                private static void _Supplier_Contacts_OnCollectionChanged(global::LightSwitchApplication.AddSupplierContact s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Contacts_Changed(e);
                }
                private static void _Supplier_Contacts_OnLoaded(global::LightSwitchApplication.AddSupplierContact s, bool succeeded)
                {
                    s.Supplier_Contacts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SuppliersListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SuppliersListDetail() : base("LightSwitchApplication.Web:SuppliersListDetail")
        {
            global::LightSwitchApplication.SuppliersListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SuppliersListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.SuppliersListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        partial void Client_Approveds_SelectionChanged();

        partial void Client_Approveds_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Loaded(bool succeeded);

        partial void Safety_Records_SelectionChanged();

        partial void Safety_Records_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Loaded(bool succeeded);

        partial void Supplier_Specialties_SelectionChanged();

        partial void Supplier_Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Loaded(bool succeeded);

        partial void SupplierManufactures_SelectionChanged();

        partial void SupplierManufactures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Loaded(bool succeeded);

        partial void Supplier_Contacts_SelectionChanged();

        partial void Supplier_Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Loaded(bool succeeded);

        partial void Manufacturers_SelectionChanged();

        partial void Manufacturers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Loaded(bool succeeded);

        partial void SupplierManufactures1_SelectionChanged();

        partial void SupplierManufactures1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Client_Approveds visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client_Approved> Client_Approveds
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Client_Approveds);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Safety_Records visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Record> Safety_Records
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Safety_Records);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Manufacturers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Manufacturer> Manufacturers
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Manufacturers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures1
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the SupplierManufacturesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SupplierManufacturesAddAndEditNew()
        {
            this.Details.Methods.SupplierManufacturesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void SupplierManufacturesAddAndEditNew_CanExecute(ref bool result);
        partial void SupplierManufacturesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the AddManufacturer screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddManufacturer()
        {
            this.Details.Methods.AddManufacturer.CreateInvocation().Execute();
        }
        partial void AddManufacturer_CanExecute(ref bool result);
        partial void AddManufacturer_Execute();

        /// <summary>
        /// Calls the RemoveManufacturer screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveManufacturer()
        {
            this.Details.Methods.RemoveManufacturer.CreateInvocation().Execute();
        }
        partial void RemoveManufacturer_CanExecute(ref bool result);
        partial void RemoveManufacturer_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers;
                var initializeCommandEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.SupplierManufacturesAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.SupplierManufacturesAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                __SuppliersListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeCreated,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeActivated,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSaveErrorEvent);
            private static void __SuppliersListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SuppliersListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SuppliersListDetail_InvokeSavingEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                bool handled = false;
                s.SuppliersListDetail_Saving(ref handled);
                return handled;
            }
            private static void __SuppliersListDetail_InvokeSavedEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Saved();
            }
            private static bool __SuppliersListDetail_InvokeClosingEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                bool cancel = false;
                s.SuppliersListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __SuppliersListDetail_InvokeCreated(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Created();
            }
            private static void __SuppliersListDetail_InvokeActivated(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Activated();
            }
            private static bool __SuppliersListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.SuppliersListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.SuppliersListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Suppliers,
                    "Business_Class");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Client_ApprovedsQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Client_Approveds).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Preference1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_RecordsQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Safety_Records).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Safety_Status");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_SpecialtiesQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Supplier_Specialties).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufacturesQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Manufacturer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_ContactsQuery()
            {
                if (this.Screen.Supplier_Specialties.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier_Specialties.SelectedItem.Details.Properties.Supplier_Contacts).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ManufacturersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Manufacturers,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufactures1Query()
            {
                if (this.Screen.Manufacturers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Manufacturers.SelectedItem.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data _Client_Approveds;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data _Safety_Records;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data _Supplier_Specialties;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data _Supplier_Contacts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _SupplierManufacturesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _AddManufacturerCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _RemoveManufacturerCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _SupplierManufacturesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _AddManufacturerMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _RemoveManufacturerMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved> Client_Approveds
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Client_Approveds);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record> Safety_Records
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Safety_Records);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Manufacturers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> SupplierManufacturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.SupplierManufacturesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> AddManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.AddManufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> RemoveManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.RemoveManufacturer);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> SupplierManufacturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.SupplierManufacturesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> AddManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.AddManufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> RemoveManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.RemoveManufacturer);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry
                    Client_Approveds = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry(
                        "Client_Approveds",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnLoaded);
                private static void _Client_Approveds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Client_Approveds, sf);
                }
                private static void _Client_Approveds_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Client_Approveds_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Client_Approveds_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Client_ApprovedsQuery();
                }
                private static void _Client_Approveds_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Client_Approveds_SelectionChanged();
                }
                private static void _Client_Approveds_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Client_Approveds_Changed(e);
                }
                private static void _Client_Approveds_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Client_Approveds_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry
                    Safety_Records = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry(
                        "Safety_Records",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_OnLoaded);
                private static void _Safety_Records_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Records, sf);
                }
                private static void _Safety_Records_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Records_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Records_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Safety_RecordsQuery();
                }
                private static void _Safety_Records_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Safety_Records_SelectionChanged();
                }
                private static void _Safety_Records_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Records_Changed(e);
                }
                private static void _Safety_Records_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Safety_Records_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry
                    Supplier_Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry(
                        "Supplier_Specialties",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnLoaded);
                private static void _Supplier_Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Specialties, sf);
                }
                private static void _Supplier_Specialties_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Specialties_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_SpecialtiesQuery();
                }
                private static void _Supplier_Specialties_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Supplier_Specialties_SelectionChanged();
                }
                private static void _Supplier_Specialties_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Specialties_Changed(e);
                }
                private static void _Supplier_Specialties_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Supplier_Specialties_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnLoaded);
                private static void _SupplierManufactures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures, sf);
                }
                private static void _SupplierManufactures_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufacturesQuery();
                }
                private static void _SupplierManufactures_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.SupplierManufactures_SelectionChanged();
                }
                private static void _SupplierManufactures_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures_Changed(e);
                }
                private static void _SupplierManufactures_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.SupplierManufactures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry
                    Supplier_Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry(
                        "Supplier_Contacts",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnLoaded);
                private static void _Supplier_Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Contacts, sf);
                }
                private static void _Supplier_Contacts_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Contacts_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_ContactsQuery();
                }
                private static void _Supplier_Contacts_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Supplier_Contacts_SelectionChanged();
                }
                private static void _Supplier_Contacts_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Contacts_Changed(e);
                }
                private static void _Supplier_Contacts_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Supplier_Contacts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturers",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_OnLoaded);
                private static void _Manufacturers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturers, sf);
                }
                private static void _Manufacturers_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturers_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.ManufacturersQuery();
                }
                private static void _Manufacturers_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Manufacturers_SelectionChanged();
                }
                private static void _Manufacturers_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Manufacturers_Changed(e);
                }
                private static void _Manufacturers_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Manufacturers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures1",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_OnLoaded);
                private static void _SupplierManufactures1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures1, sf);
                }
                private static void _SupplierManufactures1_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures1_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufactures1Query();
                }
                private static void _SupplierManufactures1_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.SupplierManufactures1_SelectionChanged();
                }
                private static void _SupplierManufactures1_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures1_Changed(e);
                }
                private static void _SupplierManufactures1_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.SupplierManufactures1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    SupplierManufacturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "SupplierManufacturesAddAndEditNew",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._SupplierManufacturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._SupplierManufacturesAddAndEditNew_CreateExecutableObject);
                private static void _SupplierManufacturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufacturesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SupplierManufacturesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.SupplierManufacturesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    AddManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "AddManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._AddManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._AddManufacturer_CreateExecutableObject);
                private static void _AddManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddManufacturerCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddManufacturer_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.AddManufacturer.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    RemoveManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "RemoveManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._RemoveManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._RemoveManufacturer_CreateExecutableObject);
                private static void _RemoveManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveManufacturerCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveManufacturer_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.RemoveManufacturer.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    SupplierManufacturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "SupplierManufacturesAddAndEditNew",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_InvokeMethod);
                private static void _SupplierManufacturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufacturesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _SupplierManufacturesAddAndEditNew_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SupplierManufacturesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SupplierManufacturesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SupplierManufacturesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    AddManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "AddManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_InvokeMethod);
                private static void _AddManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddManufacturerMethod, sf);
                }
                private static global::System.Exception _AddManufacturer_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddManufacturer_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddManufacturer_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddManufacturer_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    RemoveManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "RemoveManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_InvokeMethod);
                private static void _RemoveManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveManufacturerMethod, sf);
                }
                private static global::System.Exception _RemoveManufacturer_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveManufacturer_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveManufacturer_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveManufacturer_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableSpecialtiesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableSpecialtiesGrid() : base("LightSwitchApplication.Web:EditableSpecialtiesGrid")
        {
            global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableSpecialtiesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableSpecialtiesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Specialties_SelectionChanged();

        partial void Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialties_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Specialty> Specialties
        {
            get
            {
                return global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>.Entry
                __EditableSpecialtiesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSaveErrorEvent);
            private static void __EditableSpecialtiesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableSpecialtiesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableSpecialtiesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                bool handled = false;
                s.EditableSpecialtiesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableSpecialtiesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Saved();
            }
            private static bool __EditableSpecialtiesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                bool cancel = false;
                s.EditableSpecialtiesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableSpecialtiesGrid_InvokeCreated(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Created();
            }
            private static void __EditableSpecialtiesGrid_InvokeActivated(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Activated();
            }
            private static bool __EditableSpecialtiesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableSpecialtiesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SpecialtiesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Specialties;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Data _Specialties;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty> Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>)base.GetItem(global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Entry
                    Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Entry(
                        "Specialties",
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_Stub,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_Validate,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_CreateQuery,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_SelectionChanged,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_OnLoaded);
                private static void _Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Data> c, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Specialties, sf);
                }
                private static void _Specialties_Validate(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Specialties_CreateQuery(global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass d, object[] args)
                {
                    return d.SpecialtiesQuery();
                }
                private static void _Specialties_SelectionChanged(global::LightSwitchApplication.EditableSpecialtiesGrid s)
                {
                    s.Specialties_SelectionChanged();
                }
                private static void _Specialties_OnCollectionChanged(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Specialties_Changed(e);
                }
                private static void _Specialties_OnLoaded(global::LightSwitchApplication.EditableSpecialtiesGrid s, bool succeeded)
                {
                    s.Specialties_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableManufacturersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableManufacturersGrid() : base("LightSwitchApplication.Web:EditableManufacturersGrid")
        {
            global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableManufacturersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableManufacturersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Manufacturers_SelectionChanged();

        partial void Manufacturers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Manufacturers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Manufacturer> Manufacturers
        {
            get
            {
                return global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>.Entry
                __EditableManufacturersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSaveErrorEvent);
            private static void __EditableManufacturersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableManufacturersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableManufacturersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                bool handled = false;
                s.EditableManufacturersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableManufacturersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Saved();
            }
            private static bool __EditableManufacturersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                bool cancel = false;
                s.EditableManufacturersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableManufacturersGrid_InvokeCreated(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Created();
            }
            private static void __EditableManufacturersGrid_InvokeActivated(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Activated();
            }
            private static bool __EditableManufacturersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableManufacturersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ManufacturersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Manufacturers,
                    "Specialty1");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturers",
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_Stub,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_Validate,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_CreateQuery,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_SelectionChanged,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_OnCollectionChanged,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_OnLoaded);
                private static void _Manufacturers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturers, sf);
                }
                private static void _Manufacturers_Validate(global::LightSwitchApplication.EditableManufacturersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturers_CreateQuery(global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass d, object[] args)
                {
                    return d.ManufacturersQuery();
                }
                private static void _Manufacturers_SelectionChanged(global::LightSwitchApplication.EditableManufacturersGrid s)
                {
                    s.Manufacturers_SelectionChanged();
                }
                private static void _Manufacturers_OnCollectionChanged(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Manufacturers_Changed(e);
                }
                private static void _Manufacturers_OnLoaded(global::LightSwitchApplication.EditableManufacturersGrid s, bool succeeded)
                {
                    s.Manufacturers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableSafety_StatusGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableSafety_StatusGrid() : base("LightSwitchApplication.Web:EditableSafety_StatusGrid")
        {
            global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableSafety_StatusGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableSafety_StatusGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Safety_Status_SelectionChanged();

        partial void Safety_Status_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Status_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Safety_Status visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Status> Safety_Status
        {
            get
            {
                return global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Status_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>.Entry
                __EditableSafety_StatusGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSaveErrorEvent);
            private static void __EditableSafety_StatusGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableSafety_StatusGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableSafety_StatusGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                bool handled = false;
                s.EditableSafety_StatusGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableSafety_StatusGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Saved();
            }
            private static bool __EditableSafety_StatusGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                bool cancel = false;
                s.EditableSafety_StatusGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableSafety_StatusGrid_InvokeCreated(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Created();
            }
            private static void __EditableSafety_StatusGrid_InvokeActivated(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Activated();
            }
            private static bool __EditableSafety_StatusGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableSafety_StatusGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_StatusQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Safety_Status;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Data _Safety_Status;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status> Safety_Status
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>)base.GetItem(global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Entry
                    Safety_Status = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Entry(
                        "Safety_Status",
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_Stub,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_Validate,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_CreateQuery,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_SelectionChanged,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_OnCollectionChanged,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_OnLoaded);
                private static void _Safety_Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Data> c, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Status, sf);
                }
                private static void _Safety_Status_Validate(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Status_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Status_CreateQuery(global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass d, object[] args)
                {
                    return d.Safety_StatusQuery();
                }
                private static void _Safety_Status_SelectionChanged(global::LightSwitchApplication.EditableSafety_StatusGrid s)
                {
                    s.Safety_Status_SelectionChanged();
                }
                private static void _Safety_Status_OnCollectionChanged(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Status_Changed(e);
                }
                private static void _Safety_Status_OnLoaded(global::LightSwitchApplication.EditableSafety_StatusGrid s, bool succeeded)
                {
                    s.Safety_Status_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManufacturerDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManufacturerDetail(int ManufacturerID) : base("LightSwitchApplication.Web:ManufacturerDetail")
        {
                this.ManufacturerID = ManufacturerID;
            global::LightSwitchApplication.ManufacturerDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManufacturerDetail CreateInstance(int ManufacturerID)
        {
            return new global::LightSwitchApplication.ManufacturerDetail(
                        ManufacturerID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Manufacturer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Loaded(bool succeeded);

        partial void ManufacturerID_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Manufacturer Manufacturer
        {
            get
            {
                return global::LightSwitchApplication.ManufacturerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ManufacturerID
        {
            get 
            {
                return global::LightSwitchApplication.ManufacturerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID);
            }
            set
            {
                global::LightSwitchApplication.ManufacturerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySet, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.CommandSet, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>.Entry
                __ManufacturerDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeCreated,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeActivated,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSaveErrorEvent);
            private static void __ManufacturerDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManufacturerDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManufacturerDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManufacturerDetail_InvokeSavingEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                bool handled = false;
                s.ManufacturerDetail_Saving(ref handled);
                return handled;
            }
            private static void __ManufacturerDetail_InvokeSavedEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Saved();
            }
            private static bool __ManufacturerDetail_InvokeClosingEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                bool cancel = false;
                s.ManufacturerDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __ManufacturerDetail_InvokeCreated(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Created();
            }
            private static void __ManufacturerDetail_InvokeActivated(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Activated();
            }
            private static bool __ManufacturerDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.ManufacturerDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManufacturerDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Data _ManufacturerID;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int> ManufacturerID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturer",
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_Stub,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_Validate,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_CreateQuery,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_OnValueChanged,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_OnLoaded);
                private static void _Manufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturer, sf);
                }
                private static void _Manufacturer_Validate(global::LightSwitchApplication.ManufacturerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturer_CreateQuery(global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Manufacturer_OnValueChanged(global::LightSwitchApplication.ManufacturerDetail s)
                {
                    s.Manufacturer_Changed();
                }

                private static void _Manufacturer_OnLoaded(global::LightSwitchApplication.ManufacturerDetail s, bool succeeded)
                {
                    s.Manufacturer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Entry
                    ManufacturerID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Entry(
                        "ManufacturerID",
                        false,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_Stub,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_Validate,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_OnValueChanged);
                private static void _ManufacturerID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ManufacturerID, sf);
                }
                private static void _ManufacturerID_Validate(global::LightSwitchApplication.ManufacturerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ManufacturerID_Validate(r);
                }
                private static void _ManufacturerID_OnValueChanged(global::LightSwitchApplication.ManufacturerDetail s)
                {
                    s.ManufacturerID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SupplierDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SupplierDetail(int Supplierid) : base("LightSwitchApplication.Web:SupplierDetail")
        {
                this.Supplierid = Supplierid;
            global::LightSwitchApplication.SupplierDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SupplierDetail CreateInstance(int Supplierid)
        {
            return new global::LightSwitchApplication.SupplierDetail(
                        Supplierid
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Supplier_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Loaded(bool succeeded);

        partial void Supplierid_Changed();

        partial void Client_Approveds_SelectionChanged();

        partial void Client_Approveds_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Loaded(bool succeeded);

        partial void Safety_Records_SelectionChanged();

        partial void Safety_Records_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Loaded(bool succeeded);

        partial void Supplier_Specialties_SelectionChanged();

        partial void Supplier_Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Loaded(bool succeeded);

        partial void SupplierManufactures_SelectionChanged();

        partial void SupplierManufactures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Supplier Supplier
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Supplierid
        {
            get 
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid);
            }
            set
            {
                global::LightSwitchApplication.SupplierDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplierid_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Client_Approveds visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client_Approved> Client_Approveds
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Client_Approveds);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Safety_Records visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Record> Safety_Records
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Safety_Records);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySet, global::LightSwitchApplication.SupplierDetail.DetailsClass.CommandSet, global::LightSwitchApplication.SupplierDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>.Entry
                __SupplierDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeCreated,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeActivated,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSaveErrorEvent);
            private static void __SupplierDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SupplierDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SupplierDetail_InvokeSavingEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                bool handled = false;
                s.SupplierDetail_Saving(ref handled);
                return handled;
            }
            private static void __SupplierDetail_InvokeSavedEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Saved();
            }
            private static bool __SupplierDetail_InvokeClosingEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                bool cancel = false;
                s.SupplierDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __SupplierDetail_InvokeCreated(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Created();
            }
            private static void __SupplierDetail_InvokeActivated(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Activated();
            }
            private static bool __SupplierDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.SupplierDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.SupplierDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Client_ApprovedsQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Client_Approveds).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Preference1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_RecordsQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Safety_Records).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Safety_Status");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_SpecialtiesQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Supplier_Specialties).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufacturesQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Manufacturer");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Supplier;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Data _Supplierid;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data _Client_Approveds;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data _Safety_Records;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data _Supplier_Specialties;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier> Supplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int> Supplierid
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved> Client_Approveds
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Client_Approveds);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record> Safety_Records
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Safety_Records);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Supplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Supplier",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_OnValueChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_OnLoaded);
                private static void _Supplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier, sf);
                }
                private static void _Supplier_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Supplier_OnValueChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplier_Changed();
                }

                private static void _Supplier_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Supplier_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Entry
                    Supplierid = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Entry(
                        "Supplierid",
                        false,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_OnValueChanged);
                private static void _Supplierid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplierid, sf);
                }
                private static void _Supplierid_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplierid_Validate(r);
                }
                private static void _Supplierid_OnValueChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplierid_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry
                    Client_Approveds = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry(
                        "Client_Approveds",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnLoaded);
                private static void _Client_Approveds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Client_Approveds, sf);
                }
                private static void _Client_Approveds_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Client_Approveds_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Client_Approveds_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Client_ApprovedsQuery();
                }
                private static void _Client_Approveds_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Client_Approveds_SelectionChanged();
                }
                private static void _Client_Approveds_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Client_Approveds_Changed(e);
                }
                private static void _Client_Approveds_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Client_Approveds_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry
                    Safety_Records = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry(
                        "Safety_Records",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_OnLoaded);
                private static void _Safety_Records_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Records, sf);
                }
                private static void _Safety_Records_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Records_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Records_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Safety_RecordsQuery();
                }
                private static void _Safety_Records_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Safety_Records_SelectionChanged();
                }
                private static void _Safety_Records_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Records_Changed(e);
                }
                private static void _Safety_Records_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Safety_Records_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry
                    Supplier_Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry(
                        "Supplier_Specialties",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnLoaded);
                private static void _Supplier_Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Specialties, sf);
                }
                private static void _Supplier_Specialties_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Specialties_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_SpecialtiesQuery();
                }
                private static void _Supplier_Specialties_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplier_Specialties_SelectionChanged();
                }
                private static void _Supplier_Specialties_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Specialties_Changed(e);
                }
                private static void _Supplier_Specialties_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Supplier_Specialties_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnLoaded);
                private static void _SupplierManufactures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures, sf);
                }
                private static void _SupplierManufactures_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufacturesQuery();
                }
                private static void _SupplierManufactures_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.SupplierManufactures_SelectionChanged();
                }
                private static void _SupplierManufactures_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures_Changed(e);
                }
                private static void _SupplierManufactures_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.SupplierManufactures_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
}
