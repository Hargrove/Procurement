//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class NewProject
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private NewProject() : base("LightSwitchApplication.Web:NewProject")
        {
            global::LightSwitchApplication.NewProject.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static NewProject CreateInstance()
        {
            return new global::LightSwitchApplication.NewProject(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NewProject_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ProjectProperty_Changed();

        partial void Project_Stakeholders_SelectionChanged();

        partial void Project_Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Loaded(bool succeeded);

        partial void RFQ_P_SelectionChanged();

        partial void RFQ_P_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Loaded(bool succeeded);

        partial void Stakeholder_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Loaded(bool succeeded);

        partial void Project_Stakeholders1_SelectionChanged();

        partial void Project_Stakeholders1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders1_Loaded(bool succeeded);

        partial void ID_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project ProjectProperty
        {
            get 
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty);
            }
            set
            {
                global::LightSwitchApplication.NewProject.DetailsClass.SetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_P visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_PItem> RFQ_P
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.RFQ_P);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Stakeholder Stakeholder
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Stakeholder);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders1
        {
            get
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get 
            {
                return global::LightSwitchApplication.NewProject.DetailsClass.GetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.NewProject.DetailsClass.SetValue(this, global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddPhase screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPhase()
        {
            this.Details.Methods.AddPhase.CreateInvocation().Execute();
        }
        partial void AddPhase_CanExecute(ref bool result);
        partial void AddPhase_Execute();

        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew1()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew1_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew1_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.NewProject.DetailsClass.PropertySet, global::LightSwitchApplication.NewProject.DetailsClass.CommandSet, global::LightSwitchApplication.NewProject.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty;
                var initializeCommandEntry = global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddPhase;
                var initializeMethodEntry = global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddPhase;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                __NewProjectEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSavingEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSavedEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeClosingEvent,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeCreated,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeActivated,
                    global::LightSwitchApplication.NewProject.DetailsClass.__NewProject_InvokeSaveErrorEvent);
            private static void __NewProject_InvokeInitializeDataWorkspace(global::LightSwitchApplication.NewProject s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.NewProject_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __NewProject_InvokeSavingEvent(global::LightSwitchApplication.NewProject s)
            {
                bool handled = false;
                s.NewProject_Saving(ref handled);
                return handled;
            }
            private static void __NewProject_InvokeSavedEvent(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Saved();
            }
            private static bool __NewProject_InvokeClosingEvent(global::LightSwitchApplication.NewProject s)
            {
                bool cancel = false;
                s.NewProject_Closing(ref cancel);
                return cancel;
            }
            private static void __NewProject_InvokeCreated(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Created();
            }
            private static void __NewProject_InvokeActivated(global::LightSwitchApplication.NewProject s)
            {
                s.NewProject_Activated();
            }
            private static bool __NewProject_InvokeSaveErrorEvent(global::LightSwitchApplication.NewProject s, global::System.Exception ex)
            {
                bool handled = false;
                s.NewProject_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.NewProject.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_StakeholdersQuery()
            {
                if (this.Screen.ProjectProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectProperty.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_PQuery()
            {
                if (this.Screen.ProjectProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectProperty.Details.Properties.RFQ_P).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_Stakeholders1Query()
            {
                if (this.Screen.Stakeholder == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Stakeholder.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Data _ProjectProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_P;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data _Stakeholder;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Data _ID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddPhaseCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddPhaseMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Method;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project> ProjectProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ProjectProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_P
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.RFQ_P);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder> Stakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Stakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.Project_Stakeholders1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int> ID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties.ID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddPhase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddPhase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddPhase
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddPhase);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>)base.GetItem(global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    ProjectProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "ProjectProperty",
                        false,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ProjectProperty_OnValueChanged);
                private static void _ProjectProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectProperty, sf);
                }
                private static void _ProjectProperty_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectProperty_Validate(r);
                }
                private static void _ProjectProperty_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.ProjectProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders_OnLoaded);
                private static void _Project_Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders, sf);
                }
                private static void _Project_Stakeholders_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.Project_StakeholdersQuery();
                }
                private static void _Project_Stakeholders_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Project_Stakeholders_SelectionChanged();
                }
                private static void _Project_Stakeholders_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders_Changed(e);
                }
                private static void _Project_Stakeholders_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Project_Stakeholders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_P = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_P",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._RFQ_P_OnLoaded);
                private static void _RFQ_P_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_P, sf);
                }
                private static void _RFQ_P_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_P_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_P_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.RFQ_PQuery();
                }
                private static void _RFQ_P_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.RFQ_P_SelectionChanged();
                }
                private static void _RFQ_P_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_P_Changed(e);
                }
                private static void _RFQ_P_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.RFQ_P_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry
                    Stakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry(
                        "Stakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_OnValueChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Stakeholder_OnLoaded);
                private static void _Stakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholder, sf);
                }
                private static void _Stakeholder_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholder_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholder_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Stakeholder_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Stakeholder_Changed();
                }

                private static void _Stakeholder_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Stakeholder_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders1",
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_CreateQuery,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_SelectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_OnCollectionChanged,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._Project_Stakeholders1_OnLoaded);
                private static void _Project_Stakeholders1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1, sf);
                }
                private static void _Project_Stakeholders1_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders1_CreateQuery(global::LightSwitchApplication.NewProject.DetailsClass d, object[] args)
                {
                    return d.Project_Stakeholders1Query();
                }
                private static void _Project_Stakeholders1_SelectionChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.Project_Stakeholders1_SelectionChanged();
                }
                private static void _Project_Stakeholders1_OnCollectionChanged(global::LightSwitchApplication.NewProject s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders1_Changed(e);
                }
                private static void _Project_Stakeholders1_OnLoaded(global::LightSwitchApplication.NewProject s, bool succeeded)
                {
                    s.Project_Stakeholders1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Entry(
                        "ID",
                        false,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.NewProject.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass, int>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static void _ID_Validate(global::LightSwitchApplication.NewProject s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ID_Validate(r);
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.NewProject s)
                {
                    s.ID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddPhase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddPhase",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddPhase_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddPhase_CreateExecutableObject);
                private static void _AddPhase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPhaseCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddPhase_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddPhase.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.NewProject.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.NewProject.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddPhase = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddPhase",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddPhase_InvokeMethod);
                private static void _AddPhase_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPhaseMethod, sf);
                }
                private static global::System.Exception _AddPhase_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddPhase_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddPhase_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddPhase_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.NewProject.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.NewProject.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.NewProject, global::LightSwitchApplication.NewProject.DetailsClass>.Data> c, global::LightSwitchApplication.NewProject.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew1_CanInvoke(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.NewProject.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew1_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PhaseLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PhaseLookup() : base("LightSwitchApplication.Web:PhaseLookup")
        {
            global::LightSwitchApplication.PhaseLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PhaseLookup CreateInstance()
        {
            return new global::LightSwitchApplication.PhaseLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PhaseLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Phases_SelectionChanged();

        partial void Phases_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phases_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Phases visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Phase> Phases
        {
            get
            {
                return global::LightSwitchApplication.PhaseLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Phases_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySet, global::LightSwitchApplication.PhaseLookup.DetailsClass.CommandSet, global::LightSwitchApplication.PhaseLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>.Entry
                __PhaseLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeCreated,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeActivated,
                    global::LightSwitchApplication.PhaseLookup.DetailsClass.__PhaseLookup_InvokeSaveErrorEvent);
            private static void __PhaseLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PhaseLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PhaseLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PhaseLookup_InvokeSavingEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                bool handled = false;
                s.PhaseLookup_Saving(ref handled);
                return handled;
            }
            private static void __PhaseLookup_InvokeSavedEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Saved();
            }
            private static bool __PhaseLookup_InvokeClosingEvent(global::LightSwitchApplication.PhaseLookup s)
            {
                bool cancel = false;
                s.PhaseLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __PhaseLookup_InvokeCreated(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Created();
            }
            private static void __PhaseLookup_InvokeActivated(global::LightSwitchApplication.PhaseLookup s)
            {
                s.PhaseLookup_Activated();
            }
            private static bool __PhaseLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.PhaseLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.PhaseLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PhaseLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PhasesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Phases;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Data _Phases;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase> Phases
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>)base.GetItem(global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties.Phases);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Entry
                    Phases = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Entry(
                        "Phases",
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_Stub,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_Validate,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_CreateQuery,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_SelectionChanged,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_OnCollectionChanged,
                        global::LightSwitchApplication.PhaseLookup.DetailsClass.PropertySetProperties._Phases_OnLoaded);
                private static void _Phases_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PhaseLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PhaseLookup, global::LightSwitchApplication.PhaseLookup.DetailsClass, global::LightSwitchApplication.Phase>.Data> c, global::LightSwitchApplication.PhaseLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Phases, sf);
                }
                private static void _Phases_Validate(global::LightSwitchApplication.PhaseLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Phases_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Phases_CreateQuery(global::LightSwitchApplication.PhaseLookup.DetailsClass d, object[] args)
                {
                    return d.PhasesQuery();
                }
                private static void _Phases_SelectionChanged(global::LightSwitchApplication.PhaseLookup s)
                {
                    s.Phases_SelectionChanged();
                }
                private static void _Phases_OnCollectionChanged(global::LightSwitchApplication.PhaseLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Phases_Changed(e);
                }
                private static void _Phases_OnLoaded(global::LightSwitchApplication.PhaseLookup s, bool succeeded)
                {
                    s.Phases_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectDetails
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProjectDetails(int ProjectID) : base("LightSwitchApplication.Web:ProjectDetails")
        {
                this.ProjectID = ProjectID;
            global::LightSwitchApplication.ProjectDetails.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProjectDetails CreateInstance(int ProjectID)
        {
            return new global::LightSwitchApplication.ProjectDetails(
                        ProjectID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectDetails_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StaticProperty_Changed();

        partial void Project_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Loaded(bool succeeded);

        partial void ProjectID_Changed();

        partial void RFQ_P_SelectionChanged();

        partial void RFQ_P_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Loaded(bool succeeded);

        partial void Project_Stakeholders_SelectionChanged();

        partial void Project_Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Loaded(bool succeeded);

        partial void BidLists_SelectionChanged();

        partial void BidLists_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Loaded(bool succeeded);

        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        partial void Stakeholders_SelectionChanged();

        partial void Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Loaded(bool succeeded);

        partial void Query1_SelectionChanged();

        partial void Query1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_Loaded(bool succeeded);

        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StaticProperty
        {
            get 
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetails.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaticProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProjectID
        {
            get 
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID);
            }
            set
            {
                global::LightSwitchApplication.ProjectDetails.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_P visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_PItem> RFQ_P
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.RFQ_P);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Project_Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project_Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the BidLists visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.BidList> BidLists
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.BidLists);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Stakeholder> Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Query1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Year> Query1
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Query1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.ProjectDetails.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Project_Stakeholders1AddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_Stakeholders1AddAndEditNew()
        {
            this.Details.Methods.Project_Stakeholders1AddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_Stakeholders1AddAndEditNew_CanExecute(ref bool result);
        partial void Project_Stakeholders1AddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersAddAndEditNew1()
        {
            this.Details.Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersAddAndEditNew1_CanExecute(ref bool result);
        partial void Project_StakeholdersAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the AddPSH screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddPSH()
        {
            this.Details.Methods.AddPSH.CreateInvocation().Execute();
        }
        partial void AddPSH_CanExecute(ref bool result);
        partial void AddPSH_Execute();

        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        /// <summary>
        /// Calls the RFQ_PAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RFQ_PAddAndEditNew()
        {
            this.Details.Methods.RFQ_PAddAndEditNew.CreateInvocation().Execute();
        }
        partial void RFQ_PAddAndEditNew_CanExecute(ref bool result);
        partial void RFQ_PAddAndEditNew_Execute();

        /// <summary>
        /// Calls the AddSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddSupplier()
        {
            this.Details.Methods.AddSupplier.CreateInvocation().Execute();
        }
        partial void AddSupplier_CanExecute(ref bool result);
        partial void AddSupplier_Execute();

        /// <summary>
        /// Calls the RemoveSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveSupplier()
        {
            this.Details.Methods.RemoveSupplier.CreateInvocation().Execute();
        }
        partial void RemoveSupplier_CanExecute(ref bool result);
        partial void RemoveSupplier_Execute();

        /// <summary>
        /// Calls the AddRFQ screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddRFQ()
        {
            this.Details.Methods.AddRFQ.CreateInvocation().Execute();
        }
        partial void AddRFQ_CanExecute(ref bool result);
        partial void AddRFQ_Execute();

        /// <summary>
        /// Calls the CancelRFQ screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelRFQ()
        {
            this.Details.Methods.CancelRFQ.CreateInvocation().Execute();
        }
        partial void CancelRFQ_CanExecute(ref bool result);
        partial void CancelRFQ_Execute();

        /// <summary>
        /// Calls the Project_StakeholdersEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Project_StakeholdersEditSelected()
        {
            this.Details.Methods.Project_StakeholdersEditSelected.CreateInvocation().Execute();
        }
        partial void Project_StakeholdersEditSelected_CanExecute(ref bool result);
        partial void Project_StakeholdersEditSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySet, global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSet, global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty;
                var initializeCommandEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_Stakeholders1AddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_Stakeholders1AddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                __ProjectDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSavingEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSavedEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeClosingEvent,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeCreated,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeActivated,
                    global::LightSwitchApplication.ProjectDetails.DetailsClass.__ProjectDetails_InvokeSaveErrorEvent);
            private static void __ProjectDetails_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProjectDetails_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProjectDetails_InvokeSavingEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                bool handled = false;
                s.ProjectDetails_Saving(ref handled);
                return handled;
            }
            private static void __ProjectDetails_InvokeSavedEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Saved();
            }
            private static bool __ProjectDetails_InvokeClosingEvent(global::LightSwitchApplication.ProjectDetails s)
            {
                bool cancel = false;
                s.ProjectDetails_Closing(ref cancel);
                return cancel;
            }
            private static void __ProjectDetails_InvokeCreated(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Created();
            }
            private static void __ProjectDetails_InvokeActivated(global::LightSwitchApplication.ProjectDetails s)
            {
                s.ProjectDetails_Activated();
            }
            private static bool __ProjectDetails_InvokeSaveErrorEvent(global::LightSwitchApplication.ProjectDetails s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProjectDetails_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_PQuery()
            {
                if (this.Screen.Project == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_PItem>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Project.Details.Properties.RFQ_P).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                loader,
                                "SourceStrategy1"),
                            "Project"),
                        "Project.Client1"),
                    "Project.Phase1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Project_StakeholdersQuery()
            {
                if (this.Screen.Project == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project_Stakeholder>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Project.Details.Properties.Project_Stakeholders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Stakeholder_Type"),
                    "Stakeholder1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable BidListsQuery()
            {
                if (this.Screen.RFQ_P.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_P.SelectedItem.Details.Properties.BidLists).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Suppliers;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StakeholdersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                        this.Screen.DataWorkspace.ProcurementData.Stakeholders,
                        (s) => s.LastName),
                    (s) => s.FirstName);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Query1Query()
            {
                return this.Screen.DataWorkspace.ProcurementData.Query1();
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                if (this.Screen.Query1.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Query1.SelectedItem.Details.Properties.Projects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Data _StaticProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Data _ProjectID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_P;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_Stakeholders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Data _BidLists;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data _Stakeholders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year>.Data _Query1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_Stakeholders1AddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddPSHCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RFQ_PAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RemoveSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddRFQCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _CancelRFQCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_Stakeholders1AddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddPSHMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RFQ_PAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _RemoveSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _AddRFQMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _CancelRFQMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data _Project_StakeholdersEditSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string> StaticProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.StaticProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int> ProjectID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.ProjectID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_P
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.RFQ_P);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Project_Stakeholders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList> BidLists
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.BidLists);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder> Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Stakeholders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year> Query1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Query1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties.Projects);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_Stakeholders1AddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_Stakeholders1AddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddPSH
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddPSH);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RFQ_PAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.RFQ_PAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.RemoveSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddRFQ
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.AddRFQ);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> CancelRFQ
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.CancelRFQ);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties.Project_StakeholdersEditSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_Stakeholders1AddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_Stakeholders1AddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_StakeholdersAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddPSH
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddPSH);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RFQ_PAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.RFQ_PAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.RemoveSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> AddRFQ
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.AddRFQ);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> CancelRFQ
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.CancelRFQ);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass> Project_StakeholdersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties.Project_StakeholdersEditSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Entry
                    StaticProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Entry(
                        "StaticProperty",
                        false,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._StaticProperty_OnValueChanged);
                private static void _StaticProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._StaticProperty, sf);
                }
                private static void _StaticProperty_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaticProperty_Validate(r);
                }
                private static void _StaticProperty_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.StaticProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_OnValueChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_OnLoaded);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Project_Changed();
                }

                private static void _Project_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Project_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Entry
                    ProjectID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Entry(
                        "ProjectID",
                        false,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._ProjectID_OnValueChanged);
                private static void _ProjectID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectID, sf);
                }
                private static void _ProjectID_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectID_Validate(r);
                }
                private static void _ProjectID_OnValueChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.ProjectID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_P = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_P",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._RFQ_P_OnLoaded);
                private static void _RFQ_P_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_P, sf);
                }
                private static void _RFQ_P_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_P_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_P_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.RFQ_PQuery();
                }
                private static void _RFQ_P_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.RFQ_P_SelectionChanged();
                }
                private static void _RFQ_P_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_P_Changed(e);
                }
                private static void _RFQ_P_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.RFQ_P_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_Stakeholders",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Project_Stakeholders_OnLoaded);
                private static void _Project_Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders, sf);
                }
                private static void _Project_Stakeholders_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Project_Stakeholders_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.Project_StakeholdersQuery();
                }
                private static void _Project_Stakeholders_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Project_Stakeholders_SelectionChanged();
                }
                private static void _Project_Stakeholders_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Project_Stakeholders_Changed(e);
                }
                private static void _Project_Stakeholders_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Project_Stakeholders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Entry
                    BidLists = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Entry(
                        "BidLists",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._BidLists_OnLoaded);
                private static void _BidLists_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.BidList>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._BidLists, sf);
                }
                private static void _BidLists_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.BidLists_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _BidLists_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.BidListsQuery();
                }
                private static void _BidLists_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.BidLists_SelectionChanged();
                }
                private static void _BidLists_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.BidLists_Changed(e);
                }
                private static void _BidLists_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.BidLists_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry
                    Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry(
                        "Stakeholders",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Stakeholders_OnLoaded);
                private static void _Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholders, sf);
                }
                private static void _Stakeholders_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholders_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.StakeholdersQuery();
                }
                private static void _Stakeholders_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Stakeholders_SelectionChanged();
                }
                private static void _Stakeholders_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Stakeholders_Changed(e);
                }
                private static void _Stakeholders_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Stakeholders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year>.Entry
                    Query1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year>.Entry(
                        "Query1",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Query1_OnLoaded);
                private static void _Query1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Year>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Query1, sf);
                }
                private static void _Query1_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Query1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Query1_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.Query1Query();
                }
                private static void _Query1_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Query1_SelectionChanged();
                }
                private static void _Query1_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Query1_Changed(e);
                }
                private static void _Query1_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Query1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.ProjectDetails s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.ProjectDetails.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.ProjectDetails s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.ProjectDetails s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.ProjectDetails s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_Stakeholders1AddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_Stakeholders1AddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_Stakeholders1AddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_Stakeholders1AddAndEditNew_CreateExecutableObject);
                private static void _Project_Stakeholders1AddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1AddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_Stakeholders1AddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_Stakeholders1AddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersAddAndEditNew1_CreateExecutableObject);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_StakeholdersAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddPSH = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddPSH",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddPSH_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddPSH_CreateExecutableObject);
                private static void _AddPSH_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPSHCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddPSH_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddPSH.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RFQ_PAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RFQ_PAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RFQ_PAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RFQ_PAddAndEditNew_CreateExecutableObject);
                private static void _RFQ_PAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RFQ_PAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.RFQ_PAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddSupplier_CreateExecutableObject);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddSupplier_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._RemoveSupplier_CreateExecutableObject);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveSupplier_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.RemoveSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddRFQ = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddRFQ",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddRFQ_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._AddRFQ_CreateExecutableObject);
                private static void _AddRFQ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddRFQCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddRFQ_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.AddRFQ.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    CancelRFQ = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "CancelRFQ",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._CancelRFQ_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._CancelRFQ_CreateExecutableObject);
                private static void _CancelRFQ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelRFQCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelRFQ_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.CancelRFQ.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersEditSelected",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersEditSelected_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.CommandSetProperties._Project_StakeholdersEditSelected_CreateExecutableObject);
                private static void _Project_StakeholdersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Project_StakeholdersEditSelected_CreateExecutableObject(global::LightSwitchApplication.ProjectDetails.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectDetails.DetailsClass)d).Methods.Project_StakeholdersEditSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_Stakeholders1AddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_Stakeholders1AddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_Stakeholders1AddAndEditNew_InvokeMethod);
                private static void _Project_Stakeholders1AddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_Stakeholders1AddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_Stakeholders1AddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_Stakeholders1AddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_Stakeholders1AddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_Stakeholders1AddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersAddAndEditNew1",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersAddAndEditNew1_InvokeMethod);
                private static void _Project_StakeholdersAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _Project_StakeholdersAddAndEditNew1_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddPSH = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddPSH",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddPSH_InvokeMethod);
                private static void _AddPSH_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddPSHMethod, sf);
                }
                private static global::System.Exception _AddPSH_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddPSH_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddPSH_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddPSH_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RFQ_PAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RFQ_PAddAndEditNew",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RFQ_PAddAndEditNew_InvokeMethod);
                private static void _RFQ_PAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _RFQ_PAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RFQ_PAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RFQ_PAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RFQ_PAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddSupplier_InvokeMethod);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierMethod, sf);
                }
                private static global::System.Exception _AddSupplier_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddSupplier_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._RemoveSupplier_InvokeMethod);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierMethod, sf);
                }
                private static global::System.Exception _RemoveSupplier_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveSupplier_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    AddRFQ = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "AddRFQ",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddRFQ_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddRFQ_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._AddRFQ_InvokeMethod);
                private static void _AddRFQ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._AddRFQMethod, sf);
                }
                private static global::System.Exception _AddRFQ_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddRFQ_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddRFQ_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddRFQ_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    CancelRFQ = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "CancelRFQ",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._CancelRFQ_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._CancelRFQ_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._CancelRFQ_InvokeMethod);
                private static void _CancelRFQ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelRFQMethod, sf);
                }
                private static global::System.Exception _CancelRFQ_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelRFQ_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelRFQ_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelRFQ_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry
                    Project_StakeholdersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Entry(
                        "Project_StakeholdersEditSelected",
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersEditSelected_Stub,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersEditSelected_CanInvoke,
                        global::LightSwitchApplication.ProjectDetails.DetailsClass.MethodSetProperties._Project_StakeholdersEditSelected_InvokeMethod);
                private static void _Project_StakeholdersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectDetails.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectDetails, global::LightSwitchApplication.ProjectDetails.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectDetails.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholdersEditSelectedMethod, sf);
                }
                private static global::System.Exception _Project_StakeholdersEditSelected_CanInvoke(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Project_StakeholdersEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Project_StakeholdersEditSelected_InvokeMethod(global::LightSwitchApplication.ProjectDetails.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Project_StakeholdersEditSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Projects
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Projects() : base("LightSwitchApplication.Web:Projects")
        {
            global::LightSwitchApplication.Projects.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Projects CreateInstance()
        {
            return new global::LightSwitchApplication.Projects(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects1_SelectionChanged();

        partial void Projects1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects1
        {
            get
            {
                return global::LightSwitchApplication.Projects.DetailsClass.GetValue(this, global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Projects.DetailsClass.PropertySet, global::LightSwitchApplication.Projects.DetailsClass.CommandSet, global::LightSwitchApplication.Projects.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>.Entry
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>.Entry(
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSavingEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSavedEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeClosingEvent,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeCreated,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeActivated,
                    global::LightSwitchApplication.Projects.DetailsClass.__Projects_InvokeSaveErrorEvent);
            private static void __Projects_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Projects s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Projects_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Projects_InvokeSavingEvent(global::LightSwitchApplication.Projects s)
            {
                bool handled = false;
                s.Projects_Saving(ref handled);
                return handled;
            }
            private static void __Projects_InvokeSavedEvent(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Saved();
            }
            private static bool __Projects_InvokeClosingEvent(global::LightSwitchApplication.Projects s)
            {
                bool cancel = false;
                s.Projects_Closing(ref cancel);
                return cancel;
            }
            private static void __Projects_InvokeCreated(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Created();
            }
            private static void __Projects_InvokeActivated(global::LightSwitchApplication.Projects s)
            {
                s.Projects_Activated();
            }
            private static bool __Projects_InvokeSaveErrorEvent(global::LightSwitchApplication.Projects s, global::System.Exception ex)
            {
                bool handled = false;
                s.Projects_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Projects.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Projects1Query()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                this.Screen.DataWorkspace.ProcurementData.Projects,
                                "Client1"),
                            "Phase1"),
                        "Year1"),
                    "ProjectClassification");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project> Projects1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties.Projects1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects1",
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_Stub,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_Validate,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_CreateQuery,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_SelectionChanged,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_OnCollectionChanged,
                        global::LightSwitchApplication.Projects.DetailsClass.PropertySetProperties._Projects1_OnLoaded);
                private static void _Projects1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Projects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Projects, global::LightSwitchApplication.Projects.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Projects.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects1, sf);
                }
                private static void _Projects1_Validate(global::LightSwitchApplication.Projects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects1_CreateQuery(global::LightSwitchApplication.Projects.DetailsClass d, object[] args)
                {
                    return d.Projects1Query();
                }
                private static void _Projects1_SelectionChanged(global::LightSwitchApplication.Projects s)
                {
                    s.Projects1_SelectionChanged();
                }
                private static void _Projects1_OnCollectionChanged(global::LightSwitchApplication.Projects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects1_Changed(e);
                }
                private static void _Projects1_OnLoaded(global::LightSwitchApplication.Projects s, bool succeeded)
                {
                    s.Projects1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class StakeholdertypeLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private StakeholdertypeLookup() : base("LightSwitchApplication.Web:StakeholdertypeLookup")
        {
            global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static StakeholdertypeLookup CreateInstance()
        {
            return new global::LightSwitchApplication.StakeholdertypeLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StakeholdertypeLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Stakeholder_Types_SelectionChanged();

        partial void Stakeholder_Types_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Types_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Stakeholder_Types visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Stakeholder_Type> Stakeholder_Types
        {
            get
            {
                return global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholder_Types_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySet, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.CommandSet, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>.Entry
                __StakeholdertypeLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeCreated,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeActivated,
                    global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.__StakeholdertypeLookup_InvokeSaveErrorEvent);
            private static void __StakeholdertypeLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.StakeholdertypeLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __StakeholdertypeLookup_InvokeSavingEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                bool handled = false;
                s.StakeholdertypeLookup_Saving(ref handled);
                return handled;
            }
            private static void __StakeholdertypeLookup_InvokeSavedEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Saved();
            }
            private static bool __StakeholdertypeLookup_InvokeClosingEvent(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                bool cancel = false;
                s.StakeholdertypeLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __StakeholdertypeLookup_InvokeCreated(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Created();
            }
            private static void __StakeholdertypeLookup_InvokeActivated(global::LightSwitchApplication.StakeholdertypeLookup s)
            {
                s.StakeholdertypeLookup_Activated();
            }
            private static bool __StakeholdertypeLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.StakeholdertypeLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Stakeholder_TypesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Stakeholder_Types;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Data _Stakeholder_Types;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type> Stakeholder_Types
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>)base.GetItem(global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties.Stakeholder_Types);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Entry
                    Stakeholder_Types = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Entry(
                        "Stakeholder_Types",
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_Stub,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_Validate,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_CreateQuery,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_SelectionChanged,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_OnCollectionChanged,
                        global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass.PropertySetProperties._Stakeholder_Types_OnLoaded);
                private static void _Stakeholder_Types_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StakeholdertypeLookup, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass, global::LightSwitchApplication.Stakeholder_Type>.Data> c, global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholder_Types, sf);
                }
                private static void _Stakeholder_Types_Validate(global::LightSwitchApplication.StakeholdertypeLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholder_Types_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholder_Types_CreateQuery(global::LightSwitchApplication.StakeholdertypeLookup.DetailsClass d, object[] args)
                {
                    return d.Stakeholder_TypesQuery();
                }
                private static void _Stakeholder_Types_SelectionChanged(global::LightSwitchApplication.StakeholdertypeLookup s)
                {
                    s.Stakeholder_Types_SelectionChanged();
                }
                private static void _Stakeholder_Types_OnCollectionChanged(global::LightSwitchApplication.StakeholdertypeLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Stakeholder_Types_Changed(e);
                }
                private static void _Stakeholder_Types_OnLoaded(global::LightSwitchApplication.StakeholdertypeLookup s, bool succeeded)
                {
                    s.Stakeholder_Types_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddProjectStakeholder
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddProjectStakeholder() : base("LightSwitchApplication.Web:AddProjectStakeholder")
        {
            global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddProjectStakeholder CreateInstance()
        {
            return new global::LightSwitchApplication.AddProjectStakeholder(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddProjectStakeholder_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Project_StakeholderProperty_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project_Stakeholder Project_StakeholderProperty
        {
            get 
            {
                return global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.GetValue(this, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty);
            }
            set
            {
                global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.SetValue(this, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_StakeholderProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddStakeholderType screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholderType()
        {
            this.Details.Methods.AddStakeholderType.CreateInvocation().Execute();
        }
        partial void AddStakeholderType_CanExecute(ref bool result);
        partial void AddStakeholderType_Execute();

        /// <summary>
        /// Calls the AddStakeholder screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddStakeholder()
        {
            this.Details.Methods.AddStakeholder.CreateInvocation().Execute();
        }
        partial void AddStakeholder_CanExecute(ref bool result);
        partial void AddStakeholder_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySet, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSet, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty;
                var initializeCommandEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholderType;
                var initializeMethodEntry = global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholderType;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                __AddProjectStakeholderEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSavingEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSavedEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeClosingEvent,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeCreated,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeActivated,
                    global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.__AddProjectStakeholder_InvokeSaveErrorEvent);
            private static void __AddProjectStakeholder_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddProjectStakeholder s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddProjectStakeholder_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddProjectStakeholder_InvokeSavingEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                bool handled = false;
                s.AddProjectStakeholder_Saving(ref handled);
                return handled;
            }
            private static void __AddProjectStakeholder_InvokeSavedEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Saved();
            }
            private static bool __AddProjectStakeholder_InvokeClosingEvent(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                bool cancel = false;
                s.AddProjectStakeholder_Closing(ref cancel);
                return cancel;
            }
            private static void __AddProjectStakeholder_InvokeCreated(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Created();
            }
            private static void __AddProjectStakeholder_InvokeActivated(global::LightSwitchApplication.AddProjectStakeholder s)
            {
                s.AddProjectStakeholder_Activated();
            }
            private static bool __AddProjectStakeholder_InvokeSaveErrorEvent(global::LightSwitchApplication.AddProjectStakeholder s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddProjectStakeholder_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data _Project_StakeholderProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderTypeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderTypeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data _AddStakeholderMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder> Project_StakeholderProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties.Project_StakeholderProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties.AddStakeholder);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholderType
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholderType);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass> AddStakeholder
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>)base.GetItem(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties.AddStakeholder);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry
                    Project_StakeholderProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Entry(
                        "Project_StakeholderProperty",
                        false,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_Validate,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.PropertySetProperties._Project_StakeholderProperty_OnValueChanged);
                private static void _Project_StakeholderProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::LightSwitchApplication.Project_Stakeholder>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._Project_StakeholderProperty, sf);
                }
                private static void _Project_StakeholderProperty_Validate(global::LightSwitchApplication.AddProjectStakeholder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Project_StakeholderProperty_Validate(r);
                }
                private static void _Project_StakeholderProperty_OnValueChanged(global::LightSwitchApplication.AddProjectStakeholder s)
                {
                    s.Project_StakeholderProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholderType_CreateExecutableObject);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholderType_CreateExecutableObject(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddProjectStakeholder.DetailsClass)d).Methods.AddStakeholderType.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.CommandSetProperties._AddStakeholder_CreateExecutableObject);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddStakeholder_CreateExecutableObject(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AddProjectStakeholder.DetailsClass)d).Methods.AddStakeholder.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholderType = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholderType",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_CanInvoke,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholderType_InvokeMethod);
                private static void _AddStakeholderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderTypeMethod, sf);
                }
                private static global::System.Exception _AddStakeholderType_CanInvoke(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholderType_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholderType_InvokeMethod(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholderType_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry
                    AddStakeholder = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Entry(
                        "AddStakeholder",
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_Stub,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_CanInvoke,
                        global::LightSwitchApplication.AddProjectStakeholder.DetailsClass.MethodSetProperties._AddStakeholder_InvokeMethod);
                private static void _AddStakeholder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddProjectStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AddProjectStakeholder, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass>.Data> c, global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._AddStakeholderMethod, sf);
                }
                private static global::System.Exception _AddStakeholder_CanInvoke(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddStakeholder_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddStakeholder_InvokeMethod(global::LightSwitchApplication.AddProjectStakeholder.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddStakeholder_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddStakeholder
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddStakeholder() : base("LightSwitchApplication.Web:AddStakeholder")
        {
            global::LightSwitchApplication.AddStakeholder.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddStakeholder CreateInstance()
        {
            return new global::LightSwitchApplication.AddStakeholder(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddStakeholder_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Stakeholders_SelectionChanged();

        partial void Stakeholders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Stakeholders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Stakeholder> Stakeholders
        {
            get
            {
                return global::LightSwitchApplication.AddStakeholder.DetailsClass.GetValue(this, global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stakeholders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySet, global::LightSwitchApplication.AddStakeholder.DetailsClass.CommandSet, global::LightSwitchApplication.AddStakeholder.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>.Entry
                __AddStakeholderEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSavingEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSavedEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeClosingEvent,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeCreated,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeActivated,
                    global::LightSwitchApplication.AddStakeholder.DetailsClass.__AddStakeholder_InvokeSaveErrorEvent);
            private static void __AddStakeholder_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddStakeholder s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddStakeholder_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddStakeholder_InvokeSavingEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                bool handled = false;
                s.AddStakeholder_Saving(ref handled);
                return handled;
            }
            private static void __AddStakeholder_InvokeSavedEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Saved();
            }
            private static bool __AddStakeholder_InvokeClosingEvent(global::LightSwitchApplication.AddStakeholder s)
            {
                bool cancel = false;
                s.AddStakeholder_Closing(ref cancel);
                return cancel;
            }
            private static void __AddStakeholder_InvokeCreated(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Created();
            }
            private static void __AddStakeholder_InvokeActivated(global::LightSwitchApplication.AddStakeholder s)
            {
                s.AddStakeholder_Activated();
            }
            private static bool __AddStakeholder_InvokeSaveErrorEvent(global::LightSwitchApplication.AddStakeholder s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddStakeholder_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddStakeholder.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StakeholdersQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Stakeholders;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data _Stakeholders;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder> Stakeholders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>)base.GetItem(global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties.Stakeholders);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry
                    Stakeholders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Entry(
                        "Stakeholders",
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_Stub,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_Validate,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_CreateQuery,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_SelectionChanged,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_OnCollectionChanged,
                        global::LightSwitchApplication.AddStakeholder.DetailsClass.PropertySetProperties._Stakeholders_OnLoaded);
                private static void _Stakeholders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddStakeholder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddStakeholder, global::LightSwitchApplication.AddStakeholder.DetailsClass, global::LightSwitchApplication.Stakeholder>.Data> c, global::LightSwitchApplication.AddStakeholder.DetailsClass d, object sf)
                {
                    c(d, ref d._Stakeholders, sf);
                }
                private static void _Stakeholders_Validate(global::LightSwitchApplication.AddStakeholder s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Stakeholders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Stakeholders_CreateQuery(global::LightSwitchApplication.AddStakeholder.DetailsClass d, object[] args)
                {
                    return d.StakeholdersQuery();
                }
                private static void _Stakeholders_SelectionChanged(global::LightSwitchApplication.AddStakeholder s)
                {
                    s.Stakeholders_SelectionChanged();
                }
                private static void _Stakeholders_OnCollectionChanged(global::LightSwitchApplication.AddStakeholder s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Stakeholders_Changed(e);
                }
                private static void _Stakeholders_OnLoaded(global::LightSwitchApplication.AddStakeholder s, bool succeeded)
                {
                    s.Stakeholders_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class BusinessClassesLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private BusinessClassesLookup() : base("LightSwitchApplication.Web:BusinessClassesLookup")
        {
            global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static BusinessClassesLookup CreateInstance()
        {
            return new global::LightSwitchApplication.BusinessClassesLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BusinessClassesLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Business_Classes_SelectionChanged();

        partial void Business_Classes_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Business_Classes_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Business_Classes visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Business_Class> Business_Classes
        {
            get
            {
                return global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Business_Classes_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySet, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.CommandSet, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>.Entry
                __BusinessClassesLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeCreated,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeActivated,
                    global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.__BusinessClassesLookup_InvokeSaveErrorEvent);
            private static void __BusinessClassesLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.BusinessClassesLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __BusinessClassesLookup_InvokeSavingEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                bool handled = false;
                s.BusinessClassesLookup_Saving(ref handled);
                return handled;
            }
            private static void __BusinessClassesLookup_InvokeSavedEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Saved();
            }
            private static bool __BusinessClassesLookup_InvokeClosingEvent(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                bool cancel = false;
                s.BusinessClassesLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __BusinessClassesLookup_InvokeCreated(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Created();
            }
            private static void __BusinessClassesLookup_InvokeActivated(global::LightSwitchApplication.BusinessClassesLookup s)
            {
                s.BusinessClassesLookup_Activated();
            }
            private static bool __BusinessClassesLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.BusinessClassesLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Business_ClassesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Business_Classes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Data _Business_Classes;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class> Business_Classes
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>)base.GetItem(global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties.Business_Classes);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Entry
                    Business_Classes = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Entry(
                        "Business_Classes",
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_Stub,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_Validate,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_CreateQuery,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_SelectionChanged,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_OnCollectionChanged,
                        global::LightSwitchApplication.BusinessClassesLookup.DetailsClass.PropertySetProperties._Business_Classes_OnLoaded);
                private static void _Business_Classes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.BusinessClassesLookup, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass, global::LightSwitchApplication.Business_Class>.Data> c, global::LightSwitchApplication.BusinessClassesLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Business_Classes, sf);
                }
                private static void _Business_Classes_Validate(global::LightSwitchApplication.BusinessClassesLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Business_Classes_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Business_Classes_CreateQuery(global::LightSwitchApplication.BusinessClassesLookup.DetailsClass d, object[] args)
                {
                    return d.Business_ClassesQuery();
                }
                private static void _Business_Classes_SelectionChanged(global::LightSwitchApplication.BusinessClassesLookup s)
                {
                    s.Business_Classes_SelectionChanged();
                }
                private static void _Business_Classes_OnCollectionChanged(global::LightSwitchApplication.BusinessClassesLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Business_Classes_Changed(e);
                }
                private static void _Business_Classes_OnLoaded(global::LightSwitchApplication.BusinessClassesLookup s, bool succeeded)
                {
                    s.Business_Classes_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class RFQ_PItemDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private RFQ_PItemDetail(int RFQ_PItemID) : base("LightSwitchApplication.Web:RFQ_PItemDetail")
        {
                this.RFQ_PItemID = RFQ_PItemID;
            global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static RFQ_PItemDetail CreateInstance(int RFQ_PItemID)
        {
            return new global::LightSwitchApplication.RFQ_PItemDetail(
                        RFQ_PItemID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StaticProperty_Changed();

        partial void RFQ_PItem_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItem_Loaded(bool succeeded);

        partial void RFQ_PItemID_Changed();

        partial void BidLists_SelectionChanged();

        partial void BidLists_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Loaded(bool succeeded);

        partial void RFQ_Lines_SelectionChanged();

        partial void RFQ_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Lines_Loaded(bool succeeded);

        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        partial void Submittals_SelectionChanged();

        partial void Submittals_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Submittals_Loaded(bool succeeded);

        partial void Proposals_SelectionChanged();

        partial void Proposals_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposals_Loaded(bool succeeded);

        partial void SelectedProposal_Changed();

        partial void Award_Selecteds_SelectionChanged();

        partial void Award_Selecteds_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Award_Selecteds_Loaded(bool succeeded);

        partial void ProjNum_Changed();

        partial void RFQNum_Changed();

        partial void FilterBYRfqnum_SelectionChanged();

        partial void FilterBYRfqnum_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterBYRfqnum_Loaded(bool succeeded);

        partial void FilteredByRFQ_SelectionChanged();

        partial void FilteredByRFQ_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilteredByRFQ_Loaded(bool succeeded);

        partial void RFQFilter_Changed();

        partial void Proposal_Lines_SelectionChanged();

        partial void Proposal_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Loaded(bool succeeded);

        partial void FilerByProposalNumber_SelectionChanged();

        partial void FilerByProposalNumber_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilerByProposalNumber_Loaded(bool succeeded);

        partial void PO_SelectionChanged();

        partial void PO_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Loaded(bool succeeded);

        partial void PO_Lines_SelectionChanged();

        partial void PO_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Loaded(bool succeeded);

        partial void AwardByrfqID_SelectionChanged();

        partial void AwardByrfqID_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AwardByrfqID_Loaded(bool succeeded);

        partial void RFQID_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StaticProperty
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaticProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RFQ_PItem RFQ_PItem
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItem);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItem_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQ_PItemID
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_PItemID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the BidLists visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.BidList> BidLists
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.BidLists);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BidLists_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_Line> RFQ_Lines
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Submittals visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Submittal> Submittals
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Submittals);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Submittals_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Proposals visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal> Proposals
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Proposals);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposals_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Proposal SelectedProposal
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.SelectedProposal);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.SelectedProposal, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SelectedProposal_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Award_Selecteds visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Award_Selected> Award_Selecteds
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Award_Selecteds);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Award_Selecteds_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjNum
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.ProjNum);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.ProjNum, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjNum_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQNum
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQNum);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQNum, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQNum_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FilterBYRfqnum visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_Line> FilterBYRfqnum
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilterBYRfqnum);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterBYRfqnum_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FilteredByRFQ visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal> FilteredByRFQ
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilteredByRFQ);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilteredByRFQ_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQFilter
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQFilter);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Proposal_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal_Line> Proposal_Lines
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Proposal_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FilerByProposalNumber visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal_Line> FilerByProposalNumber
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilerByProposalNumber);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilerByProposalNumber_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the PO visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO> PO
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.PO);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the PO_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO_Line> PO_Lines
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.PO_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the AwardByrfqID visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Award_Selected> AwardByrfqID
        {
            get
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.AwardByrfqID);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AwardByrfqID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQID
        {
            get 
            {
                return global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQID);
            }
            set
            {
                global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddSupplier()
        {
            this.Details.Methods.AddSupplier.CreateInvocation().Execute();
        }
        partial void AddSupplier_CanExecute(ref bool result);
        partial void AddSupplier_Execute();

        /// <summary>
        /// Calls the RemoveSupplier screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveSupplier()
        {
            this.Details.Methods.RemoveSupplier.CreateInvocation().Execute();
        }
        partial void RemoveSupplier_CanExecute(ref bool result);
        partial void RemoveSupplier_Execute();

        /// <summary>
        /// Calls the Award_SelectedsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Award_SelectedsAddAndEditNew()
        {
            this.Details.Methods.Award_SelectedsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Award_SelectedsAddAndEditNew_CanExecute(ref bool result);
        partial void Award_SelectedsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the CreatePO screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreatePO()
        {
            this.Details.Methods.CreatePO.CreateInvocation().Execute();
        }
        partial void CreatePO_CanExecute(ref bool result);
        partial void CreatePO_Execute();

        /// <summary>
        /// Calls the CreateNewRFQLine screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateNewRFQLine()
        {
            this.Details.Methods.CreateNewRFQLine.CreateInvocation().Execute();
        }
        partial void CreateNewRFQLine_CanExecute(ref bool result);
        partial void CreateNewRFQLine_Execute();

        /// <summary>
        /// Calls the RFQ_LinesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RFQ_LinesAddAndEditNew()
        {
            this.Details.Methods.RFQ_LinesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void RFQ_LinesAddAndEditNew_CanExecute(ref bool result);
        partial void RFQ_LinesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the ProposalsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ProposalsAddAndEditNew()
        {
            this.Details.Methods.ProposalsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void ProposalsAddAndEditNew_CanExecute(ref bool result);
        partial void ProposalsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the showid screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void showid()
        {
            this.Details.Methods.showid.CreateInvocation().Execute();
        }
        partial void showid_CanExecute(ref bool result);
        partial void showid_Execute();

        /// <summary>
        /// Calls the Proposal_LinesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Proposal_LinesAddAndEditNew()
        {
            this.Details.Methods.Proposal_LinesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Proposal_LinesAddAndEditNew_CanExecute(ref bool result);
        partial void Proposal_LinesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the ProposalsAddNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ProposalsAddNew()
        {
            this.Details.Methods.ProposalsAddNew.CreateInvocation().Execute();
        }
        partial void ProposalsAddNew_CanExecute(ref bool result);
        partial void ProposalsAddNew_Execute();

        /// <summary>
        /// Calls the Proposal_LinesAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Proposal_LinesAddAndEditNew1()
        {
            this.Details.Methods.Proposal_LinesAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void Proposal_LinesAddAndEditNew1_CanExecute(ref bool result);
        partial void Proposal_LinesAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the Proposal_LinesAddAndEditNew2 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Proposal_LinesAddAndEditNew2()
        {
            this.Details.Methods.Proposal_LinesAddAndEditNew2.CreateInvocation().Execute();
        }
        partial void Proposal_LinesAddAndEditNew2_CanExecute(ref bool result);
        partial void Proposal_LinesAddAndEditNew2_Execute();

        /// <summary>
        /// Calls the PO_LinesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void PO_LinesAddAndEditNew()
        {
            this.Details.Methods.PO_LinesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void PO_LinesAddAndEditNew_CanExecute(ref bool result);
        partial void PO_LinesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the PO_LinesAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void PO_LinesAddAndEditNew1()
        {
            this.Details.Methods.PO_LinesAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void PO_LinesAddAndEditNew1_CanExecute(ref bool result);
        partial void PO_LinesAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the AddRemoveAward screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddRemoveAward()
        {
            this.Details.Methods.AddRemoveAward.CreateInvocation().Execute();
        }
        partial void AddRemoveAward_CanExecute(ref bool result);
        partial void AddRemoveAward_Execute();

        /// <summary>
        /// Calls the ViewRFQPORegistrar screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewRFQPORegistrar()
        {
            this.Details.Methods.ViewRFQPORegistrar.CreateInvocation().Execute();
        }
        partial void ViewRFQPORegistrar_CanExecute(ref bool result);
        partial void ViewRFQPORegistrar_Execute();

        /// <summary>
        /// Calls the CreateProposals screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateProposals()
        {
            this.Details.Methods.CreateProposals.CreateInvocation().Execute();
        }
        partial void CreateProposals_CanExecute(ref bool result);
        partial void CreateProposals_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySet, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSet, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty;
                var initializeCommandEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.AddSupplier;
                var initializeMethodEntry = global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.AddSupplier;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                __RFQ_PItemDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeCreated,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeActivated,
                    global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.__RFQ_PItemDetail_InvokeSaveErrorEvent);
            private static void __RFQ_PItemDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.RFQ_PItemDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __RFQ_PItemDetail_InvokeSavingEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                bool handled = false;
                s.RFQ_PItemDetail_Saving(ref handled);
                return handled;
            }
            private static void __RFQ_PItemDetail_InvokeSavedEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Saved();
            }
            private static bool __RFQ_PItemDetail_InvokeClosingEvent(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                bool cancel = false;
                s.RFQ_PItemDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __RFQ_PItemDetail_InvokeCreated(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Created();
            }
            private static void __RFQ_PItemDetail_InvokeActivated(global::LightSwitchApplication.RFQ_PItemDetail s)
            {
                s.RFQ_PItemDetail_Activated();
            }
            private static bool __RFQ_PItemDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.RFQ_PItemDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable BidListsQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.BidList>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.BidLists).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Supplier");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_LinesQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.RFQ_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.RFQ_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "UOM1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Suppliers,
                    "Business_Class");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SubmittalsQuery()
            {
                if (this.Screen.RFQ_Lines.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Submittal> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Submittal>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_Lines.SelectedItem.Details.Properties.Submittals).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "SubmittalType1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProposalsQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.Proposals).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Award_SelectedsQuery()
            {
                if (this.Screen.RFQ_PItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Award_Selected> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Award_Selected>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_PItem.Details.Properties.Award_Selecteds).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilterBYRfqnumQuery(global::System.Nullable<int> PkgNumberID)
            {
                return this.Screen.DataWorkspace.ProcurementData.FilterBYRfqnum(PkgNumberID);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilteredByRFQQuery(global::System.Nullable<int> RFQFilter)
            {
                return this.Screen.DataWorkspace.ProcurementData.FilteredByRFQ(RFQFilter);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Proposal_LinesQuery()
            {
                if (this.Screen.Proposals.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Proposals.SelectedItem.Details.Properties.Proposal_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilerByProposalNumberQuery(global::System.Nullable<int> ProposalNum)
            {
                return this.Screen.DataWorkspace.ProcurementData.FilerByProposalNumber(ProposalNum);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable POQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.PO;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PO_LinesQuery()
            {
                if (this.Screen.PO.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.PO.SelectedItem.Details.Properties.PO_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AwardByrfqIDQuery(global::System.Nullable<int> rfqid)
            {
                return this.Screen.DataWorkspace.ProcurementData.AwardByrfqID(rfqid);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data _StaticProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_PItem;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data _RFQ_PItemID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Data _BidLists;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data _RFQ_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal>.Data _Submittals;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data _Proposals;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data _SelectedProposal;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data _Award_Selecteds;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data _ProjNum;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data _RFQNum;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data _FilterBYRfqnum;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data _FilteredByRFQ;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data _RFQFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data _Proposal_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data _FilerByProposalNumber;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO>.Data _PO;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data _PO_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data _AwardByrfqID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data _RFQID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RemoveSupplierCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Award_SelectedsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreatePOCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreateNewRFQLineCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RFQ_LinesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ProposalsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _showidCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ProposalsAddNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNew2Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _PO_LinesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _PO_LinesAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddRemoveAwardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ViewRFQPORegistrarCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreateProposalsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RemoveSupplierMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Award_SelectedsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreatePOMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreateNewRFQLineMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _RFQ_LinesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ProposalsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _showidMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ProposalsAddNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNew2Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _PO_LinesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _PO_LinesAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _AddRemoveAwardMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _ViewRFQPORegistrarMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data _CreateProposalsMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string> StaticProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.StaticProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_PItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int> RFQ_PItemID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_PItemID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList> BidLists
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.BidLists);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line> RFQ_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQ_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal> Submittals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Submittals);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal> Proposals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Proposals);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal> SelectedProposal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.SelectedProposal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected> Award_Selecteds
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Award_Selecteds);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string> ProjNum
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.ProjNum);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string> RFQNum
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQNum);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line> FilterBYRfqnum
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilterBYRfqnum);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal> FilteredByRFQ
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilteredByRFQ);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int> RFQFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line> Proposal_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.Proposal_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line> FilerByProposalNumber
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.FilerByProposalNumber);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO> PO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.PO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line> PO_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.PO_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected> AwardByrfqID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.AwardByrfqID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int> RFQID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties.RFQID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.RemoveSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Award_SelectedsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.Award_SelectedsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreatePO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.CreatePO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreateNewRFQLine
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.CreateNewRFQLine);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RFQ_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.RFQ_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ProposalsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.ProposalsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> showid
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.showid);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.Proposal_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ProposalsAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.ProposalsAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.Proposal_LinesAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.Proposal_LinesAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> PO_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.PO_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> PO_LinesAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.PO_LinesAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddRemoveAward
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.AddRemoveAward);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ViewRFQPORegistrar
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.ViewRFQPORegistrar);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreateProposals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties.CreateProposals);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.AddSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RemoveSupplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.RemoveSupplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Award_SelectedsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.Award_SelectedsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreatePO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.CreatePO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreateNewRFQLine
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.CreateNewRFQLine);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> RFQ_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.RFQ_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ProposalsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.ProposalsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> showid
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.showid);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.Proposal_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ProposalsAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.ProposalsAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.Proposal_LinesAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> Proposal_LinesAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.Proposal_LinesAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> PO_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.PO_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> PO_LinesAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.PO_LinesAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> AddRemoveAward
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.AddRemoveAward);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> ViewRFQPORegistrar
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.ViewRFQPORegistrar);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass> CreateProposals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties.CreateProposals);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry
                    StaticProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry(
                        "StaticProperty",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._StaticProperty_OnValueChanged);
                private static void _StaticProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._StaticProperty, sf);
                }
                private static void _StaticProperty_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaticProperty_Validate(r);
                }
                private static void _StaticProperty_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.StaticProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_PItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_PItem",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_OnValueChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItem_OnLoaded);
                private static void _RFQ_PItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PItem, sf);
                }
                private static void _RFQ_PItem_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_PItem_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_PItem_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _RFQ_PItem_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_PItem_Changed();
                }

                private static void _RFQ_PItem_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.RFQ_PItem_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry
                    RFQ_PItemID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry(
                        "RFQ_PItemID",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_PItemID_OnValueChanged);
                private static void _RFQ_PItemID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_PItemID, sf);
                }
                private static void _RFQ_PItemID_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_PItemID_Validate(r);
                }
                private static void _RFQ_PItemID_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_PItemID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Entry
                    BidLists = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Entry(
                        "BidLists",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._BidLists_OnLoaded);
                private static void _BidLists_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.BidList>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._BidLists, sf);
                }
                private static void _BidLists_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.BidLists_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _BidLists_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.BidListsQuery();
                }
                private static void _BidLists_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.BidLists_SelectionChanged();
                }
                private static void _BidLists_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.BidLists_Changed(e);
                }
                private static void _BidLists_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.BidLists_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry
                    RFQ_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry(
                        "RFQ_Lines",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQ_Lines_OnLoaded);
                private static void _RFQ_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_Lines, sf);
                }
                private static void _RFQ_Lines_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_Lines_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.RFQ_LinesQuery();
                }
                private static void _RFQ_Lines_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQ_Lines_SelectionChanged();
                }
                private static void _RFQ_Lines_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_Lines_Changed(e);
                }
                private static void _RFQ_Lines_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.RFQ_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal>.Entry
                    Submittals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal>.Entry(
                        "Submittals",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Submittals_OnLoaded);
                private static void _Submittals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Submittal>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Submittals, sf);
                }
                private static void _Submittals_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Submittals_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Submittals_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.SubmittalsQuery();
                }
                private static void _Submittals_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Submittals_SelectionChanged();
                }
                private static void _Submittals_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Submittals_Changed(e);
                }
                private static void _Submittals_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Submittals_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry
                    Proposals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry(
                        "Proposals",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposals_OnLoaded);
                private static void _Proposals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposals, sf);
                }
                private static void _Proposals_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Proposals_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Proposals_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.ProposalsQuery();
                }
                private static void _Proposals_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Proposals_SelectionChanged();
                }
                private static void _Proposals_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Proposals_Changed(e);
                }
                private static void _Proposals_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Proposals_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry
                    SelectedProposal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry(
                        "SelectedProposal",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._SelectedProposal_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._SelectedProposal_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._SelectedProposal_OnValueChanged);
                private static void _SelectedProposal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SelectedProposal, sf);
                }
                private static void _SelectedProposal_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SelectedProposal_Validate(r);
                }
                private static void _SelectedProposal_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.SelectedProposal_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry
                    Award_Selecteds = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry(
                        "Award_Selecteds",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Award_Selecteds_OnLoaded);
                private static void _Award_Selecteds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Award_Selecteds, sf);
                }
                private static void _Award_Selecteds_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Award_Selecteds_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Award_Selecteds_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.Award_SelectedsQuery();
                }
                private static void _Award_Selecteds_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Award_Selecteds_SelectionChanged();
                }
                private static void _Award_Selecteds_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Award_Selecteds_Changed(e);
                }
                private static void _Award_Selecteds_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Award_Selecteds_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry
                    ProjNum = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry(
                        "ProjNum",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._ProjNum_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._ProjNum_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._ProjNum_OnValueChanged);
                private static void _ProjNum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjNum, sf);
                }
                private static void _ProjNum_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjNum_Validate(r);
                }
                private static void _ProjNum_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.ProjNum_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry
                    RFQNum = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Entry(
                        "RFQNum",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQNum_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQNum_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQNum_OnValueChanged);
                private static void _RFQNum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQNum, sf);
                }
                private static void _RFQNum_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQNum_Validate(r);
                }
                private static void _RFQNum_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQNum_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry
                    FilterBYRfqnum = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry(
                        "FilterBYRfqnum",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_OnLoaded);
                private static void _FilterBYRfqnum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterBYRfqnum, sf);
                }
                private static void _FilterBYRfqnum_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterBYRfqnum_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilterBYRfqnum_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.FilterBYRfqnumQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _FilterBYRfqnum_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.FilterBYRfqnum_SelectionChanged();
                }
                private static void _FilterBYRfqnum_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilterBYRfqnum_Changed(e);
                }
                private static void _FilterBYRfqnum_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.FilterBYRfqnum_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry
                    FilteredByRFQ = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry(
                        "FilteredByRFQ",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilteredByRFQ_OnLoaded);
                private static void _FilteredByRFQ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._FilteredByRFQ, sf);
                }
                private static void _FilteredByRFQ_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilteredByRFQ_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilteredByRFQ_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.FilteredByRFQQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _FilteredByRFQ_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.FilteredByRFQ_SelectionChanged();
                }
                private static void _FilteredByRFQ_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilteredByRFQ_Changed(e);
                }
                private static void _FilteredByRFQ_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.FilteredByRFQ_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry
                    RFQFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry(
                        "RFQFilter",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQFilter_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQFilter_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQFilter_OnValueChanged);
                private static void _RFQFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQFilter, sf);
                }
                private static void _RFQFilter_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQFilter_Validate(r);
                }
                private static void _RFQFilter_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry
                    Proposal_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry(
                        "Proposal_Lines",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._Proposal_Lines_OnLoaded);
                private static void _Proposal_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_Lines, sf);
                }
                private static void _Proposal_Lines_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Proposal_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Proposal_Lines_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.Proposal_LinesQuery();
                }
                private static void _Proposal_Lines_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.Proposal_Lines_SelectionChanged();
                }
                private static void _Proposal_Lines_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Proposal_Lines_Changed(e);
                }
                private static void _Proposal_Lines_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.Proposal_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry
                    FilerByProposalNumber = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry(
                        "FilerByProposalNumber",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._FilerByProposalNumber_OnLoaded);
                private static void _FilerByProposalNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._FilerByProposalNumber, sf);
                }
                private static void _FilerByProposalNumber_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilerByProposalNumber_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilerByProposalNumber_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.FilerByProposalNumberQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _FilerByProposalNumber_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.FilerByProposalNumber_SelectionChanged();
                }
                private static void _FilerByProposalNumber_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilerByProposalNumber_Changed(e);
                }
                private static void _FilerByProposalNumber_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.FilerByProposalNumber_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    PO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "PO",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_OnLoaded);
                private static void _PO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO, sf);
                }
                private static void _PO_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.POQuery();
                }
                private static void _PO_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.PO_SelectionChanged();
                }
                private static void _PO_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Changed(e);
                }
                private static void _PO_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.PO_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry
                    PO_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry(
                        "PO_Lines",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._PO_Lines_OnLoaded);
                private static void _PO_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_Lines, sf);
                }
                private static void _PO_Lines_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_Lines_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.PO_LinesQuery();
                }
                private static void _PO_Lines_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.PO_Lines_SelectionChanged();
                }
                private static void _PO_Lines_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Lines_Changed(e);
                }
                private static void _PO_Lines_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.PO_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry
                    AwardByrfqID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry(
                        "AwardByrfqID",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_CreateQuery,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_SelectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_OnCollectionChanged,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._AwardByrfqID_OnLoaded);
                private static void _AwardByrfqID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AwardByrfqID, sf);
                }
                private static void _AwardByrfqID_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AwardByrfqID_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AwardByrfqID_CreateQuery(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object[] args)
                {
                    return d.AwardByrfqIDQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _AwardByrfqID_SelectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.AwardByrfqID_SelectionChanged();
                }
                private static void _AwardByrfqID_OnCollectionChanged(global::LightSwitchApplication.RFQ_PItemDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AwardByrfqID_Changed(e);
                }
                private static void _AwardByrfqID_OnLoaded(global::LightSwitchApplication.RFQ_PItemDetail s, bool succeeded)
                {
                    s.AwardByrfqID_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry
                    RFQID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Entry(
                        "RFQID",
                        false,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQID_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQID_Validate,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.PropertySetProperties._RFQID_OnValueChanged);
                private static void _RFQID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQID, sf);
                }
                private static void _RFQID_Validate(global::LightSwitchApplication.RFQ_PItemDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQID_Validate(r);
                }
                private static void _RFQID_OnValueChanged(global::LightSwitchApplication.RFQ_PItemDetail s)
                {
                    s.RFQID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddSupplier_CreateExecutableObject);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddSupplier_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.AddSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RemoveSupplier_CreateExecutableObject);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveSupplier_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.RemoveSupplier.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Award_SelectedsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Award_SelectedsAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Award_SelectedsAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Award_SelectedsAddAndEditNew_CreateExecutableObject);
                private static void _Award_SelectedsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Award_SelectedsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Award_SelectedsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.Award_SelectedsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreatePO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreatePO",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreatePO_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreatePO_CreateExecutableObject);
                private static void _CreatePO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatePOCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreatePO_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.CreatePO.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreateNewRFQLine = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreateNewRFQLine",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreateNewRFQLine_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreateNewRFQLine_CreateExecutableObject);
                private static void _CreateNewRFQLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewRFQLineCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateNewRFQLine_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.CreateNewRFQLine.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RFQ_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RFQ_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RFQ_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._RFQ_LinesAddAndEditNew_CreateExecutableObject);
                private static void _RFQ_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_LinesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RFQ_LinesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.RFQ_LinesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ProposalsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ProposalsAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ProposalsAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ProposalsAddAndEditNew_CreateExecutableObject);
                private static void _ProposalsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ProposalsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.ProposalsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    showid = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "showid",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._showid_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._showid_CreateExecutableObject);
                private static void _showid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._showidCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _showid_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.showid.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew_CreateExecutableObject);
                private static void _Proposal_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Proposal_LinesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.Proposal_LinesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ProposalsAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ProposalsAddNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ProposalsAddNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ProposalsAddNew_CreateExecutableObject);
                private static void _ProposalsAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalsAddNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ProposalsAddNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.ProposalsAddNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew1",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew1_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew1_CreateExecutableObject);
                private static void _Proposal_LinesAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Proposal_LinesAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.Proposal_LinesAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew2",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew2_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew2_CreateExecutableObject);
                private static void _Proposal_LinesAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNew2Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Proposal_LinesAddAndEditNew2_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.Proposal_LinesAddAndEditNew2.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    PO_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "PO_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._PO_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._PO_LinesAddAndEditNew_CreateExecutableObject);
                private static void _PO_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_LinesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _PO_LinesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.PO_LinesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    PO_LinesAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "PO_LinesAddAndEditNew1",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._PO_LinesAddAndEditNew1_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._PO_LinesAddAndEditNew1_CreateExecutableObject);
                private static void _PO_LinesAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_LinesAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _PO_LinesAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.PO_LinesAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddRemoveAward = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddRemoveAward",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddRemoveAward_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._AddRemoveAward_CreateExecutableObject);
                private static void _AddRemoveAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddRemoveAwardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddRemoveAward_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.AddRemoveAward.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ViewRFQPORegistrar = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ViewRFQPORegistrar",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ViewRFQPORegistrar_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._ViewRFQPORegistrar_CreateExecutableObject);
                private static void _ViewRFQPORegistrar_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewRFQPORegistrarCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewRFQPORegistrar_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.ViewRFQPORegistrar.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreateProposals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreateProposals",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreateProposals_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.CommandSetProperties._CreateProposals_CreateExecutableObject);
                private static void _CreateProposals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateProposalsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateProposals_CreateExecutableObject(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass)d).Methods.CreateProposals.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddSupplier_InvokeMethod);
                private static void _AddSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddSupplierMethod, sf);
                }
                private static global::System.Exception _AddSupplier_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddSupplier_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RemoveSupplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RemoveSupplier",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RemoveSupplier_InvokeMethod);
                private static void _RemoveSupplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSupplierMethod, sf);
                }
                private static global::System.Exception _RemoveSupplier_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveSupplier_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveSupplier_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveSupplier_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Award_SelectedsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Award_SelectedsAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Award_SelectedsAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Award_SelectedsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Award_SelectedsAddAndEditNew_InvokeMethod);
                private static void _Award_SelectedsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Award_SelectedsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Award_SelectedsAddAndEditNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Award_SelectedsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Award_SelectedsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Award_SelectedsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreatePO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreatePO",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreatePO_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreatePO_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreatePO_InvokeMethod);
                private static void _CreatePO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatePOMethod, sf);
                }
                private static global::System.Exception _CreatePO_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreatePO_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreatePO_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreatePO_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreateNewRFQLine = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreateNewRFQLine",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateNewRFQLine_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateNewRFQLine_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateNewRFQLine_InvokeMethod);
                private static void _CreateNewRFQLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewRFQLineMethod, sf);
                }
                private static global::System.Exception _CreateNewRFQLine_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateNewRFQLine_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateNewRFQLine_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateNewRFQLine_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    RFQ_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "RFQ_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RFQ_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RFQ_LinesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._RFQ_LinesAddAndEditNew_InvokeMethod);
                private static void _RFQ_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_LinesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _RFQ_LinesAddAndEditNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RFQ_LinesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RFQ_LinesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RFQ_LinesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ProposalsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ProposalsAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddAndEditNew_InvokeMethod);
                private static void _ProposalsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _ProposalsAddAndEditNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ProposalsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ProposalsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ProposalsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    showid = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "showid",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._showid_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._showid_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._showid_InvokeMethod);
                private static void _showid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._showidMethod, sf);
                }
                private static global::System.Exception _showid_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.showid_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _showid_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.showid_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_InvokeMethod);
                private static void _Proposal_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Proposal_LinesAddAndEditNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Proposal_LinesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Proposal_LinesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Proposal_LinesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ProposalsAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ProposalsAddNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ProposalsAddNew_InvokeMethod);
                private static void _ProposalsAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalsAddNewMethod, sf);
                }
                private static global::System.Exception _ProposalsAddNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ProposalsAddNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ProposalsAddNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ProposalsAddNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew1",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew1_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew1_InvokeMethod);
                private static void _Proposal_LinesAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _Proposal_LinesAddAndEditNew1_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Proposal_LinesAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Proposal_LinesAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Proposal_LinesAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew2",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew2_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew2_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew2_InvokeMethod);
                private static void _Proposal_LinesAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNew2Method, sf);
                }
                private static global::System.Exception _Proposal_LinesAddAndEditNew2_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Proposal_LinesAddAndEditNew2_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Proposal_LinesAddAndEditNew2_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Proposal_LinesAddAndEditNew2_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    PO_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "PO_LinesAddAndEditNew",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew_InvokeMethod);
                private static void _PO_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_LinesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _PO_LinesAddAndEditNew_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.PO_LinesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _PO_LinesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.PO_LinesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    PO_LinesAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "PO_LinesAddAndEditNew1",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew1_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._PO_LinesAddAndEditNew1_InvokeMethod);
                private static void _PO_LinesAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_LinesAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _PO_LinesAddAndEditNew1_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.PO_LinesAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _PO_LinesAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.PO_LinesAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    AddRemoveAward = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "AddRemoveAward",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddRemoveAward_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddRemoveAward_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._AddRemoveAward_InvokeMethod);
                private static void _AddRemoveAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddRemoveAwardMethod, sf);
                }
                private static global::System.Exception _AddRemoveAward_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddRemoveAward_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddRemoveAward_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddRemoveAward_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    ViewRFQPORegistrar = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "ViewRFQPORegistrar",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ViewRFQPORegistrar_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ViewRFQPORegistrar_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._ViewRFQPORegistrar_InvokeMethod);
                private static void _ViewRFQPORegistrar_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewRFQPORegistrarMethod, sf);
                }
                private static global::System.Exception _ViewRFQPORegistrar_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewRFQPORegistrar_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewRFQPORegistrar_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewRFQPORegistrar_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry
                    CreateProposals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Entry(
                        "CreateProposals",
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateProposals_Stub,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateProposals_CanInvoke,
                        global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass.MethodSetProperties._CreateProposals_InvokeMethod);
                private static void _CreateProposals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RFQ_PItemDetail, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass>.Data> c, global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateProposalsMethod, sf);
                }
                private static global::System.Exception _CreateProposals_CanInvoke(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateProposals_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateProposals_InvokeMethod(global::LightSwitchApplication.RFQ_PItemDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateProposals_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PreferenceTypeLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PreferenceTypeLookup() : base("LightSwitchApplication.Web:PreferenceTypeLookup")
        {
            global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PreferenceTypeLookup CreateInstance()
        {
            return new global::LightSwitchApplication.PreferenceTypeLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreferenceTypeLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Preferences_SelectionChanged();

        partial void Preferences_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferences_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Preferences visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Preference> Preferences
        {
            get
            {
                return global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preferences_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySet, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.CommandSet, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>.Entry
                __PreferenceTypeLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeCreated,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeActivated,
                    global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.__PreferenceTypeLookup_InvokeSaveErrorEvent);
            private static void __PreferenceTypeLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PreferenceTypeLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PreferenceTypeLookup_InvokeSavingEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                bool handled = false;
                s.PreferenceTypeLookup_Saving(ref handled);
                return handled;
            }
            private static void __PreferenceTypeLookup_InvokeSavedEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Saved();
            }
            private static bool __PreferenceTypeLookup_InvokeClosingEvent(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                bool cancel = false;
                s.PreferenceTypeLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __PreferenceTypeLookup_InvokeCreated(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Created();
            }
            private static void __PreferenceTypeLookup_InvokeActivated(global::LightSwitchApplication.PreferenceTypeLookup s)
            {
                s.PreferenceTypeLookup_Activated();
            }
            private static bool __PreferenceTypeLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.PreferenceTypeLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PreferencesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Preferences;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Data _Preferences;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference> Preferences
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>)base.GetItem(global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties.Preferences);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Entry
                    Preferences = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Entry(
                        "Preferences",
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_Stub,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_Validate,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_CreateQuery,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_SelectionChanged,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_OnCollectionChanged,
                        global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass.PropertySetProperties._Preferences_OnLoaded);
                private static void _Preferences_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PreferenceTypeLookup, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass, global::LightSwitchApplication.Preference>.Data> c, global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Preferences, sf);
                }
                private static void _Preferences_Validate(global::LightSwitchApplication.PreferenceTypeLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Preferences_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Preferences_CreateQuery(global::LightSwitchApplication.PreferenceTypeLookup.DetailsClass d, object[] args)
                {
                    return d.PreferencesQuery();
                }
                private static void _Preferences_SelectionChanged(global::LightSwitchApplication.PreferenceTypeLookup s)
                {
                    s.Preferences_SelectionChanged();
                }
                private static void _Preferences_OnCollectionChanged(global::LightSwitchApplication.PreferenceTypeLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Preferences_Changed(e);
                }
                private static void _Preferences_OnLoaded(global::LightSwitchApplication.PreferenceTypeLookup s, bool succeeded)
                {
                    s.Preferences_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddSupplierContact
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddSupplierContact() : base("LightSwitchApplication.Web:AddSupplierContact")
        {
            global::LightSwitchApplication.AddSupplierContact.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddSupplierContact CreateInstance()
        {
            return new global::LightSwitchApplication.AddSupplierContact(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddSupplierContact_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Supplier_Contacts_SelectionChanged();

        partial void Supplier_Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Supplier_Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return global::LightSwitchApplication.AddSupplierContact.DetailsClass.GetValue(this, global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySet, global::LightSwitchApplication.AddSupplierContact.DetailsClass.CommandSet, global::LightSwitchApplication.AddSupplierContact.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>.Entry
                __AddSupplierContactEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSavingEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSavedEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeClosingEvent,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeCreated,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeActivated,
                    global::LightSwitchApplication.AddSupplierContact.DetailsClass.__AddSupplierContact_InvokeSaveErrorEvent);
            private static void __AddSupplierContact_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddSupplierContact s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddSupplierContact_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddSupplierContact_InvokeSavingEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                bool handled = false;
                s.AddSupplierContact_Saving(ref handled);
                return handled;
            }
            private static void __AddSupplierContact_InvokeSavedEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Saved();
            }
            private static bool __AddSupplierContact_InvokeClosingEvent(global::LightSwitchApplication.AddSupplierContact s)
            {
                bool cancel = false;
                s.AddSupplierContact_Closing(ref cancel);
                return cancel;
            }
            private static void __AddSupplierContact_InvokeCreated(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Created();
            }
            private static void __AddSupplierContact_InvokeActivated(global::LightSwitchApplication.AddSupplierContact s)
            {
                s.AddSupplierContact_Activated();
            }
            private static bool __AddSupplierContact_InvokeSaveErrorEvent(global::LightSwitchApplication.AddSupplierContact s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddSupplierContact_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddSupplierContact.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_ContactsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Supplier_Contacts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data _Supplier_Contacts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>)base.GetItem(global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties.Supplier_Contacts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry
                    Supplier_Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry(
                        "Supplier_Contacts",
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_Stub,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_Validate,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_CreateQuery,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_SelectionChanged,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.AddSupplierContact.DetailsClass.PropertySetProperties._Supplier_Contacts_OnLoaded);
                private static void _Supplier_Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddSupplierContact, global::LightSwitchApplication.AddSupplierContact.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data> c, global::LightSwitchApplication.AddSupplierContact.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Contacts, sf);
                }
                private static void _Supplier_Contacts_Validate(global::LightSwitchApplication.AddSupplierContact s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Contacts_CreateQuery(global::LightSwitchApplication.AddSupplierContact.DetailsClass d, object[] args)
                {
                    return d.Supplier_ContactsQuery();
                }
                private static void _Supplier_Contacts_SelectionChanged(global::LightSwitchApplication.AddSupplierContact s)
                {
                    s.Supplier_Contacts_SelectionChanged();
                }
                private static void _Supplier_Contacts_OnCollectionChanged(global::LightSwitchApplication.AddSupplierContact s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Contacts_Changed(e);
                }
                private static void _Supplier_Contacts_OnLoaded(global::LightSwitchApplication.AddSupplierContact s, bool succeeded)
                {
                    s.Supplier_Contacts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SuppliersListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SuppliersListDetail() : base("LightSwitchApplication.Web:SuppliersListDetail")
        {
            global::LightSwitchApplication.SuppliersListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SuppliersListDetail CreateInstance()
        {
            return new global::LightSwitchApplication.SuppliersListDetail(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SuppliersListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Suppliers_SelectionChanged();

        partial void Suppliers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Loaded(bool succeeded);

        partial void Client_Approveds_SelectionChanged();

        partial void Client_Approveds_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Loaded(bool succeeded);

        partial void Safety_Records_SelectionChanged();

        partial void Safety_Records_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Loaded(bool succeeded);

        partial void Supplier_Specialties_SelectionChanged();

        partial void Supplier_Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Loaded(bool succeeded);

        partial void SupplierManufactures_SelectionChanged();

        partial void SupplierManufactures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Loaded(bool succeeded);

        partial void Supplier_Contacts_SelectionChanged();

        partial void Supplier_Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Loaded(bool succeeded);

        partial void Manufacturers_SelectionChanged();

        partial void Manufacturers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Loaded(bool succeeded);

        partial void SupplierManufactures1_SelectionChanged();

        partial void SupplierManufactures1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Suppliers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier> Suppliers
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Client_Approveds visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client_Approved> Client_Approveds
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Client_Approveds);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Safety_Records visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Record> Safety_Records
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Safety_Records);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Manufacturers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Manufacturer> Manufacturers
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Manufacturers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures1
        {
            get
            {
                return global::LightSwitchApplication.SuppliersListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the SupplierManufacturesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SupplierManufacturesAddAndEditNew()
        {
            this.Details.Methods.SupplierManufacturesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void SupplierManufacturesAddAndEditNew_CanExecute(ref bool result);
        partial void SupplierManufacturesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the AddManufacturer screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddManufacturer()
        {
            this.Details.Methods.AddManufacturer.CreateInvocation().Execute();
        }
        partial void AddManufacturer_CanExecute(ref bool result);
        partial void AddManufacturer_Execute();

        /// <summary>
        /// Calls the RemoveManufacturer screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveManufacturer()
        {
            this.Details.Methods.RemoveManufacturer.CreateInvocation().Execute();
        }
        partial void RemoveManufacturer_CanExecute(ref bool result);
        partial void RemoveManufacturer_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers;
                var initializeCommandEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.SupplierManufacturesAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.SupplierManufacturesAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                __SuppliersListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeCreated,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeActivated,
                    global::LightSwitchApplication.SuppliersListDetail.DetailsClass.__SuppliersListDetail_InvokeSaveErrorEvent);
            private static void __SuppliersListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SuppliersListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SuppliersListDetail_InvokeSavingEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                bool handled = false;
                s.SuppliersListDetail_Saving(ref handled);
                return handled;
            }
            private static void __SuppliersListDetail_InvokeSavedEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Saved();
            }
            private static bool __SuppliersListDetail_InvokeClosingEvent(global::LightSwitchApplication.SuppliersListDetail s)
            {
                bool cancel = false;
                s.SuppliersListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __SuppliersListDetail_InvokeCreated(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Created();
            }
            private static void __SuppliersListDetail_InvokeActivated(global::LightSwitchApplication.SuppliersListDetail s)
            {
                s.SuppliersListDetail_Activated();
            }
            private static bool __SuppliersListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.SuppliersListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.SuppliersListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SuppliersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Suppliers,
                    "Business_Class");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Client_ApprovedsQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Client_Approveds).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Client1"),
                    "Preference1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_RecordsQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Safety_Records).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Safety_Status");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_SpecialtiesQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.Supplier_Specialties).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufacturesQuery()
            {
                if (this.Screen.Suppliers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Suppliers.SelectedItem.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Manufacturer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_ContactsQuery()
            {
                if (this.Screen.Supplier_Specialties.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier_Specialties.SelectedItem.Details.Properties.Supplier_Contacts).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ManufacturersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Manufacturers,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufactures1Query()
            {
                if (this.Screen.Manufacturers.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Manufacturers.SelectedItem.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Suppliers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data _Client_Approveds;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data _Safety_Records;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data _Supplier_Specialties;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data _Supplier_Contacts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _SupplierManufacturesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _AddManufacturerCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _RemoveManufacturerCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _SupplierManufacturesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _AddManufacturerMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data _RemoveManufacturerMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier> Suppliers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Suppliers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved> Client_Approveds
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Client_Approveds);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record> Safety_Records
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Safety_Records);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.Manufacturers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties.SupplierManufactures1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> SupplierManufacturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.SupplierManufacturesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> AddManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.AddManufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> RemoveManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties.RemoveManufacturer);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> SupplierManufacturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.SupplierManufacturesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> AddManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.AddManufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass> RemoveManufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties.RemoveManufacturer);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Suppliers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Suppliers",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Suppliers_OnLoaded);
                private static void _Suppliers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Suppliers, sf);
                }
                private static void _Suppliers_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Suppliers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Suppliers_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SuppliersQuery();
                }
                private static void _Suppliers_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Suppliers_SelectionChanged();
                }
                private static void _Suppliers_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Suppliers_Changed(e);
                }
                private static void _Suppliers_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Suppliers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry
                    Client_Approveds = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry(
                        "Client_Approveds",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnLoaded);
                private static void _Client_Approveds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Client_Approveds, sf);
                }
                private static void _Client_Approveds_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Client_Approveds_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Client_Approveds_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Client_ApprovedsQuery();
                }
                private static void _Client_Approveds_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Client_Approveds_SelectionChanged();
                }
                private static void _Client_Approveds_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Client_Approveds_Changed(e);
                }
                private static void _Client_Approveds_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Client_Approveds_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry
                    Safety_Records = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry(
                        "Safety_Records",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Safety_Records_OnLoaded);
                private static void _Safety_Records_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Records, sf);
                }
                private static void _Safety_Records_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Records_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Records_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Safety_RecordsQuery();
                }
                private static void _Safety_Records_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Safety_Records_SelectionChanged();
                }
                private static void _Safety_Records_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Records_Changed(e);
                }
                private static void _Safety_Records_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Safety_Records_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry
                    Supplier_Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry(
                        "Supplier_Specialties",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnLoaded);
                private static void _Supplier_Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Specialties, sf);
                }
                private static void _Supplier_Specialties_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Specialties_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_SpecialtiesQuery();
                }
                private static void _Supplier_Specialties_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Supplier_Specialties_SelectionChanged();
                }
                private static void _Supplier_Specialties_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Specialties_Changed(e);
                }
                private static void _Supplier_Specialties_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Supplier_Specialties_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnLoaded);
                private static void _SupplierManufactures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures, sf);
                }
                private static void _SupplierManufactures_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufacturesQuery();
                }
                private static void _SupplierManufactures_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.SupplierManufactures_SelectionChanged();
                }
                private static void _SupplierManufactures_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures_Changed(e);
                }
                private static void _SupplierManufactures_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.SupplierManufactures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry
                    Supplier_Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry(
                        "Supplier_Contacts",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnLoaded);
                private static void _Supplier_Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Contacts, sf);
                }
                private static void _Supplier_Contacts_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Contacts_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_ContactsQuery();
                }
                private static void _Supplier_Contacts_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Supplier_Contacts_SelectionChanged();
                }
                private static void _Supplier_Contacts_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Contacts_Changed(e);
                }
                private static void _Supplier_Contacts_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Supplier_Contacts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturers",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._Manufacturers_OnLoaded);
                private static void _Manufacturers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturers, sf);
                }
                private static void _Manufacturers_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturers_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.ManufacturersQuery();
                }
                private static void _Manufacturers_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.Manufacturers_SelectionChanged();
                }
                private static void _Manufacturers_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Manufacturers_Changed(e);
                }
                private static void _Manufacturers_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.Manufacturers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures1",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_Validate,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_CreateQuery,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_SelectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_OnCollectionChanged,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.PropertySetProperties._SupplierManufactures1_OnLoaded);
                private static void _SupplierManufactures1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures1, sf);
                }
                private static void _SupplierManufactures1_Validate(global::LightSwitchApplication.SuppliersListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures1_CreateQuery(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufactures1Query();
                }
                private static void _SupplierManufactures1_SelectionChanged(global::LightSwitchApplication.SuppliersListDetail s)
                {
                    s.SupplierManufactures1_SelectionChanged();
                }
                private static void _SupplierManufactures1_OnCollectionChanged(global::LightSwitchApplication.SuppliersListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures1_Changed(e);
                }
                private static void _SupplierManufactures1_OnLoaded(global::LightSwitchApplication.SuppliersListDetail s, bool succeeded)
                {
                    s.SupplierManufactures1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    SupplierManufacturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "SupplierManufacturesAddAndEditNew",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._SupplierManufacturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._SupplierManufacturesAddAndEditNew_CreateExecutableObject);
                private static void _SupplierManufacturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufacturesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SupplierManufacturesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.SupplierManufacturesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    AddManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "AddManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._AddManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._AddManufacturer_CreateExecutableObject);
                private static void _AddManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddManufacturerCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddManufacturer_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.AddManufacturer.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    RemoveManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "RemoveManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._RemoveManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.CommandSetProperties._RemoveManufacturer_CreateExecutableObject);
                private static void _RemoveManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveManufacturerCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveManufacturer_CreateExecutableObject(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.SuppliersListDetail.DetailsClass)d).Methods.RemoveManufacturer.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    SupplierManufacturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "SupplierManufacturesAddAndEditNew",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._SupplierManufacturesAddAndEditNew_InvokeMethod);
                private static void _SupplierManufacturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufacturesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _SupplierManufacturesAddAndEditNew_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SupplierManufacturesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SupplierManufacturesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SupplierManufacturesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    AddManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "AddManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._AddManufacturer_InvokeMethod);
                private static void _AddManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddManufacturerMethod, sf);
                }
                private static global::System.Exception _AddManufacturer_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddManufacturer_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddManufacturer_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddManufacturer_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry
                    RemoveManufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Entry(
                        "RemoveManufacturer",
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_Stub,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_CanInvoke,
                        global::LightSwitchApplication.SuppliersListDetail.DetailsClass.MethodSetProperties._RemoveManufacturer_InvokeMethod);
                private static void _RemoveManufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SuppliersListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.SuppliersListDetail, global::LightSwitchApplication.SuppliersListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveManufacturerMethod, sf);
                }
                private static global::System.Exception _RemoveManufacturer_CanInvoke(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveManufacturer_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveManufacturer_InvokeMethod(global::LightSwitchApplication.SuppliersListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveManufacturer_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableSpecialtiesGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableSpecialtiesGrid() : base("LightSwitchApplication.Web:EditableSpecialtiesGrid")
        {
            global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableSpecialtiesGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableSpecialtiesGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSpecialtiesGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Specialties_SelectionChanged();

        partial void Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialties_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Specialty> Specialties
        {
            get
            {
                return global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>.Entry
                __EditableSpecialtiesGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.__EditableSpecialtiesGrid_InvokeSaveErrorEvent);
            private static void __EditableSpecialtiesGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableSpecialtiesGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableSpecialtiesGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                bool handled = false;
                s.EditableSpecialtiesGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableSpecialtiesGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Saved();
            }
            private static bool __EditableSpecialtiesGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                bool cancel = false;
                s.EditableSpecialtiesGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableSpecialtiesGrid_InvokeCreated(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Created();
            }
            private static void __EditableSpecialtiesGrid_InvokeActivated(global::LightSwitchApplication.EditableSpecialtiesGrid s)
            {
                s.EditableSpecialtiesGrid_Activated();
            }
            private static bool __EditableSpecialtiesGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableSpecialtiesGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SpecialtiesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Specialties;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Data _Specialties;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty> Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>)base.GetItem(global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties.Specialties);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Entry
                    Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Entry(
                        "Specialties",
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_Stub,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_Validate,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_CreateQuery,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_SelectionChanged,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass.PropertySetProperties._Specialties_OnLoaded);
                private static void _Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSpecialtiesGrid, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass, global::LightSwitchApplication.Specialty>.Data> c, global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Specialties, sf);
                }
                private static void _Specialties_Validate(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Specialties_CreateQuery(global::LightSwitchApplication.EditableSpecialtiesGrid.DetailsClass d, object[] args)
                {
                    return d.SpecialtiesQuery();
                }
                private static void _Specialties_SelectionChanged(global::LightSwitchApplication.EditableSpecialtiesGrid s)
                {
                    s.Specialties_SelectionChanged();
                }
                private static void _Specialties_OnCollectionChanged(global::LightSwitchApplication.EditableSpecialtiesGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Specialties_Changed(e);
                }
                private static void _Specialties_OnLoaded(global::LightSwitchApplication.EditableSpecialtiesGrid s, bool succeeded)
                {
                    s.Specialties_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableManufacturersGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableManufacturersGrid() : base("LightSwitchApplication.Web:EditableManufacturersGrid")
        {
            global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableManufacturersGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableManufacturersGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableManufacturersGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Manufacturers_SelectionChanged();

        partial void Manufacturers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Manufacturers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Manufacturer> Manufacturers
        {
            get
            {
                return global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>.Entry
                __EditableManufacturersGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.__EditableManufacturersGrid_InvokeSaveErrorEvent);
            private static void __EditableManufacturersGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableManufacturersGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableManufacturersGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                bool handled = false;
                s.EditableManufacturersGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableManufacturersGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Saved();
            }
            private static bool __EditableManufacturersGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                bool cancel = false;
                s.EditableManufacturersGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableManufacturersGrid_InvokeCreated(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Created();
            }
            private static void __EditableManufacturersGrid_InvokeActivated(global::LightSwitchApplication.EditableManufacturersGrid s)
            {
                s.EditableManufacturersGrid_Activated();
            }
            private static bool __EditableManufacturersGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableManufacturersGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ManufacturersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.Manufacturers,
                    "Specialty1");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturers;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties.Manufacturers);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturers",
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_Stub,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_Validate,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_CreateQuery,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_SelectionChanged,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_OnCollectionChanged,
                        global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass.PropertySetProperties._Manufacturers_OnLoaded);
                private static void _Manufacturers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableManufacturersGrid, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturers, sf);
                }
                private static void _Manufacturers_Validate(global::LightSwitchApplication.EditableManufacturersGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturers_CreateQuery(global::LightSwitchApplication.EditableManufacturersGrid.DetailsClass d, object[] args)
                {
                    return d.ManufacturersQuery();
                }
                private static void _Manufacturers_SelectionChanged(global::LightSwitchApplication.EditableManufacturersGrid s)
                {
                    s.Manufacturers_SelectionChanged();
                }
                private static void _Manufacturers_OnCollectionChanged(global::LightSwitchApplication.EditableManufacturersGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Manufacturers_Changed(e);
                }
                private static void _Manufacturers_OnLoaded(global::LightSwitchApplication.EditableManufacturersGrid s, bool succeeded)
                {
                    s.Manufacturers_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EditableSafety_StatusGrid
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EditableSafety_StatusGrid() : base("LightSwitchApplication.Web:EditableSafety_StatusGrid")
        {
            global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EditableSafety_StatusGrid CreateInstance()
        {
            return new global::LightSwitchApplication.EditableSafety_StatusGrid(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EditableSafety_StatusGrid_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Safety_Status_SelectionChanged();

        partial void Safety_Status_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Status_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Safety_Status visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Status> Safety_Status
        {
            get
            {
                return global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.GetValue(this, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Status_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySet, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.CommandSet, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>.Entry
                __EditableSafety_StatusGridEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>.Entry(
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSavingEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSavedEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeClosingEvent,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeCreated,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeActivated,
                    global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.__EditableSafety_StatusGrid_InvokeSaveErrorEvent);
            private static void __EditableSafety_StatusGrid_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EditableSafety_StatusGrid_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EditableSafety_StatusGrid_InvokeSavingEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                bool handled = false;
                s.EditableSafety_StatusGrid_Saving(ref handled);
                return handled;
            }
            private static void __EditableSafety_StatusGrid_InvokeSavedEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Saved();
            }
            private static bool __EditableSafety_StatusGrid_InvokeClosingEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                bool cancel = false;
                s.EditableSafety_StatusGrid_Closing(ref cancel);
                return cancel;
            }
            private static void __EditableSafety_StatusGrid_InvokeCreated(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Created();
            }
            private static void __EditableSafety_StatusGrid_InvokeActivated(global::LightSwitchApplication.EditableSafety_StatusGrid s)
            {
                s.EditableSafety_StatusGrid_Activated();
            }
            private static bool __EditableSafety_StatusGrid_InvokeSaveErrorEvent(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Exception ex)
            {
                bool handled = false;
                s.EditableSafety_StatusGrid_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_StatusQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Safety_Status;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Data _Safety_Status;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status> Safety_Status
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>)base.GetItem(global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties.Safety_Status);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Entry
                    Safety_Status = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Entry(
                        "Safety_Status",
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_Stub,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_Validate,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_CreateQuery,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_SelectionChanged,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_OnCollectionChanged,
                        global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass.PropertySetProperties._Safety_Status_OnLoaded);
                private static void _Safety_Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EditableSafety_StatusGrid, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass, global::LightSwitchApplication.Safety_Status>.Data> c, global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Status, sf);
                }
                private static void _Safety_Status_Validate(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Status_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Status_CreateQuery(global::LightSwitchApplication.EditableSafety_StatusGrid.DetailsClass d, object[] args)
                {
                    return d.Safety_StatusQuery();
                }
                private static void _Safety_Status_SelectionChanged(global::LightSwitchApplication.EditableSafety_StatusGrid s)
                {
                    s.Safety_Status_SelectionChanged();
                }
                private static void _Safety_Status_OnCollectionChanged(global::LightSwitchApplication.EditableSafety_StatusGrid s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Status_Changed(e);
                }
                private static void _Safety_Status_OnLoaded(global::LightSwitchApplication.EditableSafety_StatusGrid s, bool succeeded)
                {
                    s.Safety_Status_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManufacturerDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManufacturerDetail(int ManufacturerID) : base("LightSwitchApplication.Web:ManufacturerDetail")
        {
                this.ManufacturerID = ManufacturerID;
            global::LightSwitchApplication.ManufacturerDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManufacturerDetail CreateInstance(int ManufacturerID)
        {
            return new global::LightSwitchApplication.ManufacturerDetail(
                        ManufacturerID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Manufacturer_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Loaded(bool succeeded);

        partial void ManufacturerID_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Manufacturer Manufacturer
        {
            get
            {
                return global::LightSwitchApplication.ManufacturerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Manufacturer_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ManufacturerID
        {
            get 
            {
                return global::LightSwitchApplication.ManufacturerDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID);
            }
            set
            {
                global::LightSwitchApplication.ManufacturerDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManufacturerID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySet, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.CommandSet, global::LightSwitchApplication.ManufacturerDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>.Entry
                __ManufacturerDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeCreated,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeActivated,
                    global::LightSwitchApplication.ManufacturerDetail.DetailsClass.__ManufacturerDetail_InvokeSaveErrorEvent);
            private static void __ManufacturerDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManufacturerDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManufacturerDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManufacturerDetail_InvokeSavingEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                bool handled = false;
                s.ManufacturerDetail_Saving(ref handled);
                return handled;
            }
            private static void __ManufacturerDetail_InvokeSavedEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Saved();
            }
            private static bool __ManufacturerDetail_InvokeClosingEvent(global::LightSwitchApplication.ManufacturerDetail s)
            {
                bool cancel = false;
                s.ManufacturerDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __ManufacturerDetail_InvokeCreated(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Created();
            }
            private static void __ManufacturerDetail_InvokeActivated(global::LightSwitchApplication.ManufacturerDetail s)
            {
                s.ManufacturerDetail_Activated();
            }
            private static bool __ManufacturerDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.ManufacturerDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManufacturerDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManufacturerDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data _Manufacturer;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Data _ManufacturerID;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer> Manufacturer
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>)base.GetItem(global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.Manufacturer);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int> ManufacturerID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties.ManufacturerID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry
                    Manufacturer = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Entry(
                        "Manufacturer",
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_Stub,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_Validate,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_CreateQuery,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_OnValueChanged,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._Manufacturer_OnLoaded);
                private static void _Manufacturer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::LightSwitchApplication.Manufacturer>.Data> c, global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Manufacturer, sf);
                }
                private static void _Manufacturer_Validate(global::LightSwitchApplication.ManufacturerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Manufacturer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Manufacturer_CreateQuery(global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Manufacturer_OnValueChanged(global::LightSwitchApplication.ManufacturerDetail s)
                {
                    s.Manufacturer_Changed();
                }

                private static void _Manufacturer_OnLoaded(global::LightSwitchApplication.ManufacturerDetail s, bool succeeded)
                {
                    s.Manufacturer_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Entry
                    ManufacturerID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Entry(
                        "ManufacturerID",
                        false,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_Stub,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_Validate,
                        global::LightSwitchApplication.ManufacturerDetail.DetailsClass.PropertySetProperties._ManufacturerID_OnValueChanged);
                private static void _ManufacturerID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManufacturerDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManufacturerDetail, global::LightSwitchApplication.ManufacturerDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ManufacturerDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ManufacturerID, sf);
                }
                private static void _ManufacturerID_Validate(global::LightSwitchApplication.ManufacturerDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ManufacturerID_Validate(r);
                }
                private static void _ManufacturerID_OnValueChanged(global::LightSwitchApplication.ManufacturerDetail s)
                {
                    s.ManufacturerID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SupplierDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SupplierDetail(int Supplierid) : base("LightSwitchApplication.Web:SupplierDetail")
        {
                this.Supplierid = Supplierid;
            global::LightSwitchApplication.SupplierDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SupplierDetail CreateInstance(int Supplierid)
        {
            return new global::LightSwitchApplication.SupplierDetail(
                        Supplierid
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Supplier_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Loaded(bool succeeded);

        partial void Supplierid_Changed();

        partial void Client_Approveds_SelectionChanged();

        partial void Client_Approveds_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Loaded(bool succeeded);

        partial void Safety_Records_SelectionChanged();

        partial void Safety_Records_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Loaded(bool succeeded);

        partial void Supplier_Specialties_SelectionChanged();

        partial void Supplier_Specialties_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Loaded(bool succeeded);

        partial void SupplierManufactures_SelectionChanged();

        partial void SupplierManufactures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Loaded(bool succeeded);

        partial void Supplier_Contacts_SelectionChanged();

        partial void Supplier_Contacts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Supplier Supplier
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Supplierid
        {
            get 
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid);
            }
            set
            {
                global::LightSwitchApplication.SupplierDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplierid_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Client_Approveds visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client_Approved> Client_Approveds
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Client_Approveds);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approveds_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Safety_Records visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Safety_Record> Safety_Records
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Safety_Records);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Safety_Records_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Specialties visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Specialties_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SupplierManufactures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierManufactures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Supplier_Contacts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
        {
            get
            {
                return global::LightSwitchApplication.SupplierDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Contacts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySet, global::LightSwitchApplication.SupplierDetail.DetailsClass.CommandSet, global::LightSwitchApplication.SupplierDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>.Entry
                __SupplierDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeCreated,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeActivated,
                    global::LightSwitchApplication.SupplierDetail.DetailsClass.__SupplierDetail_InvokeSaveErrorEvent);
            private static void __SupplierDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SupplierDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SupplierDetail_InvokeSavingEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                bool handled = false;
                s.SupplierDetail_Saving(ref handled);
                return handled;
            }
            private static void __SupplierDetail_InvokeSavedEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Saved();
            }
            private static bool __SupplierDetail_InvokeClosingEvent(global::LightSwitchApplication.SupplierDetail s)
            {
                bool cancel = false;
                s.SupplierDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __SupplierDetail_InvokeCreated(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Created();
            }
            private static void __SupplierDetail_InvokeActivated(global::LightSwitchApplication.SupplierDetail s)
            {
                s.SupplierDetail_Activated();
            }
            private static bool __SupplierDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.SupplierDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.SupplierDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SupplierDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Client_ApprovedsQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Client_Approved>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Client_Approveds).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Client1"),
                    "Preference1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Safety_RecordsQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Safety_Record>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Safety_Records).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Safety_Status");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_SpecialtiesQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Specialty>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.Supplier_Specialties).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SupplierManufacturesQuery()
            {
                if (this.Screen.Supplier == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.SupplierManufacture>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier.Details.Properties.SupplierManufactures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Manufacturer"),
                    "Manufacturer.Specialty1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Supplier_ContactsQuery()
            {
                if (this.Screen.Supplier_Specialties.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Supplier_Contact>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Supplier_Specialties.SelectedItem.Details.Properties.Supplier_Contacts).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Supplier;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Data _Supplierid;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data _Client_Approveds;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data _Safety_Records;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data _Supplier_Specialties;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data _SupplierManufactures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data _Supplier_Contacts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier> Supplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int> Supplierid
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplierid);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved> Client_Approveds
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Client_Approveds);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record> Safety_Records
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Safety_Records);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty> Supplier_Specialties
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Specialties);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture> SupplierManufactures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.SupplierManufactures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact> Supplier_Contacts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>)base.GetItem(global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties.Supplier_Contacts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Supplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Supplier",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_OnValueChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_OnLoaded);
                private static void _Supplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier, sf);
                }
                private static void _Supplier_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _Supplier_OnValueChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplier_Changed();
                }

                private static void _Supplier_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Supplier_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Entry
                    Supplierid = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Entry(
                        "Supplierid",
                        false,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplierid_OnValueChanged);
                private static void _Supplierid_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplierid, sf);
                }
                private static void _Supplierid_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplierid_Validate(r);
                }
                private static void _Supplierid_OnValueChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplierid_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry
                    Client_Approveds = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Entry(
                        "Client_Approveds",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Client_Approveds_OnLoaded);
                private static void _Client_Approveds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Client_Approved>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Client_Approveds, sf);
                }
                private static void _Client_Approveds_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Client_Approveds_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Client_Approveds_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Client_ApprovedsQuery();
                }
                private static void _Client_Approveds_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Client_Approveds_SelectionChanged();
                }
                private static void _Client_Approveds_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Client_Approveds_Changed(e);
                }
                private static void _Client_Approveds_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Client_Approveds_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry
                    Safety_Records = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Entry(
                        "Safety_Records",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Safety_Records_OnLoaded);
                private static void _Safety_Records_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Safety_Record>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Safety_Records, sf);
                }
                private static void _Safety_Records_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Safety_Records_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Safety_Records_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Safety_RecordsQuery();
                }
                private static void _Safety_Records_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Safety_Records_SelectionChanged();
                }
                private static void _Safety_Records_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Safety_Records_Changed(e);
                }
                private static void _Safety_Records_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Safety_Records_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry
                    Supplier_Specialties = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Entry(
                        "Supplier_Specialties",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Specialties_OnLoaded);
                private static void _Supplier_Specialties_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Specialty>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Specialties, sf);
                }
                private static void _Supplier_Specialties_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Specialties_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Specialties_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_SpecialtiesQuery();
                }
                private static void _Supplier_Specialties_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplier_Specialties_SelectionChanged();
                }
                private static void _Supplier_Specialties_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Specialties_Changed(e);
                }
                private static void _Supplier_Specialties_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Supplier_Specialties_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry
                    SupplierManufactures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Entry(
                        "SupplierManufactures",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._SupplierManufactures_OnLoaded);
                private static void _SupplierManufactures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.SupplierManufacture>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierManufactures, sf);
                }
                private static void _SupplierManufactures_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupplierManufactures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SupplierManufactures_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.SupplierManufacturesQuery();
                }
                private static void _SupplierManufactures_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.SupplierManufactures_SelectionChanged();
                }
                private static void _SupplierManufactures_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SupplierManufactures_Changed(e);
                }
                private static void _SupplierManufactures_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.SupplierManufactures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry
                    Supplier_Contacts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Entry(
                        "Supplier_Contacts",
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Stub,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_Validate,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_CreateQuery,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_SelectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnCollectionChanged,
                        global::LightSwitchApplication.SupplierDetail.DetailsClass.PropertySetProperties._Supplier_Contacts_OnLoaded);
                private static void _Supplier_Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SupplierDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SupplierDetail, global::LightSwitchApplication.SupplierDetail.DetailsClass, global::LightSwitchApplication.Supplier_Contact>.Data> c, global::LightSwitchApplication.SupplierDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier_Contacts, sf);
                }
                private static void _Supplier_Contacts_Validate(global::LightSwitchApplication.SupplierDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Contacts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Supplier_Contacts_CreateQuery(global::LightSwitchApplication.SupplierDetail.DetailsClass d, object[] args)
                {
                    return d.Supplier_ContactsQuery();
                }
                private static void _Supplier_Contacts_SelectionChanged(global::LightSwitchApplication.SupplierDetail s)
                {
                    s.Supplier_Contacts_SelectionChanged();
                }
                private static void _Supplier_Contacts_OnCollectionChanged(global::LightSwitchApplication.SupplierDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Supplier_Contacts_Changed(e);
                }
                private static void _Supplier_Contacts_OnLoaded(global::LightSwitchApplication.SupplierDetail s, bool succeeded)
                {
                    s.Supplier_Contacts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class RegionLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private RegionLookup() : base("LightSwitchApplication.Web:RegionLookup")
        {
            global::LightSwitchApplication.RegionLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static RegionLookup CreateInstance()
        {
            return new global::LightSwitchApplication.RegionLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RegionLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Regions_SelectionChanged();

        partial void Regions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Regions_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Regions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Region> Regions
        {
            get
            {
                return global::LightSwitchApplication.RegionLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties.Regions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Regions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySet, global::LightSwitchApplication.RegionLookup.DetailsClass.CommandSet, global::LightSwitchApplication.RegionLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties.Regions;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>.Entry
                __RegionLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeCreated,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeActivated,
                    global::LightSwitchApplication.RegionLookup.DetailsClass.__RegionLookup_InvokeSaveErrorEvent);
            private static void __RegionLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.RegionLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.RegionLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __RegionLookup_InvokeSavingEvent(global::LightSwitchApplication.RegionLookup s)
            {
                bool handled = false;
                s.RegionLookup_Saving(ref handled);
                return handled;
            }
            private static void __RegionLookup_InvokeSavedEvent(global::LightSwitchApplication.RegionLookup s)
            {
                s.RegionLookup_Saved();
            }
            private static bool __RegionLookup_InvokeClosingEvent(global::LightSwitchApplication.RegionLookup s)
            {
                bool cancel = false;
                s.RegionLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __RegionLookup_InvokeCreated(global::LightSwitchApplication.RegionLookup s)
            {
                s.RegionLookup_Created();
            }
            private static void __RegionLookup_InvokeActivated(global::LightSwitchApplication.RegionLookup s)
            {
                s.RegionLookup_Activated();
            }
            private static bool __RegionLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.RegionLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.RegionLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.RegionLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.RegionLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RegionsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Regions;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region>.Data _Regions;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region> Regions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region>)base.GetItem(global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties.Regions);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region>.Entry
                    Regions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region>.Entry(
                        "Regions",
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_Stub,
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_Validate,
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_CreateQuery,
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_SelectionChanged,
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_OnCollectionChanged,
                        global::LightSwitchApplication.RegionLookup.DetailsClass.PropertySetProperties._Regions_OnLoaded);
                private static void _Regions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RegionLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RegionLookup, global::LightSwitchApplication.RegionLookup.DetailsClass, global::LightSwitchApplication.Region>.Data> c, global::LightSwitchApplication.RegionLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._Regions, sf);
                }
                private static void _Regions_Validate(global::LightSwitchApplication.RegionLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Regions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Regions_CreateQuery(global::LightSwitchApplication.RegionLookup.DetailsClass d, object[] args)
                {
                    return d.RegionsQuery();
                }
                private static void _Regions_SelectionChanged(global::LightSwitchApplication.RegionLookup s)
                {
                    s.Regions_SelectionChanged();
                }
                private static void _Regions_OnCollectionChanged(global::LightSwitchApplication.RegionLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Regions_Changed(e);
                }
                private static void _Regions_OnLoaded(global::LightSwitchApplication.RegionLookup s, bool succeeded)
                {
                    s.Regions_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class UOMLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private UOMLookup() : base("LightSwitchApplication.Web:UOMLookup")
        {
            global::LightSwitchApplication.UOMLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static UOMLookup CreateInstance()
        {
            return new global::LightSwitchApplication.UOMLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void UOMs_SelectionChanged();

        partial void UOMs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMs_Loaded(bool succeeded);

        /// <summary>
        /// Gets the UOMs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.UOM> UOMs
        {
            get
            {
                return global::LightSwitchApplication.UOMLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties.UOMs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOMs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySet, global::LightSwitchApplication.UOMLookup.DetailsClass.CommandSet, global::LightSwitchApplication.UOMLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties.UOMs;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>.Entry
                __UOMLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeCreated,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeActivated,
                    global::LightSwitchApplication.UOMLookup.DetailsClass.__UOMLookup_InvokeSaveErrorEvent);
            private static void __UOMLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.UOMLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.UOMLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __UOMLookup_InvokeSavingEvent(global::LightSwitchApplication.UOMLookup s)
            {
                bool handled = false;
                s.UOMLookup_Saving(ref handled);
                return handled;
            }
            private static void __UOMLookup_InvokeSavedEvent(global::LightSwitchApplication.UOMLookup s)
            {
                s.UOMLookup_Saved();
            }
            private static bool __UOMLookup_InvokeClosingEvent(global::LightSwitchApplication.UOMLookup s)
            {
                bool cancel = false;
                s.UOMLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __UOMLookup_InvokeCreated(global::LightSwitchApplication.UOMLookup s)
            {
                s.UOMLookup_Created();
            }
            private static void __UOMLookup_InvokeActivated(global::LightSwitchApplication.UOMLookup s)
            {
                s.UOMLookup_Activated();
            }
            private static bool __UOMLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.UOMLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.UOMLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.UOMLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.UOMLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable UOMsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.UOMs;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM>.Data _UOMs;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM> UOMs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM>)base.GetItem(global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties.UOMs);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM>.Entry
                    UOMs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM>.Entry(
                        "UOMs",
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_Stub,
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_Validate,
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_CreateQuery,
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_SelectionChanged,
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_OnCollectionChanged,
                        global::LightSwitchApplication.UOMLookup.DetailsClass.PropertySetProperties._UOMs_OnLoaded);
                private static void _UOMs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UOMLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UOMLookup, global::LightSwitchApplication.UOMLookup.DetailsClass, global::LightSwitchApplication.UOM>.Data> c, global::LightSwitchApplication.UOMLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._UOMs, sf);
                }
                private static void _UOMs_Validate(global::LightSwitchApplication.UOMLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UOMs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _UOMs_CreateQuery(global::LightSwitchApplication.UOMLookup.DetailsClass d, object[] args)
                {
                    return d.UOMsQuery();
                }
                private static void _UOMs_SelectionChanged(global::LightSwitchApplication.UOMLookup s)
                {
                    s.UOMs_SelectionChanged();
                }
                private static void _UOMs_OnCollectionChanged(global::LightSwitchApplication.UOMLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.UOMs_Changed(e);
                }
                private static void _UOMs_OnLoaded(global::LightSwitchApplication.UOMLookup s, bool succeeded)
                {
                    s.UOMs_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SubmittalTypeLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SubmittalTypeLookup() : base("LightSwitchApplication.Web:SubmittalTypeLookup")
        {
            global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SubmittalTypeLookup CreateInstance()
        {
            return new global::LightSwitchApplication.SubmittalTypeLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypeLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void SubmittalTypes_SelectionChanged();

        partial void SubmittalTypes_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypes_Loaded(bool succeeded);

        /// <summary>
        /// Gets the SubmittalTypes visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SubmittalType> SubmittalTypes
        {
            get
            {
                return global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties.SubmittalTypes);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SubmittalTypes_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySet, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.CommandSet, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties.SubmittalTypes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>.Entry
                __SubmittalTypeLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeCreated,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeActivated,
                    global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.__SubmittalTypeLookup_InvokeSaveErrorEvent);
            private static void __SubmittalTypeLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SubmittalTypeLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SubmittalTypeLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SubmittalTypeLookup_InvokeSavingEvent(global::LightSwitchApplication.SubmittalTypeLookup s)
            {
                bool handled = false;
                s.SubmittalTypeLookup_Saving(ref handled);
                return handled;
            }
            private static void __SubmittalTypeLookup_InvokeSavedEvent(global::LightSwitchApplication.SubmittalTypeLookup s)
            {
                s.SubmittalTypeLookup_Saved();
            }
            private static bool __SubmittalTypeLookup_InvokeClosingEvent(global::LightSwitchApplication.SubmittalTypeLookup s)
            {
                bool cancel = false;
                s.SubmittalTypeLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __SubmittalTypeLookup_InvokeCreated(global::LightSwitchApplication.SubmittalTypeLookup s)
            {
                s.SubmittalTypeLookup_Created();
            }
            private static void __SubmittalTypeLookup_InvokeActivated(global::LightSwitchApplication.SubmittalTypeLookup s)
            {
                s.SubmittalTypeLookup_Activated();
            }
            private static bool __SubmittalTypeLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.SubmittalTypeLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.SubmittalTypeLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SubmittalTypesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.SubmittalTypes;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType>.Data _SubmittalTypes;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType> SubmittalTypes
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType>)base.GetItem(global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties.SubmittalTypes);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType>.Entry
                    SubmittalTypes = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType>.Entry(
                        "SubmittalTypes",
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_Stub,
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_Validate,
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_CreateQuery,
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_SelectionChanged,
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_OnCollectionChanged,
                        global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass.PropertySetProperties._SubmittalTypes_OnLoaded);
                private static void _SubmittalTypes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SubmittalTypeLookup, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass, global::LightSwitchApplication.SubmittalType>.Data> c, global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._SubmittalTypes, sf);
                }
                private static void _SubmittalTypes_Validate(global::LightSwitchApplication.SubmittalTypeLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SubmittalTypes_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SubmittalTypes_CreateQuery(global::LightSwitchApplication.SubmittalTypeLookup.DetailsClass d, object[] args)
                {
                    return d.SubmittalTypesQuery();
                }
                private static void _SubmittalTypes_SelectionChanged(global::LightSwitchApplication.SubmittalTypeLookup s)
                {
                    s.SubmittalTypes_SelectionChanged();
                }
                private static void _SubmittalTypes_OnCollectionChanged(global::LightSwitchApplication.SubmittalTypeLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SubmittalTypes_Changed(e);
                }
                private static void _SubmittalTypes_OnLoaded(global::LightSwitchApplication.SubmittalTypeLookup s, bool succeeded)
                {
                    s.SubmittalTypes_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Main
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Main() : base("LightSwitchApplication.Web:Main")
        {
            global::LightSwitchApplication.Main.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Main CreateInstance()
        {
            return new global::LightSwitchApplication.Main(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Main_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass, global::LightSwitchApplication.Main.DetailsClass.PropertySet, global::LightSwitchApplication.Main.DetailsClass.CommandSet, global::LightSwitchApplication.Main.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>.Entry
                __MainEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>.Entry(
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeSavingEvent,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeSavedEvent,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeClosingEvent,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeCreated,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeActivated,
                    global::LightSwitchApplication.Main.DetailsClass.__Main_InvokeSaveErrorEvent);
            private static void __Main_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Main s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Main_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Main_InvokeSavingEvent(global::LightSwitchApplication.Main s)
            {
                bool handled = false;
                s.Main_Saving(ref handled);
                return handled;
            }
            private static void __Main_InvokeSavedEvent(global::LightSwitchApplication.Main s)
            {
                s.Main_Saved();
            }
            private static bool __Main_InvokeClosingEvent(global::LightSwitchApplication.Main s)
            {
                bool cancel = false;
                s.Main_Closing(ref cancel);
                return cancel;
            }
            private static void __Main_InvokeCreated(global::LightSwitchApplication.Main s)
            {
                s.Main_Created();
            }
            private static void __Main_InvokeActivated(global::LightSwitchApplication.Main s)
            {
                s.Main_Activated();
            }
            private static bool __Main_InvokeSaveErrorEvent(global::LightSwitchApplication.Main s, global::System.Exception ex)
            {
                bool handled = false;
                s.Main_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Main.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Main.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Main.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Main, global::LightSwitchApplication.Main.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SourceStrategiesLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SourceStrategiesLookup() : base("LightSwitchApplication.Web:SourceStrategiesLookup")
        {
            global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SourceStrategiesLookup CreateInstance()
        {
            return new global::LightSwitchApplication.SourceStrategiesLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategiesLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void SourceStrategies_SelectionChanged();

        partial void SourceStrategies_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategies_Loaded(bool succeeded);

        /// <summary>
        /// Gets the SourceStrategies visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SourceStrategy> SourceStrategies
        {
            get
            {
                return global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties.SourceStrategies);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SourceStrategies_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySet, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.CommandSet, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties.SourceStrategies;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>.Entry
                __SourceStrategiesLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeCreated,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeActivated,
                    global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.__SourceStrategiesLookup_InvokeSaveErrorEvent);
            private static void __SourceStrategiesLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SourceStrategiesLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SourceStrategiesLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SourceStrategiesLookup_InvokeSavingEvent(global::LightSwitchApplication.SourceStrategiesLookup s)
            {
                bool handled = false;
                s.SourceStrategiesLookup_Saving(ref handled);
                return handled;
            }
            private static void __SourceStrategiesLookup_InvokeSavedEvent(global::LightSwitchApplication.SourceStrategiesLookup s)
            {
                s.SourceStrategiesLookup_Saved();
            }
            private static bool __SourceStrategiesLookup_InvokeClosingEvent(global::LightSwitchApplication.SourceStrategiesLookup s)
            {
                bool cancel = false;
                s.SourceStrategiesLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __SourceStrategiesLookup_InvokeCreated(global::LightSwitchApplication.SourceStrategiesLookup s)
            {
                s.SourceStrategiesLookup_Created();
            }
            private static void __SourceStrategiesLookup_InvokeActivated(global::LightSwitchApplication.SourceStrategiesLookup s)
            {
                s.SourceStrategiesLookup_Activated();
            }
            private static bool __SourceStrategiesLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.SourceStrategiesLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.SourceStrategiesLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SourceStrategiesQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.SourceStrategies;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy>.Data _SourceStrategies;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy> SourceStrategies
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy>)base.GetItem(global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties.SourceStrategies);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy>.Entry
                    SourceStrategies = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy>.Entry(
                        "SourceStrategies",
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_Stub,
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_Validate,
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_CreateQuery,
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_SelectionChanged,
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_OnCollectionChanged,
                        global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass.PropertySetProperties._SourceStrategies_OnLoaded);
                private static void _SourceStrategies_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SourceStrategiesLookup, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass, global::LightSwitchApplication.SourceStrategy>.Data> c, global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._SourceStrategies, sf);
                }
                private static void _SourceStrategies_Validate(global::LightSwitchApplication.SourceStrategiesLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SourceStrategies_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SourceStrategies_CreateQuery(global::LightSwitchApplication.SourceStrategiesLookup.DetailsClass d, object[] args)
                {
                    return d.SourceStrategiesQuery();
                }
                private static void _SourceStrategies_SelectionChanged(global::LightSwitchApplication.SourceStrategiesLookup s)
                {
                    s.SourceStrategies_SelectionChanged();
                }
                private static void _SourceStrategies_OnCollectionChanged(global::LightSwitchApplication.SourceStrategiesLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SourceStrategies_Changed(e);
                }
                private static void _SourceStrategies_OnLoaded(global::LightSwitchApplication.SourceStrategiesLookup s, bool succeeded)
                {
                    s.SourceStrategies_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class CreateNewProposal
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewProposal() : base("LightSwitchApplication.Web:CreateNewProposal")
        {
            global::LightSwitchApplication.CreateNewProposal.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewProposal CreateInstance()
        {
            return new global::LightSwitchApplication.CreateNewProposal(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewProposal_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ProposalProperty_Changed();

        partial void Proposal_Lines_SelectionChanged();

        partial void Proposal_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Loaded(bool succeeded);

        partial void RFQ_P_SelectionChanged();

        partial void RFQ_P_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Proposal ProposalProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewProposal.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.ProposalProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewProposal.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.ProposalProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Proposal_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal_Line> Proposal_Lines
        {
            get
            {
                return global::LightSwitchApplication.CreateNewProposal.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.Proposal_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the RFQ_P visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_PItem> RFQ_P
        {
            get
            {
                return global::LightSwitchApplication.CreateNewProposal.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.RFQ_P);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_P_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewProposal.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewProposal.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.ProposalProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>.Entry
                __CreateNewProposalEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeCreated,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeActivated,
                    global::LightSwitchApplication.CreateNewProposal.DetailsClass.__CreateNewProposal_InvokeSaveErrorEvent);
            private static void __CreateNewProposal_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewProposal s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewProposal_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewProposal_InvokeSavingEvent(global::LightSwitchApplication.CreateNewProposal s)
            {
                bool handled = false;
                s.CreateNewProposal_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewProposal_InvokeSavedEvent(global::LightSwitchApplication.CreateNewProposal s)
            {
                s.CreateNewProposal_Saved();
            }
            private static bool __CreateNewProposal_InvokeClosingEvent(global::LightSwitchApplication.CreateNewProposal s)
            {
                bool cancel = false;
                s.CreateNewProposal_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewProposal_InvokeCreated(global::LightSwitchApplication.CreateNewProposal s)
            {
                s.CreateNewProposal_Created();
            }
            private static void __CreateNewProposal_InvokeActivated(global::LightSwitchApplication.CreateNewProposal s)
            {
                s.CreateNewProposal_Activated();
            }
            private static bool __CreateNewProposal_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewProposal s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewProposal_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewProposal.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewProposal.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Proposal_LinesQuery()
            {
                if (this.Screen.ProposalProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProposalProperty.Details.Properties.Proposal_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "RFQ_Line");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable RFQ_PQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.RFQ_P,
                    "Project");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal>.Data _ProposalProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data _Proposal_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data _RFQ_P;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal> ProposalProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal>)base.GetItem(global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.ProposalProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line> Proposal_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line>)base.GetItem(global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.Proposal_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem> RFQ_P
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem>)base.GetItem(global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties.RFQ_P);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal>.Entry
                    ProposalProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal>.Entry(
                        "ProposalProperty",
                        false,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._ProposalProperty_Stub,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._ProposalProperty_Validate,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._ProposalProperty_OnValueChanged);
                private static void _ProposalProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal>.Data> c, global::LightSwitchApplication.CreateNewProposal.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalProperty, sf);
                }
                private static void _ProposalProperty_Validate(global::LightSwitchApplication.CreateNewProposal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProposalProperty_Validate(r);
                }
                private static void _ProposalProperty_OnValueChanged(global::LightSwitchApplication.CreateNewProposal s)
                {
                    s.ProposalProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry
                    Proposal_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry(
                        "Proposal_Lines",
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_Stub,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_Validate,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_CreateQuery,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_SelectionChanged,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._Proposal_Lines_OnLoaded);
                private static void _Proposal_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data> c, global::LightSwitchApplication.CreateNewProposal.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_Lines, sf);
                }
                private static void _Proposal_Lines_Validate(global::LightSwitchApplication.CreateNewProposal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Proposal_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Proposal_Lines_CreateQuery(global::LightSwitchApplication.CreateNewProposal.DetailsClass d, object[] args)
                {
                    return d.Proposal_LinesQuery();
                }
                private static void _Proposal_Lines_SelectionChanged(global::LightSwitchApplication.CreateNewProposal s)
                {
                    s.Proposal_Lines_SelectionChanged();
                }
                private static void _Proposal_Lines_OnCollectionChanged(global::LightSwitchApplication.CreateNewProposal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Proposal_Lines_Changed(e);
                }
                private static void _Proposal_Lines_OnLoaded(global::LightSwitchApplication.CreateNewProposal s, bool succeeded)
                {
                    s.Proposal_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry
                    RFQ_P = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Entry(
                        "RFQ_P",
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_Stub,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_Validate,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_CreateQuery,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_SelectionChanged,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_OnCollectionChanged,
                        global::LightSwitchApplication.CreateNewProposal.DetailsClass.PropertySetProperties._RFQ_P_OnLoaded);
                private static void _RFQ_P_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateNewProposal, global::LightSwitchApplication.CreateNewProposal.DetailsClass, global::LightSwitchApplication.RFQ_PItem>.Data> c, global::LightSwitchApplication.CreateNewProposal.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_P, sf);
                }
                private static void _RFQ_P_Validate(global::LightSwitchApplication.CreateNewProposal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_P_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _RFQ_P_CreateQuery(global::LightSwitchApplication.CreateNewProposal.DetailsClass d, object[] args)
                {
                    return d.RFQ_PQuery();
                }
                private static void _RFQ_P_SelectionChanged(global::LightSwitchApplication.CreateNewProposal s)
                {
                    s.RFQ_P_SelectionChanged();
                }
                private static void _RFQ_P_OnCollectionChanged(global::LightSwitchApplication.CreateNewProposal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.RFQ_P_Changed(e);
                }
                private static void _RFQ_P_OnLoaded(global::LightSwitchApplication.CreateNewProposal s, bool succeeded)
                {
                    s.RFQ_P_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AddYears
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AddYears() : base("LightSwitchApplication.Web:AddYears")
        {
            global::LightSwitchApplication.AddYears.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AddYears CreateInstance()
        {
            return new global::LightSwitchApplication.AddYears(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddYears_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Years_SelectionChanged();

        partial void Years_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Years_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Years visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Year> Years
        {
            get
            {
                return global::LightSwitchApplication.AddYears.DetailsClass.GetValue(this, global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties.Years);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Years_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.AddYears.DetailsClass.PropertySet, global::LightSwitchApplication.AddYears.DetailsClass.CommandSet, global::LightSwitchApplication.AddYears.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties.Years;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>.Entry
                __AddYearsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>.Entry(
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeSavingEvent,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeSavedEvent,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeClosingEvent,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeCreated,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeActivated,
                    global::LightSwitchApplication.AddYears.DetailsClass.__AddYears_InvokeSaveErrorEvent);
            private static void __AddYears_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AddYears s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AddYears_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AddYears_InvokeSavingEvent(global::LightSwitchApplication.AddYears s)
            {
                bool handled = false;
                s.AddYears_Saving(ref handled);
                return handled;
            }
            private static void __AddYears_InvokeSavedEvent(global::LightSwitchApplication.AddYears s)
            {
                s.AddYears_Saved();
            }
            private static bool __AddYears_InvokeClosingEvent(global::LightSwitchApplication.AddYears s)
            {
                bool cancel = false;
                s.AddYears_Closing(ref cancel);
                return cancel;
            }
            private static void __AddYears_InvokeCreated(global::LightSwitchApplication.AddYears s)
            {
                s.AddYears_Created();
            }
            private static void __AddYears_InvokeActivated(global::LightSwitchApplication.AddYears s)
            {
                s.AddYears_Activated();
            }
            private static bool __AddYears_InvokeSaveErrorEvent(global::LightSwitchApplication.AddYears s, global::System.Exception ex)
            {
                bool handled = false;
                s.AddYears_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AddYears.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AddYears.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AddYears.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable YearsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.Years;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year>.Data _Years;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year> Years
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year>)base.GetItem(global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties.Years);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year>.Entry
                    Years = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year>.Entry(
                        "Years",
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_Stub,
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_Validate,
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_CreateQuery,
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_SelectionChanged,
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_OnCollectionChanged,
                        global::LightSwitchApplication.AddYears.DetailsClass.PropertySetProperties._Years_OnLoaded);
                private static void _Years_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AddYears.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AddYears, global::LightSwitchApplication.AddYears.DetailsClass, global::LightSwitchApplication.Year>.Data> c, global::LightSwitchApplication.AddYears.DetailsClass d, object sf)
                {
                    c(d, ref d._Years, sf);
                }
                private static void _Years_Validate(global::LightSwitchApplication.AddYears s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Years_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Years_CreateQuery(global::LightSwitchApplication.AddYears.DetailsClass d, object[] args)
                {
                    return d.YearsQuery();
                }
                private static void _Years_SelectionChanged(global::LightSwitchApplication.AddYears s)
                {
                    s.Years_SelectionChanged();
                }
                private static void _Years_OnCollectionChanged(global::LightSwitchApplication.AddYears s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Years_Changed(e);
                }
                private static void _Years_OnLoaded(global::LightSwitchApplication.AddYears s, bool succeeded)
                {
                    s.Years_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class CreateNewPO
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateNewPO(string ProjectNumber, string RFQNumber, string Supplier) : base("LightSwitchApplication.Web:CreateNewPO")
        {
                this.ProjectNumber = ProjectNumber;
                this.RFQNumber = RFQNumber;
                this.Supplier = Supplier;
            global::LightSwitchApplication.CreateNewPO.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateNewPO CreateInstance(string ProjectNumber, string RFQNumber, string Supplier)
        {
            return new global::LightSwitchApplication.CreateNewPO(
                        ProjectNumber
                        ,RFQNumber
                        ,Supplier
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateNewPO_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void POProperty_Changed();

        partial void ProjectNumber_Changed();

        partial void RFQNumber_Changed();

        partial void Supplier_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PO POProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewPO.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.POProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateNewPO.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.POProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectNumber
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewPO.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.ProjectNumber);
            }
            set
            {
                global::LightSwitchApplication.CreateNewPO.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.ProjectNumber, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectNumber_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQNumber
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewPO.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.RFQNumber);
            }
            set
            {
                global::LightSwitchApplication.CreateNewPO.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.RFQNumber, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQNumber_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Supplier
        {
            get 
            {
                return global::LightSwitchApplication.CreateNewPO.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.Supplier);
            }
            set
            {
                global::LightSwitchApplication.CreateNewPO.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.Supplier, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the GetDetail screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void GetDetail()
        {
            this.Details.Methods.GetDetail.CreateInvocation().Execute();
        }
        partial void GetDetail_CanExecute(ref bool result);
        partial void GetDetail_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySet, global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSet, global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.POProperty;
                var initializeCommandEntry = global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSetProperties.GetDetail;
                var initializeMethodEntry = global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSetProperties.GetDetail;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry
                __CreateNewPOEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeCreated,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeActivated,
                    global::LightSwitchApplication.CreateNewPO.DetailsClass.__CreateNewPO_InvokeSaveErrorEvent);
            private static void __CreateNewPO_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateNewPO s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateNewPO_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateNewPO_InvokeSavingEvent(global::LightSwitchApplication.CreateNewPO s)
            {
                bool handled = false;
                s.CreateNewPO_Saving(ref handled);
                return handled;
            }
            private static void __CreateNewPO_InvokeSavedEvent(global::LightSwitchApplication.CreateNewPO s)
            {
                s.CreateNewPO_Saved();
            }
            private static bool __CreateNewPO_InvokeClosingEvent(global::LightSwitchApplication.CreateNewPO s)
            {
                bool cancel = false;
                s.CreateNewPO_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateNewPO_InvokeCreated(global::LightSwitchApplication.CreateNewPO s)
            {
                s.CreateNewPO_Created();
            }
            private static void __CreateNewPO_InvokeActivated(global::LightSwitchApplication.CreateNewPO s)
            {
                s.CreateNewPO_Activated();
            }
            private static bool __CreateNewPO_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateNewPO s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateNewPO_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO>.Data _POProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data _ProjectNumber;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data _RFQNumber;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data _Supplier;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Data _GetDetailCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Data _GetDetailMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO> POProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.POProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string> ProjectNumber
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.ProjectNumber);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string> RFQNumber
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.RFQNumber);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string> Supplier
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties.Supplier);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass> GetDetail
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSetProperties.GetDetail);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass> GetDetail
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>)base.GetItem(global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSetProperties.GetDetail);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    POProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "POProperty",
                        false,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._POProperty_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._POProperty_Validate,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._POProperty_OnValueChanged);
                private static void _POProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._POProperty, sf);
                }
                private static void _POProperty_Validate(global::LightSwitchApplication.CreateNewPO s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.POProperty_Validate(r);
                }
                private static void _POProperty_OnValueChanged(global::LightSwitchApplication.CreateNewPO s)
                {
                    s.POProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry
                    ProjectNumber = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry(
                        "ProjectNumber",
                        false,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._ProjectNumber_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._ProjectNumber_Validate,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._ProjectNumber_OnValueChanged);
                private static void _ProjectNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectNumber, sf);
                }
                private static void _ProjectNumber_Validate(global::LightSwitchApplication.CreateNewPO s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectNumber_Validate(r);
                }
                private static void _ProjectNumber_OnValueChanged(global::LightSwitchApplication.CreateNewPO s)
                {
                    s.ProjectNumber_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry
                    RFQNumber = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry(
                        "RFQNumber",
                        false,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._RFQNumber_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._RFQNumber_Validate,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._RFQNumber_OnValueChanged);
                private static void _RFQNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQNumber, sf);
                }
                private static void _RFQNumber_Validate(global::LightSwitchApplication.CreateNewPO s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQNumber_Validate(r);
                }
                private static void _RFQNumber_OnValueChanged(global::LightSwitchApplication.CreateNewPO s)
                {
                    s.RFQNumber_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry
                    Supplier = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Entry(
                        "Supplier",
                        false,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._Supplier_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._Supplier_Validate,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.PropertySetProperties._Supplier_OnValueChanged);
                private static void _Supplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier, sf);
                }
                private static void _Supplier_Validate(global::LightSwitchApplication.CreateNewPO s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Supplier_Validate(r);
                }
                private static void _Supplier_OnValueChanged(global::LightSwitchApplication.CreateNewPO s)
                {
                    s.Supplier_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry
                    GetDetail = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry(
                        "GetDetail",
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSetProperties._GetDetail_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.CommandSetProperties._GetDetail_CreateExecutableObject);
                private static void _GetDetail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._GetDetailCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _GetDetail_CreateExecutableObject(global::LightSwitchApplication.CreateNewPO.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.CreateNewPO.DetailsClass)d).Methods.GetDetail.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry
                    GetDetail = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Entry(
                        "GetDetail",
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSetProperties._GetDetail_Stub,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSetProperties._GetDetail_CanInvoke,
                        global::LightSwitchApplication.CreateNewPO.DetailsClass.MethodSetProperties._GetDetail_InvokeMethod);
                private static void _GetDetail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateNewPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.CreateNewPO, global::LightSwitchApplication.CreateNewPO.DetailsClass>.Data> c, global::LightSwitchApplication.CreateNewPO.DetailsClass d, object sf)
                {
                    c(d, ref d._GetDetailMethod, sf);
                }
                private static global::System.Exception _GetDetail_CanInvoke(global::LightSwitchApplication.CreateNewPO.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.GetDetail_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _GetDetail_InvokeMethod(global::LightSwitchApplication.CreateNewPO.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.GetDetail_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class CreateRFQLineItem
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private CreateRFQLineItem(string ProjectNumber, string RFQNumber, string PkgName, string PkgDescription) : base("LightSwitchApplication.Web:CreateRFQLineItem")
        {
                this.ProjectNumber = ProjectNumber;
                this.RFQNumber = RFQNumber;
                this.PkgName = PkgName;
                this.PkgDescription = PkgDescription;
            global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static CreateRFQLineItem CreateInstance(string ProjectNumber, string RFQNumber, string PkgName, string PkgDescription)
        {
            return new global::LightSwitchApplication.CreateRFQLineItem(
                        ProjectNumber
                        ,RFQNumber
                        ,PkgName
                        ,PkgDescription
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreateRFQLineItem_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void RFQ_LineProperty_Changed();

        partial void Submittals_SelectionChanged();

        partial void Submittals_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Submittals_Loaded(bool succeeded);

        partial void ProjectNumber_Changed();

        partial void RFQNumber_Changed();

        partial void PkgName_Changed();

        partial void PkgDescription_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.RFQ_Line RFQ_LineProperty
        {
            get 
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQ_LineProperty);
            }
            set
            {
                global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQ_LineProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_LineProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Submittals visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Submittal> Submittals
        {
            get
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.Submittals);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Submittals_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectNumber
        {
            get 
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.ProjectNumber);
            }
            set
            {
                global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.ProjectNumber, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectNumber_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQNumber
        {
            get 
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQNumber);
            }
            set
            {
                global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQNumber, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQNumber_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PkgName
        {
            get 
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgName);
            }
            set
            {
                global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgName, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PkgName_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PkgDescription
        {
            get 
            {
                return global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.GetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgDescription);
            }
            set
            {
                global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.SetValue(this, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgDescription, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PkgDescription_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySet, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.CommandSet, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQ_LineProperty;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>.Entry
                __CreateRFQLineItemEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>.Entry(
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeSavingEvent,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeSavedEvent,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeClosingEvent,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeCreated,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeActivated,
                    global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.__CreateRFQLineItem_InvokeSaveErrorEvent);
            private static void __CreateRFQLineItem_InvokeInitializeDataWorkspace(global::LightSwitchApplication.CreateRFQLineItem s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.CreateRFQLineItem_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __CreateRFQLineItem_InvokeSavingEvent(global::LightSwitchApplication.CreateRFQLineItem s)
            {
                bool handled = false;
                s.CreateRFQLineItem_Saving(ref handled);
                return handled;
            }
            private static void __CreateRFQLineItem_InvokeSavedEvent(global::LightSwitchApplication.CreateRFQLineItem s)
            {
                s.CreateRFQLineItem_Saved();
            }
            private static bool __CreateRFQLineItem_InvokeClosingEvent(global::LightSwitchApplication.CreateRFQLineItem s)
            {
                bool cancel = false;
                s.CreateRFQLineItem_Closing(ref cancel);
                return cancel;
            }
            private static void __CreateRFQLineItem_InvokeCreated(global::LightSwitchApplication.CreateRFQLineItem s)
            {
                s.CreateRFQLineItem_Created();
            }
            private static void __CreateRFQLineItem_InvokeActivated(global::LightSwitchApplication.CreateRFQLineItem s)
            {
                s.CreateRFQLineItem_Activated();
            }
            private static bool __CreateRFQLineItem_InvokeSaveErrorEvent(global::LightSwitchApplication.CreateRFQLineItem s, global::System.Exception ex)
            {
                bool handled = false;
                s.CreateRFQLineItem_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SubmittalsQuery()
            {
                if (this.Screen.RFQ_LineProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Submittal> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Submittal>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.RFQ_LineProperty.Details.Properties.Submittals).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "SubmittalType1");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data _RFQ_LineProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal>.Data _Submittals;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data _ProjectNumber;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data _RFQNumber;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data _PkgName;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data _PkgDescription;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line> RFQ_LineProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQ_LineProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal> Submittals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.Submittals);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string> ProjectNumber
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.ProjectNumber);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string> RFQNumber
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.RFQNumber);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string> PkgName
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgName);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string> PkgDescription
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties.PkgDescription);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry
                    RFQ_LineProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry(
                        "RFQ_LineProperty",
                        false,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQ_LineProperty_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQ_LineProperty_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQ_LineProperty_OnValueChanged);
                private static void _RFQ_LineProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_LineProperty, sf);
                }
                private static void _RFQ_LineProperty_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_LineProperty_Validate(r);
                }
                private static void _RFQ_LineProperty_OnValueChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.RFQ_LineProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal>.Entry
                    Submittals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal>.Entry(
                        "Submittals",
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_CreateQuery,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_SelectionChanged,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_OnCollectionChanged,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._Submittals_OnLoaded);
                private static void _Submittals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::LightSwitchApplication.Submittal>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._Submittals, sf);
                }
                private static void _Submittals_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Submittals_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Submittals_CreateQuery(global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object[] args)
                {
                    return d.SubmittalsQuery();
                }
                private static void _Submittals_SelectionChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.Submittals_SelectionChanged();
                }
                private static void _Submittals_OnCollectionChanged(global::LightSwitchApplication.CreateRFQLineItem s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Submittals_Changed(e);
                }
                private static void _Submittals_OnLoaded(global::LightSwitchApplication.CreateRFQLineItem s, bool succeeded)
                {
                    s.Submittals_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry
                    ProjectNumber = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry(
                        "ProjectNumber",
                        false,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._ProjectNumber_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._ProjectNumber_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._ProjectNumber_OnValueChanged);
                private static void _ProjectNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectNumber, sf);
                }
                private static void _ProjectNumber_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectNumber_Validate(r);
                }
                private static void _ProjectNumber_OnValueChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.ProjectNumber_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry
                    RFQNumber = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry(
                        "RFQNumber",
                        false,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQNumber_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQNumber_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._RFQNumber_OnValueChanged);
                private static void _RFQNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQNumber, sf);
                }
                private static void _RFQNumber_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQNumber_Validate(r);
                }
                private static void _RFQNumber_OnValueChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.RFQNumber_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry
                    PkgName = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry(
                        "PkgName",
                        false,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgName_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgName_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgName_OnValueChanged);
                private static void _PkgName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._PkgName, sf);
                }
                private static void _PkgName_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PkgName_Validate(r);
                }
                private static void _PkgName_OnValueChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.PkgName_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry
                    PkgDescription = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Entry(
                        "PkgDescription",
                        false,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgDescription_Stub,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgDescription_Validate,
                        global::LightSwitchApplication.CreateRFQLineItem.DetailsClass.PropertySetProperties._PkgDescription_OnValueChanged);
                private static void _PkgDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.CreateRFQLineItem, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass, string>.Data> c, global::LightSwitchApplication.CreateRFQLineItem.DetailsClass d, object sf)
                {
                    c(d, ref d._PkgDescription, sf);
                }
                private static void _PkgDescription_Validate(global::LightSwitchApplication.CreateRFQLineItem s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PkgDescription_Validate(r);
                }
                private static void _PkgDescription_OnValueChanged(global::LightSwitchApplication.CreateRFQLineItem s)
                {
                    s.PkgDescription_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PODetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PODetail(int POID) : base("LightSwitchApplication.Web:PODetail")
        {
                this.POID = POID;
            global::LightSwitchApplication.PODetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PODetail CreateInstance(int POID)
        {
            return new global::LightSwitchApplication.PODetail(
                        POID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PODetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void PO_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Loaded(bool succeeded);

        partial void POID_Changed();

        partial void PO_Lines_SelectionChanged();

        partial void PO_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PO PO
        {
            get
            {
                return global::LightSwitchApplication.PODetail.DetailsClass.GetValue(this, global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.PO);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int POID
        {
            get 
            {
                return global::LightSwitchApplication.PODetail.DetailsClass.GetValue(this, global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.POID);
            }
            set
            {
                global::LightSwitchApplication.PODetail.DetailsClass.SetValue(this, global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.POID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the PO_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO_Line> PO_Lines
        {
            get
            {
                return global::LightSwitchApplication.PODetail.DetailsClass.GetValue(this, global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.PO_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PODetail.DetailsClass.PropertySet, global::LightSwitchApplication.PODetail.DetailsClass.CommandSet, global::LightSwitchApplication.PODetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.PO;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>.Entry
                __PODetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeSavingEvent,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeSavedEvent,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeClosingEvent,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeCreated,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeActivated,
                    global::LightSwitchApplication.PODetail.DetailsClass.__PODetail_InvokeSaveErrorEvent);
            private static void __PODetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PODetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PODetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PODetail_InvokeSavingEvent(global::LightSwitchApplication.PODetail s)
            {
                bool handled = false;
                s.PODetail_Saving(ref handled);
                return handled;
            }
            private static void __PODetail_InvokeSavedEvent(global::LightSwitchApplication.PODetail s)
            {
                s.PODetail_Saved();
            }
            private static bool __PODetail_InvokeClosingEvent(global::LightSwitchApplication.PODetail s)
            {
                bool cancel = false;
                s.PODetail_Closing(ref cancel);
                return cancel;
            }
            private static void __PODetail_InvokeCreated(global::LightSwitchApplication.PODetail s)
            {
                s.PODetail_Created();
            }
            private static void __PODetail_InvokeActivated(global::LightSwitchApplication.PODetail s)
            {
                s.PODetail_Activated();
            }
            private static bool __PODetail_InvokeSaveErrorEvent(global::LightSwitchApplication.PODetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.PODetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PODetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PODetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PODetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PO_LinesQuery()
            {
                if (this.Screen.PO == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.PO.Details.Properties.PO_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO>.Data _PO;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int>.Data _POID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data _PO_Lines;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO> PO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO>)base.GetItem(global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.PO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int> POID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.POID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line> PO_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line>)base.GetItem(global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties.PO_Lines);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    PO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "PO",
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Stub,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Validate,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_CreateQuery,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_OnValueChanged,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_OnLoaded);
                private static void _PO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PODetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.PODetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO, sf);
                }
                private static void _PO_Validate(global::LightSwitchApplication.PODetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_CreateQuery(global::LightSwitchApplication.PODetail.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _PO_OnValueChanged(global::LightSwitchApplication.PODetail s)
                {
                    s.PO_Changed();
                }

                private static void _PO_OnLoaded(global::LightSwitchApplication.PODetail s, bool succeeded)
                {
                    s.PO_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int>.Entry
                    POID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int>.Entry(
                        "POID",
                        false,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._POID_Stub,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._POID_Validate,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._POID_OnValueChanged);
                private static void _POID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PODetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.PODetail.DetailsClass d, object sf)
                {
                    c(d, ref d._POID, sf);
                }
                private static void _POID_Validate(global::LightSwitchApplication.PODetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.POID_Validate(r);
                }
                private static void _POID_OnValueChanged(global::LightSwitchApplication.PODetail s)
                {
                    s.POID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry
                    PO_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry(
                        "PO_Lines",
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_Stub,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_Validate,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_CreateQuery,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_SelectionChanged,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.PODetail.DetailsClass.PropertySetProperties._PO_Lines_OnLoaded);
                private static void _PO_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PODetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PODetail, global::LightSwitchApplication.PODetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data> c, global::LightSwitchApplication.PODetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_Lines, sf);
                }
                private static void _PO_Lines_Validate(global::LightSwitchApplication.PODetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_Lines_CreateQuery(global::LightSwitchApplication.PODetail.DetailsClass d, object[] args)
                {
                    return d.PO_LinesQuery();
                }
                private static void _PO_Lines_SelectionChanged(global::LightSwitchApplication.PODetail s)
                {
                    s.PO_Lines_SelectionChanged();
                }
                private static void _PO_Lines_OnCollectionChanged(global::LightSwitchApplication.PODetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Lines_Changed(e);
                }
                private static void _PO_Lines_OnLoaded(global::LightSwitchApplication.PODetail s, bool succeeded)
                {
                    s.PO_Lines_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SearchPO
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SearchPO() : base("LightSwitchApplication.Web:SearchPO")
        {
            global::LightSwitchApplication.SearchPO.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SearchPO CreateInstance()
        {
            return new global::LightSwitchApplication.SearchPO(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchPO_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void PO_SelectionChanged();

        partial void PO_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Loaded(bool succeeded);

        /// <summary>
        /// Gets the PO visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO> PO
        {
            get
            {
                return global::LightSwitchApplication.SearchPO.DetailsClass.GetValue(this, global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties.PO);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.SearchPO.DetailsClass.PropertySet, global::LightSwitchApplication.SearchPO.DetailsClass.CommandSet, global::LightSwitchApplication.SearchPO.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties.PO;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>.Entry
                __SearchPOEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>.Entry(
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeSavingEvent,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeSavedEvent,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeClosingEvent,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeCreated,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeActivated,
                    global::LightSwitchApplication.SearchPO.DetailsClass.__SearchPO_InvokeSaveErrorEvent);
            private static void __SearchPO_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SearchPO s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SearchPO_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SearchPO_InvokeSavingEvent(global::LightSwitchApplication.SearchPO s)
            {
                bool handled = false;
                s.SearchPO_Saving(ref handled);
                return handled;
            }
            private static void __SearchPO_InvokeSavedEvent(global::LightSwitchApplication.SearchPO s)
            {
                s.SearchPO_Saved();
            }
            private static bool __SearchPO_InvokeClosingEvent(global::LightSwitchApplication.SearchPO s)
            {
                bool cancel = false;
                s.SearchPO_Closing(ref cancel);
                return cancel;
            }
            private static void __SearchPO_InvokeCreated(global::LightSwitchApplication.SearchPO s)
            {
                s.SearchPO_Created();
            }
            private static void __SearchPO_InvokeActivated(global::LightSwitchApplication.SearchPO s)
            {
                s.SearchPO_Activated();
            }
            private static bool __SearchPO_InvokeSaveErrorEvent(global::LightSwitchApplication.SearchPO s, global::System.Exception ex)
            {
                bool handled = false;
                s.SearchPO_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SearchPO.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SearchPO.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SearchPO.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable POQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ProcurementData.PO,
                    "Supplier");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO>.Data _PO;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO> PO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO>)base.GetItem(global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties.PO);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    PO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "PO",
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_Stub,
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_Validate,
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_CreateQuery,
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_SelectionChanged,
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_OnCollectionChanged,
                        global::LightSwitchApplication.SearchPO.DetailsClass.PropertySetProperties._PO_OnLoaded);
                private static void _PO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SearchPO.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SearchPO, global::LightSwitchApplication.SearchPO.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.SearchPO.DetailsClass d, object sf)
                {
                    c(d, ref d._PO, sf);
                }
                private static void _PO_Validate(global::LightSwitchApplication.SearchPO s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_CreateQuery(global::LightSwitchApplication.SearchPO.DetailsClass d, object[] args)
                {
                    return d.POQuery();
                }
                private static void _PO_SelectionChanged(global::LightSwitchApplication.SearchPO s)
                {
                    s.PO_SelectionChanged();
                }
                private static void _PO_OnCollectionChanged(global::LightSwitchApplication.SearchPO s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Changed(e);
                }
                private static void _PO_OnLoaded(global::LightSwitchApplication.SearchPO s, bool succeeded)
                {
                    s.PO_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectClassificationLookup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProjectClassificationLookup() : base("LightSwitchApplication.Web:ProjectClassificationLookup")
        {
            global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProjectClassificationLookup CreateInstance()
        {
            return new global::LightSwitchApplication.ProjectClassificationLookup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassificationLookup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ProjectClassifications_SelectionChanged();

        partial void ProjectClassifications_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassifications_Loaded(bool succeeded);

        /// <summary>
        /// Gets the ProjectClassifications visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectClassification> ProjectClassifications
        {
            get
            {
                return global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties.ProjectClassifications);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectClassifications_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySet, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.CommandSet, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties.ProjectClassifications;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>.Entry
                __ProjectClassificationLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeSavingEvent,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeSavedEvent,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeClosingEvent,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeCreated,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeActivated,
                    global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.__ProjectClassificationLookup_InvokeSaveErrorEvent);
            private static void __ProjectClassificationLookup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProjectClassificationLookup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProjectClassificationLookup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProjectClassificationLookup_InvokeSavingEvent(global::LightSwitchApplication.ProjectClassificationLookup s)
            {
                bool handled = false;
                s.ProjectClassificationLookup_Saving(ref handled);
                return handled;
            }
            private static void __ProjectClassificationLookup_InvokeSavedEvent(global::LightSwitchApplication.ProjectClassificationLookup s)
            {
                s.ProjectClassificationLookup_Saved();
            }
            private static bool __ProjectClassificationLookup_InvokeClosingEvent(global::LightSwitchApplication.ProjectClassificationLookup s)
            {
                bool cancel = false;
                s.ProjectClassificationLookup_Closing(ref cancel);
                return cancel;
            }
            private static void __ProjectClassificationLookup_InvokeCreated(global::LightSwitchApplication.ProjectClassificationLookup s)
            {
                s.ProjectClassificationLookup_Created();
            }
            private static void __ProjectClassificationLookup_InvokeActivated(global::LightSwitchApplication.ProjectClassificationLookup s)
            {
                s.ProjectClassificationLookup_Activated();
            }
            private static bool __ProjectClassificationLookup_InvokeSaveErrorEvent(global::LightSwitchApplication.ProjectClassificationLookup s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProjectClassificationLookup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectClassificationsQuery()
            {
                return this.Screen.DataWorkspace.ProcurementData.ProjectClassifications;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification>.Data _ProjectClassifications;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification> ProjectClassifications
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification>)base.GetItem(global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties.ProjectClassifications);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification>.Entry
                    ProjectClassifications = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification>.Entry(
                        "ProjectClassifications",
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_Stub,
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_Validate,
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_CreateQuery,
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_SelectionChanged,
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass.PropertySetProperties._ProjectClassifications_OnLoaded);
                private static void _ProjectClassifications_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectClassificationLookup, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass, global::LightSwitchApplication.ProjectClassification>.Data> c, global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectClassifications, sf);
                }
                private static void _ProjectClassifications_Validate(global::LightSwitchApplication.ProjectClassificationLookup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectClassifications_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectClassifications_CreateQuery(global::LightSwitchApplication.ProjectClassificationLookup.DetailsClass d, object[] args)
                {
                    return d.ProjectClassificationsQuery();
                }
                private static void _ProjectClassifications_SelectionChanged(global::LightSwitchApplication.ProjectClassificationLookup s)
                {
                    s.ProjectClassifications_SelectionChanged();
                }
                private static void _ProjectClassifications_OnCollectionChanged(global::LightSwitchApplication.ProjectClassificationLookup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectClassifications_Changed(e);
                }
                private static void _ProjectClassifications_OnLoaded(global::LightSwitchApplication.ProjectClassificationLookup s, bool succeeded)
                {
                    s.ProjectClassifications_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class POListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private POListDetail(int RFQID, string RFQ_Number, string RFQ_Description, global::System.Nullable<int> SupID) : base("LightSwitchApplication.Web:POListDetail")
        {
                this.RFQID = RFQID;
                this.RFQ_Number = RFQ_Number;
                this.RFQ_Description = RFQ_Description;
                this.SupID = SupID;
            global::LightSwitchApplication.POListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static POListDetail CreateInstance(int RFQID, string RFQ_Number, string RFQ_Description, global::System.Nullable<int> SupID)
        {
            return new global::LightSwitchApplication.POListDetail(
                        RFQID
                        ,RFQ_Number
                        ,RFQ_Description
                        ,SupID
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void POListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void PO_SelectionChanged();

        partial void PO_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Loaded(bool succeeded);

        partial void PO_Lines_SelectionChanged();

        partial void PO_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Loaded(bool succeeded);

        partial void FilterByAwardedSupplierID_SelectionChanged();

        partial void FilterByAwardedSupplierID_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterByAwardedSupplierID_Loaded(bool succeeded);

        partial void RFQID_Changed();

        partial void RFQ_Number_Changed();

        partial void RFQ_Description_Changed();

        partial void PO_Lines1_SelectionChanged();

        partial void PO_Lines1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines1_Loaded(bool succeeded);

        partial void SupID_Changed();

        /// <summary>
        /// Gets the PO visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO> PO
        {
            get
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the PO_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO_Line> PO_Lines
        {
            get
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FilterByAwardedSupplierID visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Award_Selected> FilterByAwardedSupplierID
        {
            get
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.FilterByAwardedSupplierID);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterByAwardedSupplierID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQID
        {
            get 
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQID);
            }
            set
            {
                global::LightSwitchApplication.POListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQ_Number
        {
            get 
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Number);
            }
            set
            {
                global::LightSwitchApplication.POListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Number, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Number_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQ_Description
        {
            get 
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Description);
            }
            set
            {
                global::LightSwitchApplication.POListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Description, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQ_Description_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the PO_Lines1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PO_Line> PO_Lines1
        {
            get
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO_Lines1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Lines1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> SupID
        {
            get 
            {
                return global::LightSwitchApplication.POListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.SupID);
            }
            set
            {
                global::LightSwitchApplication.POListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.SupID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AddAwardToSelectedPO screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddAwardToSelectedPO()
        {
            this.Details.Methods.AddAwardToSelectedPO.CreateInvocation().Execute();
        }
        partial void AddAwardToSelectedPO_CanExecute(ref bool result);
        partial void AddAwardToSelectedPO_Execute();

        /// <summary>
        /// Calls the RemoveFromPO screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveFromPO()
        {
            this.Details.Methods.RemoveFromPO.CreateInvocation().Execute();
        }
        partial void RemoveFromPO_CanExecute(ref bool result);
        partial void RemoveFromPO_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.POListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.POListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.POListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO;
                var initializeCommandEntry = global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties.AddAwardToSelectedPO;
                var initializeMethodEntry = global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties.AddAwardToSelectedPO;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry
                __POListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeCreated,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeActivated,
                    global::LightSwitchApplication.POListDetail.DetailsClass.__POListDetail_InvokeSaveErrorEvent);
            private static void __POListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.POListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.POListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __POListDetail_InvokeSavingEvent(global::LightSwitchApplication.POListDetail s)
            {
                bool handled = false;
                s.POListDetail_Saving(ref handled);
                return handled;
            }
            private static void __POListDetail_InvokeSavedEvent(global::LightSwitchApplication.POListDetail s)
            {
                s.POListDetail_Saved();
            }
            private static bool __POListDetail_InvokeClosingEvent(global::LightSwitchApplication.POListDetail s)
            {
                bool cancel = false;
                s.POListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __POListDetail_InvokeCreated(global::LightSwitchApplication.POListDetail s)
            {
                s.POListDetail_Created();
            }
            private static void __POListDetail_InvokeActivated(global::LightSwitchApplication.POListDetail s)
            {
                s.POListDetail_Activated();
            }
            private static bool __POListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.POListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.POListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.POListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.POListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.POListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable POQuery(global::System.Nullable<int> SupplierID)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ProcurementData.PO,
                        (p) => ((SupplierID.HasValue == false) || (SupplierID.HasValue && (p.Supplier.id == SupplierID)))),
                    "Supplier");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PO_LinesQuery()
            {
                if (this.Screen.PO.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.PO.SelectedItem.Details.Properties.PO_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                            loader,
                                            "Proposal1"),
                                        "Proposal_Line1"),
                                    "Award_Selected1"),
                                "Award_Selected1.RFQ_Line1"),
                            "Award_Selected1.RFQ_Line1.RFQ_PItem"),
                        "Award_Selected1.RFQ_Line1.UOM1"),
                    "Award_Selected1.RFQ_PItem1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilterByAwardedSupplierIDQuery(global::System.Nullable<int> SupplierID, global::System.Nullable<int> RfqID)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                                global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                                    this.Screen.DataWorkspace.ProcurementData.FilterByAwardedSupplierID(SupplierID, RfqID),
                                                    (a) => (a.HasPO == false)),
                                                "RFQ_PItem1"),
                                            "RFQ_Line1"),
                                        "Proposal1"),
                                    "Proposal_Line1"),
                                "Proposal_Line1.RFQ_Line"),
                            "Proposal1.Supplier1"),
                        "Proposal1.RFQ_PItem"),
                    "RFQ_Line1.UOM1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PO_Lines1Query()
            {
                if (this.Screen.PO.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.PO_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.PO.SelectedItem.Details.Properties.PO_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO>.Data _PO;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data _PO_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data _FilterByAwardedSupplierID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int>.Data _RFQID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Data _RFQ_Number;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Data _RFQ_Description;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data _PO_Lines1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>>.Data _SupID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data _AddAwardToSelectedPOCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data _RemoveFromPOCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data _AddAwardToSelectedPOMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data _RemoveFromPOMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO> PO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line> PO_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected> FilterByAwardedSupplierID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.FilterByAwardedSupplierID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int> RFQID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string> RFQ_Number
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Number);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string> RFQ_Description
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.RFQ_Description);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line> PO_Lines1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.PO_Lines1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>> SupID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties.SupID);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass> AddAwardToSelectedPO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties.AddAwardToSelectedPO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass> RemoveFromPO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties.RemoveFromPO);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass> AddAwardToSelectedPO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties.AddAwardToSelectedPO);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass> RemoveFromPO
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties.RemoveFromPO);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    PO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "PO",
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_CreateQuery,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_SelectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_OnCollectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_OnLoaded);
                private static void _PO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO, sf);
                }
                private static void _PO_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_CreateQuery(global::LightSwitchApplication.POListDetail.DetailsClass d, object[] args)
                {
                    return d.POQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _PO_SelectionChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.PO_SelectionChanged();
                }
                private static void _PO_OnCollectionChanged(global::LightSwitchApplication.POListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Changed(e);
                }
                private static void _PO_OnLoaded(global::LightSwitchApplication.POListDetail s, bool succeeded)
                {
                    s.PO_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry
                    PO_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry(
                        "PO_Lines",
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_CreateQuery,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_SelectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines_OnLoaded);
                private static void _PO_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_Lines, sf);
                }
                private static void _PO_Lines_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_Lines_CreateQuery(global::LightSwitchApplication.POListDetail.DetailsClass d, object[] args)
                {
                    return d.PO_LinesQuery();
                }
                private static void _PO_Lines_SelectionChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.PO_Lines_SelectionChanged();
                }
                private static void _PO_Lines_OnCollectionChanged(global::LightSwitchApplication.POListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Lines_Changed(e);
                }
                private static void _PO_Lines_OnLoaded(global::LightSwitchApplication.POListDetail s, bool succeeded)
                {
                    s.PO_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry
                    FilterByAwardedSupplierID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry(
                        "FilterByAwardedSupplierID",
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_CreateQuery,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_SelectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_OnCollectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._FilterByAwardedSupplierID_OnLoaded);
                private static void _FilterByAwardedSupplierID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterByAwardedSupplierID, sf);
                }
                private static void _FilterByAwardedSupplierID_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterByAwardedSupplierID_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilterByAwardedSupplierID_CreateQuery(global::LightSwitchApplication.POListDetail.DetailsClass d, object[] args)
                {
                    return d.FilterByAwardedSupplierIDQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1]);
                }
                private static void _FilterByAwardedSupplierID_SelectionChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.FilterByAwardedSupplierID_SelectionChanged();
                }
                private static void _FilterByAwardedSupplierID_OnCollectionChanged(global::LightSwitchApplication.POListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilterByAwardedSupplierID_Changed(e);
                }
                private static void _FilterByAwardedSupplierID_OnLoaded(global::LightSwitchApplication.POListDetail s, bool succeeded)
                {
                    s.FilterByAwardedSupplierID_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int>.Entry
                    RFQID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int>.Entry(
                        "RFQID",
                        false,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQID_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQID_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQID_OnValueChanged);
                private static void _RFQID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQID, sf);
                }
                private static void _RFQID_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQID_Validate(r);
                }
                private static void _RFQID_OnValueChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.RFQID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Entry
                    RFQ_Number = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Entry(
                        "RFQ_Number",
                        false,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Number_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Number_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Number_OnValueChanged);
                private static void _RFQ_Number_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_Number, sf);
                }
                private static void _RFQ_Number_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_Number_Validate(r);
                }
                private static void _RFQ_Number_OnValueChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.RFQ_Number_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Entry
                    RFQ_Description = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Entry(
                        "RFQ_Description",
                        false,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Description_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Description_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._RFQ_Description_OnValueChanged);
                private static void _RFQ_Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQ_Description, sf);
                }
                private static void _RFQ_Description_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQ_Description_Validate(r);
                }
                private static void _RFQ_Description_OnValueChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.RFQ_Description_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry
                    PO_Lines1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry(
                        "PO_Lines1",
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_CreateQuery,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_SelectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_OnCollectionChanged,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._PO_Lines1_OnLoaded);
                private static void _PO_Lines1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::LightSwitchApplication.PO_Line>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_Lines1, sf);
                }
                private static void _PO_Lines1_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PO_Lines1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PO_Lines1_CreateQuery(global::LightSwitchApplication.POListDetail.DetailsClass d, object[] args)
                {
                    return d.PO_Lines1Query();
                }
                private static void _PO_Lines1_SelectionChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.PO_Lines1_SelectionChanged();
                }
                private static void _PO_Lines1_OnCollectionChanged(global::LightSwitchApplication.POListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PO_Lines1_Changed(e);
                }
                private static void _PO_Lines1_OnLoaded(global::LightSwitchApplication.POListDetail s, bool succeeded)
                {
                    s.PO_Lines1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>>.Entry
                    SupID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>>.Entry(
                        "SupID",
                        false,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._SupID_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._SupID_Validate,
                        global::LightSwitchApplication.POListDetail.DetailsClass.PropertySetProperties._SupID_OnValueChanged);
                private static void _SupID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SupID, sf);
                }
                private static void _SupID_Validate(global::LightSwitchApplication.POListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SupID_Validate(r);
                }
                private static void _SupID_OnValueChanged(global::LightSwitchApplication.POListDetail s)
                {
                    s.SupID_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry
                    AddAwardToSelectedPO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry(
                        "AddAwardToSelectedPO",
                        global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties._AddAwardToSelectedPO_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties._AddAwardToSelectedPO_CreateExecutableObject);
                private static void _AddAwardToSelectedPO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddAwardToSelectedPOCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddAwardToSelectedPO_CreateExecutableObject(global::LightSwitchApplication.POListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.POListDetail.DetailsClass)d).Methods.AddAwardToSelectedPO.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry
                    RemoveFromPO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry(
                        "RemoveFromPO",
                        global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties._RemoveFromPO_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.CommandSetProperties._RemoveFromPO_CreateExecutableObject);
                private static void _RemoveFromPO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveFromPOCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveFromPO_CreateExecutableObject(global::LightSwitchApplication.POListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.POListDetail.DetailsClass)d).Methods.RemoveFromPO.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry
                    AddAwardToSelectedPO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry(
                        "AddAwardToSelectedPO",
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._AddAwardToSelectedPO_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._AddAwardToSelectedPO_CanInvoke,
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._AddAwardToSelectedPO_InvokeMethod);
                private static void _AddAwardToSelectedPO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddAwardToSelectedPOMethod, sf);
                }
                private static global::System.Exception _AddAwardToSelectedPO_CanInvoke(global::LightSwitchApplication.POListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddAwardToSelectedPO_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddAwardToSelectedPO_InvokeMethod(global::LightSwitchApplication.POListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddAwardToSelectedPO_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry
                    RemoveFromPO = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Entry(
                        "RemoveFromPO",
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._RemoveFromPO_Stub,
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._RemoveFromPO_CanInvoke,
                        global::LightSwitchApplication.POListDetail.DetailsClass.MethodSetProperties._RemoveFromPO_InvokeMethod);
                private static void _RemoveFromPO_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.POListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.POListDetail, global::LightSwitchApplication.POListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.POListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveFromPOMethod, sf);
                }
                private static global::System.Exception _RemoveFromPO_CanInvoke(global::LightSwitchApplication.POListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveFromPO_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveFromPO_InvokeMethod(global::LightSwitchApplication.POListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveFromPO_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProposalsListDetail
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProposalsListDetail(string RFQNum, string RFQDesc) : base("LightSwitchApplication.Web:ProposalsListDetail")
        {
                this.RFQNum = RFQNum;
                this.RFQDesc = RFQDesc;
            global::LightSwitchApplication.ProposalsListDetail.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProposalsListDetail CreateInstance(string RFQNum, string RFQDesc)
        {
            return new global::LightSwitchApplication.ProposalsListDetail(
                        RFQNum
                        ,RFQDesc
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalsListDetail_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Proposals_SelectionChanged();

        partial void Proposals_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposals_Loaded(bool succeeded);

        partial void Proposal_Lines_SelectionChanged();

        partial void Proposal_Lines_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Loaded(bool succeeded);

        partial void RFQNum_Changed();

        partial void RFQDesc_Changed();

        partial void RFQFilter_Changed();

        partial void SelectedProposalLine_Changed();

        partial void AwardsByProposalID_SelectionChanged();

        partial void AwardsByProposalID_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AwardsByProposalID_Loaded(bool succeeded);

        partial void ProposalID_Changed();

        partial void RemoveSelectedAward_Changed();

        partial void FilterBYRfqnum_SelectionChanged();

        partial void FilterBYRfqnum_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterBYRfqnum_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Proposals visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal> Proposals
        {
            get
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.Proposals);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposals_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Proposal_Lines visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Proposal_Line> Proposal_Lines
        {
            get
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.Proposal_Lines);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Proposal_Lines_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQNum
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQNum);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQNum, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQNum_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RFQDesc
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQDesc);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQDesc, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQDesc_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int RFQFilter
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQFilter);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RFQFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool SelectedProposalLine
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.SelectedProposalLine);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.SelectedProposalLine, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SelectedProposalLine_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the AwardsByProposalID visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Award_Selected> AwardsByProposalID
        {
            get
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.AwardsByProposalID);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AwardsByProposalID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProposalID
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.ProposalID);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.ProposalID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProposalID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool RemoveSelectedAward
        {
            get 
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RemoveSelectedAward);
            }
            set
            {
                global::LightSwitchApplication.ProposalsListDetail.DetailsClass.SetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RemoveSelectedAward, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemoveSelectedAward_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FilterBYRfqnum visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RFQ_Line> FilterBYRfqnum
        {
            get
            {
                return global::LightSwitchApplication.ProposalsListDetail.DetailsClass.GetValue(this, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.FilterBYRfqnum);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterBYRfqnum_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the AwardProposalLine screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AwardProposalLine()
        {
            this.Details.Methods.AwardProposalLine.CreateInvocation().Execute();
        }
        partial void AwardProposalLine_CanExecute(ref bool result);
        partial void AwardProposalLine_Execute();

        /// <summary>
        /// Calls the RemoveFromAward screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RemoveFromAward()
        {
            this.Details.Methods.RemoveFromAward.CreateInvocation().Execute();
        }
        partial void RemoveFromAward_CanExecute(ref bool result);
        partial void RemoveFromAward_Execute();

        /// <summary>
        /// Calls the Proposal_LinesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Proposal_LinesAddAndEditNew()
        {
            this.Details.Methods.Proposal_LinesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void Proposal_LinesAddAndEditNew_CanExecute(ref bool result);
        partial void Proposal_LinesAddAndEditNew_Execute();

        /// <summary>
        /// Calls the AddProposal screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void AddProposal()
        {
            this.Details.Methods.AddProposal.CreateInvocation().Execute();
        }
        partial void AddProposal_CanExecute(ref bool result);
        partial void AddProposal_Execute();

        /// <summary>
        /// Calls the ShowPORegistrar screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ShowPORegistrar()
        {
            this.Details.Methods.ShowPORegistrar.CreateInvocation().Execute();
        }
        partial void ShowPORegistrar_CanExecute(ref bool result);
        partial void ShowPORegistrar_Execute();

        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySet, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSet, global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.Proposals;
                var initializeCommandEntry = global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.AwardProposalLine;
                var initializeMethodEntry = global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.AwardProposalLine;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                __ProposalsListDetailEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeSavingEvent,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeSavedEvent,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeClosingEvent,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeCreated,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeActivated,
                    global::LightSwitchApplication.ProposalsListDetail.DetailsClass.__ProposalsListDetail_InvokeSaveErrorEvent);
            private static void __ProposalsListDetail_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProposalsListDetail s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProposalsListDetail_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProposalsListDetail_InvokeSavingEvent(global::LightSwitchApplication.ProposalsListDetail s)
            {
                bool handled = false;
                s.ProposalsListDetail_Saving(ref handled);
                return handled;
            }
            private static void __ProposalsListDetail_InvokeSavedEvent(global::LightSwitchApplication.ProposalsListDetail s)
            {
                s.ProposalsListDetail_Saved();
            }
            private static bool __ProposalsListDetail_InvokeClosingEvent(global::LightSwitchApplication.ProposalsListDetail s)
            {
                bool cancel = false;
                s.ProposalsListDetail_Closing(ref cancel);
                return cancel;
            }
            private static void __ProposalsListDetail_InvokeCreated(global::LightSwitchApplication.ProposalsListDetail s)
            {
                s.ProposalsListDetail_Created();
            }
            private static void __ProposalsListDetail_InvokeActivated(global::LightSwitchApplication.ProposalsListDetail s)
            {
                s.ProposalsListDetail_Activated();
            }
            private static bool __ProposalsListDetail_InvokeSaveErrorEvent(global::LightSwitchApplication.ProposalsListDetail s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProposalsListDetail_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProposalsQuery(string RFQn)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                this.Screen.DataWorkspace.ProcurementData.Proposals,
                                (p) => (p.RFQ_PItem.PkgNo.CompareTo(RFQn) == 0)),
                            (p) => p.Supplier1.SupplierName),
                        "Supplier1"),
                    "RFQ_PItem");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Proposal_LinesQuery()
            {
                if (this.Screen.Proposals.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Proposal_Line>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Proposals.SelectedItem.Details.Properties.Proposal_Lines).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                    loader,
                                    (p) => (p.AwardIt == false)),
                                "RFQ_Line"),
                            "Proposal1"),
                        "RFQ_Line.RFQ_PItem"),
                    "RFQ_Line.UOM1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AwardsByProposalIDQuery(global::System.Nullable<int> ProposalID)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                this.Screen.DataWorkspace.ProcurementData.AwardsByProposalID(ProposalID),
                                "RFQ_PItem1"),
                            "RFQ_Line1"),
                        "Proposal1"),
                    "Proposal_Line1");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilterBYRfqnumQuery(global::System.Nullable<int> PkgNumberID)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ProcurementData.FilterBYRfqnum(PkgNumberID),
                        "RFQ_PItem"),
                    "UOM1");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data _Proposals;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data _Proposal_Lines;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Data _RFQNum;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Data _RFQDesc;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Data _RFQFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Data _SelectedProposalLine;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data _AwardsByProposalID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Data _ProposalID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Data _RemoveSelectedAward;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data _FilterBYRfqnum;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _AwardProposalLineCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _RemoveFromAwardCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _AddProposalCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _ShowPORegistrarCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _AwardProposalLineMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _RemoveFromAwardMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _Proposal_LinesAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _AddProposalMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _ShowPORegistrarMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data _MethodMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal> Proposals
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.Proposals);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line> Proposal_Lines
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.Proposal_Lines);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string> RFQNum
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQNum);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string> RFQDesc
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQDesc);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int> RFQFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RFQFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool> SelectedProposalLine
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.SelectedProposalLine);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected> AwardsByProposalID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.AwardsByProposalID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int> ProposalID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.ProposalID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool> RemoveSelectedAward
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.RemoveSelectedAward);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line> FilterBYRfqnum
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties.FilterBYRfqnum);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> AwardProposalLine
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.AwardProposalLine);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> RemoveFromAward
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.RemoveFromAward);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> Proposal_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.Proposal_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> AddProposal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.AddProposal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> ShowPORegistrar
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.ShowPORegistrar);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> AwardProposalLine
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.AwardProposalLine);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> RemoveFromAward
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.RemoveFromAward);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> Proposal_LinesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.Proposal_LinesAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> AddProposal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.AddProposal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> ShowPORegistrar
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.ShowPORegistrar);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry
                    Proposals = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Entry(
                        "Proposals",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_CreateQuery,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_SelectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_OnCollectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposals_OnLoaded);
                private static void _Proposals_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposals, sf);
                }
                private static void _Proposals_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Proposals_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Proposals_CreateQuery(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object[] args)
                {
                    return d.ProposalsQuery((string)args[0]);
                }
                private static void _Proposals_SelectionChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.Proposals_SelectionChanged();
                }
                private static void _Proposals_OnCollectionChanged(global::LightSwitchApplication.ProposalsListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Proposals_Changed(e);
                }
                private static void _Proposals_OnLoaded(global::LightSwitchApplication.ProposalsListDetail s, bool succeeded)
                {
                    s.Proposals_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry
                    Proposal_Lines = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Entry(
                        "Proposal_Lines",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_CreateQuery,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_SelectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_OnCollectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._Proposal_Lines_OnLoaded);
                private static void _Proposal_Lines_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Proposal_Line>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_Lines, sf);
                }
                private static void _Proposal_Lines_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Proposal_Lines_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Proposal_Lines_CreateQuery(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object[] args)
                {
                    return d.Proposal_LinesQuery();
                }
                private static void _Proposal_Lines_SelectionChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.Proposal_Lines_SelectionChanged();
                }
                private static void _Proposal_Lines_OnCollectionChanged(global::LightSwitchApplication.ProposalsListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Proposal_Lines_Changed(e);
                }
                private static void _Proposal_Lines_OnLoaded(global::LightSwitchApplication.ProposalsListDetail s, bool succeeded)
                {
                    s.Proposal_Lines_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Entry
                    RFQNum = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Entry(
                        "RFQNum",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQNum_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQNum_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQNum_OnValueChanged);
                private static void _RFQNum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQNum, sf);
                }
                private static void _RFQNum_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQNum_Validate(r);
                }
                private static void _RFQNum_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.RFQNum_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Entry
                    RFQDesc = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Entry(
                        "RFQDesc",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQDesc_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQDesc_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQDesc_OnValueChanged);
                private static void _RFQDesc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQDesc, sf);
                }
                private static void _RFQDesc_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQDesc_Validate(r);
                }
                private static void _RFQDesc_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.RFQDesc_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Entry
                    RFQFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Entry(
                        "RFQFilter",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQFilter_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQFilter_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RFQFilter_OnValueChanged);
                private static void _RFQFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RFQFilter, sf);
                }
                private static void _RFQFilter_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RFQFilter_Validate(r);
                }
                private static void _RFQFilter_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.RFQFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Entry
                    SelectedProposalLine = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Entry(
                        "SelectedProposalLine",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._SelectedProposalLine_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._SelectedProposalLine_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._SelectedProposalLine_OnValueChanged);
                private static void _SelectedProposalLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._SelectedProposalLine, sf);
                }
                private static void _SelectedProposalLine_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SelectedProposalLine_Validate(r);
                }
                private static void _SelectedProposalLine_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.SelectedProposalLine_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry
                    AwardsByProposalID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Entry(
                        "AwardsByProposalID",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_CreateQuery,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_SelectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_OnCollectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._AwardsByProposalID_OnLoaded);
                private static void _AwardsByProposalID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.Award_Selected>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AwardsByProposalID, sf);
                }
                private static void _AwardsByProposalID_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AwardsByProposalID_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AwardsByProposalID_CreateQuery(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object[] args)
                {
                    return d.AwardsByProposalIDQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _AwardsByProposalID_SelectionChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.AwardsByProposalID_SelectionChanged();
                }
                private static void _AwardsByProposalID_OnCollectionChanged(global::LightSwitchApplication.ProposalsListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AwardsByProposalID_Changed(e);
                }
                private static void _AwardsByProposalID_OnLoaded(global::LightSwitchApplication.ProposalsListDetail s, bool succeeded)
                {
                    s.AwardsByProposalID_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Entry
                    ProposalID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Entry(
                        "ProposalID",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._ProposalID_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._ProposalID_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._ProposalID_OnValueChanged);
                private static void _ProposalID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ProposalID, sf);
                }
                private static void _ProposalID_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProposalID_Validate(r);
                }
                private static void _ProposalID_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.ProposalID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Entry
                    RemoveSelectedAward = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Entry(
                        "RemoveSelectedAward",
                        false,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RemoveSelectedAward_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RemoveSelectedAward_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._RemoveSelectedAward_OnValueChanged);
                private static void _RemoveSelectedAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveSelectedAward, sf);
                }
                private static void _RemoveSelectedAward_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.RemoveSelectedAward_Validate(r);
                }
                private static void _RemoveSelectedAward_OnValueChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.RemoveSelectedAward_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry
                    FilterBYRfqnum = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Entry(
                        "FilterBYRfqnum",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_Validate,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_CreateQuery,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_SelectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_OnCollectionChanged,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.PropertySetProperties._FilterBYRfqnum_OnLoaded);
                private static void _FilterBYRfqnum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::LightSwitchApplication.RFQ_Line>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterBYRfqnum, sf);
                }
                private static void _FilterBYRfqnum_Validate(global::LightSwitchApplication.ProposalsListDetail s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterBYRfqnum_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilterBYRfqnum_CreateQuery(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object[] args)
                {
                    return d.FilterBYRfqnumQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _FilterBYRfqnum_SelectionChanged(global::LightSwitchApplication.ProposalsListDetail s)
                {
                    s.FilterBYRfqnum_SelectionChanged();
                }
                private static void _FilterBYRfqnum_OnCollectionChanged(global::LightSwitchApplication.ProposalsListDetail s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilterBYRfqnum_Changed(e);
                }
                private static void _FilterBYRfqnum_OnLoaded(global::LightSwitchApplication.ProposalsListDetail s, bool succeeded)
                {
                    s.FilterBYRfqnum_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    AwardProposalLine = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "AwardProposalLine",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._AwardProposalLine_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._AwardProposalLine_CreateExecutableObject);
                private static void _AwardProposalLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AwardProposalLineCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AwardProposalLine_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.AwardProposalLine.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    RemoveFromAward = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "RemoveFromAward",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._RemoveFromAward_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._RemoveFromAward_CreateExecutableObject);
                private static void _RemoveFromAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveFromAwardCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RemoveFromAward_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.RemoveFromAward.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._Proposal_LinesAddAndEditNew_CreateExecutableObject);
                private static void _Proposal_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Proposal_LinesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.Proposal_LinesAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    AddProposal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "AddProposal",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._AddProposal_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._AddProposal_CreateExecutableObject);
                private static void _AddProposal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddProposalCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _AddProposal_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.AddProposal.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    ShowPORegistrar = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "ShowPORegistrar",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._ShowPORegistrar_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._ShowPORegistrar_CreateExecutableObject);
                private static void _ShowPORegistrar_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowPORegistrarCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ShowPORegistrar_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.ShowPORegistrar.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProposalsListDetail.DetailsClass)d).Methods.Method.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    AwardProposalLine = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "AwardProposalLine",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AwardProposalLine_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AwardProposalLine_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AwardProposalLine_InvokeMethod);
                private static void _AwardProposalLine_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AwardProposalLineMethod, sf);
                }
                private static global::System.Exception _AwardProposalLine_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AwardProposalLine_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AwardProposalLine_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AwardProposalLine_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    RemoveFromAward = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "RemoveFromAward",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._RemoveFromAward_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._RemoveFromAward_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._RemoveFromAward_InvokeMethod);
                private static void _RemoveFromAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._RemoveFromAwardMethod, sf);
                }
                private static global::System.Exception _RemoveFromAward_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RemoveFromAward_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RemoveFromAward_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RemoveFromAward_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    Proposal_LinesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "Proposal_LinesAddAndEditNew",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Proposal_LinesAddAndEditNew_InvokeMethod);
                private static void _Proposal_LinesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._Proposal_LinesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _Proposal_LinesAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Proposal_LinesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Proposal_LinesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Proposal_LinesAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    AddProposal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "AddProposal",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AddProposal_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AddProposal_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._AddProposal_InvokeMethod);
                private static void _AddProposal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._AddProposalMethod, sf);
                }
                private static global::System.Exception _AddProposal_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.AddProposal_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _AddProposal_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.AddProposal_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    ShowPORegistrar = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "ShowPORegistrar",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._ShowPORegistrar_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._ShowPORegistrar_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._ShowPORegistrar_InvokeMethod);
                private static void _ShowPORegistrar_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowPORegistrarMethod, sf);
                }
                private static global::System.Exception _ShowPORegistrar_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ShowPORegistrar_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ShowPORegistrar_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ShowPORegistrar_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.ProposalsListDetail.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProposalsListDetail.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProposalsListDetail, global::LightSwitchApplication.ProposalsListDetail.DetailsClass>.Data> c, global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.ProposalsListDetail.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

            }
        }
    }
}
