

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ChangeOrder : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ChangeOrder entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ChangeOrder()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ChangeOrder(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ChangeOrder> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ChangeOrder.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeOrder_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeOrder_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ChangeOrderNum
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ChangeOrderNum);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ChangeOrderNum, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeOrderNum_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeOrderNum_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeOrderNum_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PCN
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PCN);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PCN, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCN_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCN_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PCN_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> COAward
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.COAward);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.COAward, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void COAward_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void COAward_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void COAward_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CO_Description
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Description);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CO_WBS
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_WBS);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_WBS, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_WBS_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_WBS_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_WBS_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> CO_Qty
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Qty);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Qty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Qty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Qty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_Qty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> CO_CostPerUnit
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_CostPerUnit);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_CostPerUnit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_CostPerUnit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_CostPerUnit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CO_CostPerUnit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.UOM UOM1
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOM1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOM1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UOM1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PO PO1
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PO_Line PO_Line1
        {
            get
            {
                return global::LightSwitchApplication.ChangeOrder.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1);
            }
            set
            {
                global::LightSwitchApplication.ChangeOrder.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Line1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Line1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PO_Line1_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ChangeOrder,
                global::LightSwitchApplication.ChangeOrder.DetailsClass,
                global::LightSwitchApplication.ChangeOrder.DetailsClass.IImplementation,
                global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>.Entry
                __ChangeOrderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>.Entry(
                    global::LightSwitchApplication.ChangeOrder.DetailsClass.__ChangeOrder_CreateNew,
                    global::LightSwitchApplication.ChangeOrder.DetailsClass.__ChangeOrder_Created,
                    global::LightSwitchApplication.ChangeOrder.DetailsClass.__ChangeOrder_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ChangeOrder __ChangeOrder_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ChangeOrder> es)
            {
                return new global::LightSwitchApplication.ChangeOrder(es);
            }
            private static void __ChangeOrder_Created(global::LightSwitchApplication.ChangeOrder e)
            {
                e.ChangeOrder_Created();
            }
            private static bool __ChangeOrder_AllowSaveWithErrors(global::LightSwitchApplication.ChangeOrder e)
            {
                bool result = false;
                e.ChangeOrder_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal> ChangeOrderNum
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.ChangeOrderNum) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string> PCN
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PCN) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>> COAward
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.COAward) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string> CO_Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string> CO_WBS
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_WBS) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>> CO_Qty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_Qty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>> CO_CostPerUnit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.CO_CostPerUnit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM> UOM1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO> PO1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line> PO_Line1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new decimal ChangeOrderNum { get; set; }
                new string PCN { get; set; }
                new global::System.Nullable<global::System.DateTime> COAward { get; set; }
                new string CO_Description { get; set; }
                new string CO_WBS { get; set; }
                new global::System.Nullable<decimal> CO_Qty { get; set; }
                new global::System.Nullable<decimal> CO_CostPerUnit { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation UOM1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation PO1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation PO_Line1 { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal>.Entry
                    ChangeOrderNum = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal>.Entry(
                        "ChangeOrderNum",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._ChangeOrderNum_OnValueChanged);
                private static void _ChangeOrderNum_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangeOrderNum, sf);
                }
                private static bool _ChangeOrderNum_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.ChangeOrderNum_IsReadOnly(ref result);
                    return result;
                }
                private static void _ChangeOrderNum_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ChangeOrderNum_Validate(r);
                }
                private static decimal _ChangeOrderNum_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangeOrderNum;
                }
                private static void _ChangeOrderNum_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.ChangeOrderNum = v;
                }
                private static void _ChangeOrderNum_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.ChangeOrderNum_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry
                    PCN = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry(
                        "PCN",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PCN_OnValueChanged);
                private static void _PCN_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._PCN, sf);
                }
                private static bool _PCN_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.PCN_IsReadOnly(ref result);
                    return result;
                }
                private static void _PCN_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PCN_Validate(r);
                }
                private static string _PCN_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.PCN;
                }
                private static void _PCN_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PCN = v;
                }
                private static void _PCN_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.PCN_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    COAward = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "COAward",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._COAward_OnValueChanged);
                private static void _COAward_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._COAward, sf);
                }
                private static bool _COAward_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.COAward_IsReadOnly(ref result);
                    return result;
                }
                private static void _COAward_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.COAward_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _COAward_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.COAward;
                }
                private static void _COAward_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.COAward = global::LightSwitchApplication.ChangeOrder.DetailsClass.TruncateDate(v);
                }
                private static void _COAward_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.COAward_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry
                    CO_Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry(
                        "CO_Description",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Description_OnValueChanged);
                private static void _CO_Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._CO_Description, sf);
                }
                private static bool _CO_Description_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.CO_Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _CO_Description_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CO_Description_Validate(r);
                }
                private static string _CO_Description_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.CO_Description;
                }
                private static void _CO_Description_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CO_Description = v;
                }
                private static void _CO_Description_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.CO_Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry
                    CO_WBS = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Entry(
                        "CO_WBS",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_WBS_OnValueChanged);
                private static void _CO_WBS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._CO_WBS, sf);
                }
                private static bool _CO_WBS_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.CO_WBS_IsReadOnly(ref result);
                    return result;
                }
                private static void _CO_WBS_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CO_WBS_Validate(r);
                }
                private static string _CO_WBS_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.CO_WBS;
                }
                private static void _CO_WBS_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CO_WBS = v;
                }
                private static void _CO_WBS_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.CO_WBS_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Entry
                    CO_Qty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "CO_Qty",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_Qty_OnValueChanged);
                private static void _CO_Qty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._CO_Qty, sf);
                }
                private static bool _CO_Qty_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.CO_Qty_IsReadOnly(ref result);
                    return result;
                }
                private static void _CO_Qty_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CO_Qty_Validate(r);
                }
                private static global::System.Nullable<decimal> _CO_Qty_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.CO_Qty;
                }
                private static void _CO_Qty_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.CO_Qty = v;
                }
                private static void _CO_Qty_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.CO_Qty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Entry
                    CO_CostPerUnit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "CO_CostPerUnit",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._CO_CostPerUnit_OnValueChanged);
                private static void _CO_CostPerUnit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._CO_CostPerUnit, sf);
                }
                private static bool _CO_CostPerUnit_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.CO_CostPerUnit_IsReadOnly(ref result);
                    return result;
                }
                private static void _CO_CostPerUnit_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CO_CostPerUnit_Validate(r);
                }
                private static global::System.Nullable<decimal> _CO_CostPerUnit_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.CO_CostPerUnit;
                }
                private static void _CO_CostPerUnit_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.CO_CostPerUnit = v;
                }
                private static void _CO_CostPerUnit_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.CO_CostPerUnit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM>.Entry
                    UOM1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM>.Entry(
                        "UOM1",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_GetCoreImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_Refresh,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._UOM1_OnValueChanged);
                private static void _UOM1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._UOM1, sf);
                }
                private static bool _UOM1_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.UOM1_IsReadOnly(ref result);
                    return result;
                }
                private static void _UOM1_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UOM1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _UOM1_GetCoreImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.UOM1;
                }
                private static global::LightSwitchApplication.UOM _UOM1_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.UOM, global::LightSwitchApplication.UOM.DetailsClass>(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1, ref d._UOM1);
                }
                private static void _UOM1_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::LightSwitchApplication.UOM v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1, ref d._UOM1, (i, ev) => i.UOM1 = ev, v);
                }
                private static void _UOM1_Refresh(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.UOM1, ref d._UOM1);
                }
                private static void _UOM1_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.UOM1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO>.Entry
                    PO1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO>.Entry(
                        "PO1",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_GetCoreImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_Refresh,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO1_OnValueChanged);
                private static void _PO1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._PO1, sf);
                }
                private static bool _PO1_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.PO1_IsReadOnly(ref result);
                    return result;
                }
                private static void _PO1_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PO1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _PO1_GetCoreImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.PO1;
                }
                private static global::LightSwitchApplication.PO _PO1_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.PO, global::LightSwitchApplication.PO.DetailsClass>(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1, ref d._PO1);
                }
                private static void _PO1_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::LightSwitchApplication.PO v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1, ref d._PO1, (i, ev) => i.PO1 = ev, v);
                }
                private static void _PO1_Refresh(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO1, ref d._PO1);
                }
                private static void _PO1_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.PO1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry
                    PO_Line1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line>.Entry(
                        "PO_Line1",
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_Stub,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_Validate,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_GetCoreImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_GetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_SetImplementationValue,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_Refresh,
                        global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties._PO_Line1_OnValueChanged);
                private static void _PO_Line1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeOrder.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line>.Data> c, global::LightSwitchApplication.ChangeOrder.DetailsClass d, object sf)
                {
                    c(d, ref d._PO_Line1, sf);
                }
                private static bool _PO_Line1_ComputeIsReadOnly(global::LightSwitchApplication.ChangeOrder e)
                {
                    bool result = false;
                    e.PO_Line1_IsReadOnly(ref result);
                    return result;
                }
                private static void _PO_Line1_Validate(global::LightSwitchApplication.ChangeOrder e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PO_Line1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _PO_Line1_GetCoreImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.ImplementationEntity.PO_Line1;
                }
                private static global::LightSwitchApplication.PO_Line _PO_Line1_GetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.PO_Line, global::LightSwitchApplication.PO_Line.DetailsClass>(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1, ref d._PO_Line1);
                }
                private static void _PO_Line1_SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass d, global::LightSwitchApplication.PO_Line v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1, ref d._PO_Line1, (i, ev) => i.PO_Line1 = ev, v);
                }
                private static void _PO_Line1_Refresh(global::LightSwitchApplication.ChangeOrder.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ChangeOrder.DetailsClass.PropertySetProperties.PO_Line1, ref d._PO_Line1);
                }
                private static void _PO_Line1_OnValueChanged(global::LightSwitchApplication.ChangeOrder e)
                {
                    e.PO_Line1_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, decimal>.Data _ChangeOrderNum;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data _PCN;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _COAward;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data _CO_Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, string>.Data _CO_WBS;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Data _CO_Qty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::System.Nullable<decimal>>.Data _CO_CostPerUnit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.UOM>.Data _UOM1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO>.Data _PO1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeOrder, global::LightSwitchApplication.ChangeOrder.DetailsClass, global::LightSwitchApplication.PO_Line>.Data _PO_Line1;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Client_Approved : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Client_Approved entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Client_Approved()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Client_Approved(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Client_Approved> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Client_Approved.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approved_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Approved_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ServiceAgreement
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ServiceAgreement);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ServiceAgreement, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceAgreement_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceAgreement_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ServiceAgreement_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SupplierID_No
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SupplierID_No);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SupplierID_No, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierID_No_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierID_No_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierID_No_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool SiteApproved
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SiteApproved);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SiteApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SiteApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SiteApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SiteApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Preference Preference1
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preference1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preference1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Preference1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Supplier Supplier
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supplier_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Client Client1
        {
            get
            {
                return global::LightSwitchApplication.Client_Approved.DetailsClass.GetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1);
            }
            set
            {
                global::LightSwitchApplication.Client_Approved.DetailsClass.SetValue(this, global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client1_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Client_Approved,
                global::LightSwitchApplication.Client_Approved.DetailsClass,
                global::LightSwitchApplication.Client_Approved.DetailsClass.IImplementation,
                global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>.Entry
                __Client_ApprovedEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>.Entry(
                    global::LightSwitchApplication.Client_Approved.DetailsClass.__Client_Approved_CreateNew,
                    global::LightSwitchApplication.Client_Approved.DetailsClass.__Client_Approved_Created,
                    global::LightSwitchApplication.Client_Approved.DetailsClass.__Client_Approved_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Client_Approved __Client_Approved_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Client_Approved> es)
            {
                return new global::LightSwitchApplication.Client_Approved(es);
            }
            private static void __Client_Approved_Created(global::LightSwitchApplication.Client_Approved e)
            {
                e.Client_Approved_Created();
            }
            private static bool __Client_Approved_AllowSaveWithErrors(global::LightSwitchApplication.Client_Approved e)
            {
                bool result = false;
                e.Client_Approved_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string> ServiceAgreement
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.ServiceAgreement) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string> SupplierID_No
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SupplierID_No) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool> SiteApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.SiteApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference> Preference1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier> Supplier
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client> Client1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string ServiceAgreement { get; set; }
                new string SupplierID_No { get; set; }
                new bool SiteApproved { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Preference1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Supplier { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Client1 { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Entry
                    ServiceAgreement = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Entry(
                        "ServiceAgreement",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._ServiceAgreement_OnValueChanged);
                private static void _ServiceAgreement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._ServiceAgreement, sf);
                }
                private static bool _ServiceAgreement_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.ServiceAgreement_IsReadOnly(ref result);
                    return result;
                }
                private static void _ServiceAgreement_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ServiceAgreement_Validate(r);
                }
                private static string _ServiceAgreement_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.ServiceAgreement;
                }
                private static void _ServiceAgreement_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ServiceAgreement = v;
                }
                private static void _ServiceAgreement_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.ServiceAgreement_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Entry
                    SupplierID_No = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Entry(
                        "SupplierID_No",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SupplierID_No_OnValueChanged);
                private static void _SupplierID_No_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._SupplierID_No, sf);
                }
                private static bool _SupplierID_No_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.SupplierID_No_IsReadOnly(ref result);
                    return result;
                }
                private static void _SupplierID_No_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SupplierID_No_Validate(r);
                }
                private static string _SupplierID_No_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.SupplierID_No;
                }
                private static void _SupplierID_No_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SupplierID_No = v;
                }
                private static void _SupplierID_No_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.SupplierID_No_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool>.Entry
                    SiteApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool>.Entry(
                        "SiteApproved",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._SiteApproved_OnValueChanged);
                private static void _SiteApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._SiteApproved, sf);
                }
                private static bool _SiteApproved_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.SiteApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _SiteApproved_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SiteApproved_Validate(r);
                }
                private static bool _SiteApproved_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.SiteApproved;
                }
                private static void _SiteApproved_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.SiteApproved = v;
                }
                private static void _SiteApproved_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.SiteApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference>.Entry
                    Preference1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference>.Entry(
                        "Preference1",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_Refresh,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Preference1_OnValueChanged);
                private static void _Preference1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._Preference1, sf);
                }
                private static bool _Preference1_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.Preference1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Preference1_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Preference1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Preference1_GetCoreImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.Preference1;
                }
                private static global::LightSwitchApplication.Preference _Preference1_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Preference, global::LightSwitchApplication.Preference.DetailsClass>(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1, ref d._Preference1);
                }
                private static void _Preference1_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, global::LightSwitchApplication.Preference v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1, ref d._Preference1, (i, ev) => i.Preference1 = ev, v);
                }
                private static void _Preference1_Refresh(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Preference1, ref d._Preference1);
                }
                private static void _Preference1_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.Preference1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier>.Entry
                    Supplier = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier>.Entry(
                        "Supplier",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_GetCoreImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_Refresh,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Supplier_OnValueChanged);
                private static void _Supplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._Supplier, sf);
                }
                private static bool _Supplier_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.Supplier_IsReadOnly(ref result);
                    return result;
                }
                private static void _Supplier_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Supplier_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Supplier_GetCoreImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.Supplier;
                }
                private static global::LightSwitchApplication.Supplier _Supplier_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Supplier, global::LightSwitchApplication.Supplier.DetailsClass>(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier, ref d._Supplier);
                }
                private static void _Supplier_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, global::LightSwitchApplication.Supplier v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier, ref d._Supplier, (i, ev) => i.Supplier = ev, v);
                }
                private static void _Supplier_Refresh(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Supplier, ref d._Supplier);
                }
                private static void _Supplier_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.Supplier_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    Client1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "Client1",
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_Stub,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_Validate,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_GetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_SetImplementationValue,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_Refresh,
                        global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties._Client1_OnValueChanged);
                private static void _Client1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client_Approved.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.Client_Approved.DetailsClass d, object sf)
                {
                    c(d, ref d._Client1, sf);
                }
                private static bool _Client1_ComputeIsReadOnly(global::LightSwitchApplication.Client_Approved e)
                {
                    bool result = false;
                    e.Client1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Client1_Validate(global::LightSwitchApplication.Client_Approved e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Client1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Client1_GetCoreImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.ImplementationEntity.Client1;
                }
                private static global::LightSwitchApplication.Client _Client1_GetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1, ref d._Client1);
                }
                private static void _Client1_SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass d, global::LightSwitchApplication.Client v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1, ref d._Client1, (i, ev) => i.Client1 = ev, v);
                }
                private static void _Client1_Refresh(global::LightSwitchApplication.Client_Approved.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Client_Approved.DetailsClass.PropertySetProperties.Client1, ref d._Client1);
                }
                private static void _Client1_OnValueChanged(global::LightSwitchApplication.Client_Approved e)
                {
                    e.Client1_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Data _ServiceAgreement;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, string>.Data _SupplierID_No;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, bool>.Data _SiteApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Preference>.Data _Preference1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Supplier>.Data _Supplier;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Client_Approved, global::LightSwitchApplication.Client_Approved.DetailsClass, global::LightSwitchApplication.Client>.Data _Client1;
            
        }
    
        #endregion
    }
    
    #endregion
}
